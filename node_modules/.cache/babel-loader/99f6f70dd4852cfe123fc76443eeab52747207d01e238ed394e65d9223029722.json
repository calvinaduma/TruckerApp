{"ast":null,"code":"import _slicedToArray from \"/Users/carterbrewer/Downloads/trucker_app-main/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { jsx } from 'react/jsx-runtime';\nimport { useState, useEffect, useCallback, useMemo } from 'react';\nimport { Notifications } from '@aws-amplify/notifications';\nimport InAppMessagingContext from '../InAppMessagingContext/InAppMessagingContext.js';\nvar InAppMessaging = Notifications.InAppMessaging;\nfunction InAppMessagingProvider(_ref) {\n  var children = _ref.children;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    message = _useState2[0],\n    setMessage = _useState2[1];\n  useEffect(function () {\n    var listener = InAppMessaging.onMessageReceived(function (message) {\n      setMessage(message);\n    });\n    return listener.remove;\n  }, []);\n  var clearMessage = useCallback(function () {\n    setMessage(null);\n  }, []);\n  var value = useMemo(function () {\n    return {\n      clearMessage: clearMessage,\n      displayMessage: setMessage,\n      message: message\n    };\n  }, [clearMessage, message]);\n  return jsx(InAppMessagingContext.Provider, Object.assign({\n    value: value\n  }, {\n    children: children\n  }));\n}\nexport { InAppMessagingProvider as default };","map":{"version":3,"names":["jsx","useState","useEffect","useCallback","useMemo","Notifications","InAppMessagingContext","InAppMessaging","InAppMessagingProvider","children","message","setMessage","listener","onMessageReceived","remove","clearMessage","value","displayMessage","Provider","Object","assign","default"],"sources":["/Users/carterbrewer/Downloads/trucker_app-main/node_modules/@aws-amplify/ui-react-core/dist/esm/InAppMessaging/context/InAppMessagingProvider/InAppMessagingProvider.js"],"sourcesContent":["import { jsx } from 'react/jsx-runtime';\nimport { useState, useEffect, useCallback, useMemo } from 'react';\nimport { Notifications } from '@aws-amplify/notifications';\nimport InAppMessagingContext from '../InAppMessagingContext/InAppMessagingContext.js';\n\nconst { InAppMessaging } = Notifications;\nfunction InAppMessagingProvider({ children, }) {\n    const [message, setMessage] = useState(null);\n    useEffect(() => {\n        const listener = InAppMessaging.onMessageReceived((message) => {\n            setMessage(message);\n        });\n        return listener.remove;\n    }, []);\n    const clearMessage = useCallback(() => {\n        setMessage(null);\n    }, []);\n    const value = useMemo(() => ({\n        clearMessage,\n        displayMessage: setMessage,\n        message,\n    }), [clearMessage, message]);\n    return (jsx(InAppMessagingContext.Provider, Object.assign({ value: value }, { children: children })));\n}\n\nexport { InAppMessagingProvider as default };\n"],"mappings":";AAAA,SAASA,GAAG,QAAQ,mBAAmB;AACvC,SAASC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,EAAEC,OAAO,QAAQ,OAAO;AACjE,SAASC,aAAa,QAAQ,4BAA4B;AAC1D,OAAOC,qBAAqB,MAAM,mDAAmD;AAErF,IAAQC,cAAc,GAAKF,aAAa,CAAhCE,cAAc;AACtB,SAASC,sBAAsB,OAAgB;EAAA,IAAbC,QAAQ,QAARA,QAAQ;EACtC,gBAA8BR,QAAQ,CAAC,IAAI,CAAC;IAAA;IAArCS,OAAO;IAAEC,UAAU;EAC1BT,SAAS,CAAC,YAAM;IACZ,IAAMU,QAAQ,GAAGL,cAAc,CAACM,iBAAiB,CAAC,UAACH,OAAO,EAAK;MAC3DC,UAAU,CAACD,OAAO,CAAC;IACvB,CAAC,CAAC;IACF,OAAOE,QAAQ,CAACE,MAAM;EAC1B,CAAC,EAAE,EAAE,CAAC;EACN,IAAMC,YAAY,GAAGZ,WAAW,CAAC,YAAM;IACnCQ,UAAU,CAAC,IAAI,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EACN,IAAMK,KAAK,GAAGZ,OAAO,CAAC;IAAA,OAAO;MACzBW,YAAY,EAAZA,YAAY;MACZE,cAAc,EAAEN,UAAU;MAC1BD,OAAO,EAAPA;IACJ,CAAC;EAAA,CAAC,EAAE,CAACK,YAAY,EAAEL,OAAO,CAAC,CAAC;EAC5B,OAAQV,GAAG,CAACM,qBAAqB,CAACY,QAAQ,EAAEC,MAAM,CAACC,MAAM,CAAC;IAAEJ,KAAK,EAAEA;EAAM,CAAC,EAAE;IAAEP,QAAQ,EAAEA;EAAS,CAAC,CAAC,CAAC;AACxG;AAEA,SAASD,sBAAsB,IAAIa,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}