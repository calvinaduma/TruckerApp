{"ast":null,"code":"import _regeneratorRuntime from \"/Users/carterbrewer/Downloads/trucker_app-main/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nimport { debounce } from \"debounce\";\nimport { createElement, removeElement } from \"../utils\";\nimport { createErrorIcon } from \"./icons\";\nimport { createEditIcon, createPopupStep1Icon, createPopupStep2Icon, createPopupStep3Icon, createPopupStep4Icon, createTrashIcon, createDeleteSuccessIcon, createCloseIcon } from \"./icons\";\nexport function AmplifyGeofenceControlUI(geofenceControl, geofenceControlContainer) {\n  var _addGeofenceContainer;\n  var _deleteGeofenceContainer;\n  var _addGeofencebutton;\n  var _checkboxAll;\n  var _geofenceList;\n  var _createContainer;\n  var _geofenceTitle;\n  var _checkBoxAllAndCreateContainer;\n  var _checkBoxAllContainer;\n  var _circleModeContainer;\n  var _polygonModeContainer;\n  var _deletePopdownContainer;\n  var _errorDiv;\n  var _geofenceCreateRadiusInput;\n  function registerControlPosition(map, positionName) {\n    if (map._controlPositions[positionName]) {\n      return;\n    }\n    var positionContainer = document.createElement(\"div\");\n    positionContainer.className = \"maplibregl-ctrl-\".concat(positionName);\n    map._controlContainer.appendChild(positionContainer);\n    map._controlPositions[positionName] = positionContainer;\n  }\n  /************************************************************\n   * Create Geofence Controls\n   *************************************************************/\n  function createGeofenceCreateContainer(isCircle) {\n    var container = createElement(\"div\", \"geofence-ctrl-create-prompt-container\", geofenceControlContainer);\n    _createContainer = createElement(\"div\", \"geofence-ctrl-create-prompt\", container);\n    if (isCircle) {\n      /* Create buttons to switch between different modes */\n      var buttonContainer = createElement(\"div\", \"geofence-ctrl-create-prompt-buttons\", _createContainer);\n      var circleModeButton = createElement(\"div\", \"geofence-ctrl-create-prompt-button-circle geofence-ctrl-create-prompt-button\", buttonContainer);\n      circleModeButton.addEventListener(\"click\", function () {\n        // Change button selected style\n        circleModeButton.classList.add(\"geofence-ctrl-create-prompt-selected\");\n        polygonModeButton.classList.remove(\"geofence-ctrl-create-prompt-selected\");\n        // Switch info box mode\n        if (_polygonModeContainer) {\n          removeElement(_polygonModeContainer);\n          _polygonModeContainer = undefined;\n        }\n        if (!_circleModeContainer) createCircleModeCreateContainer(_createContainer);\n        geofenceControl.changeMode(\"draw_circle\");\n      });\n      circleModeButton.innerHTML = \"Circle\";\n      var polygonModeButton = createElement(\"div\", \"geofence-ctrl-create-prompt-button-polygon geofence-ctrl-create-prompt-button\", buttonContainer);\n      polygonModeButton.addEventListener(\"click\", function () {\n        geofenceControl.changeMode(\"draw_polygon\");\n        // Change button selected style\n        polygonModeButton.classList.add(\"geofence-ctrl-create-prompt-selected\");\n        circleModeButton.classList.remove(\"geofence-ctrl-create-prompt-selected\");\n        // Switch info box mode\n        if (_circleModeContainer) {\n          removeElement(_circleModeContainer);\n          _circleModeContainer = undefined;\n        }\n        if (!_polygonModeContainer) createPolygonModeCreateContainer(_createContainer);\n      });\n      polygonModeButton.innerHTML = \"Custom\";\n      circleModeButton.classList.add(\"geofence-ctrl-create-prompt-selected\");\n      createCircleModeCreateContainer(_createContainer);\n    } else {\n      createPolygonModeCreateContainer(_createContainer);\n    }\n  }\n  function createCircleModeCreateContainer(container) {\n    _circleModeContainer = createElement(\"div\", \"geofence-ctrl-create-circle-mode-container\", container);\n    var radiusTitle = createElement(\"div\", \"geofence-ctrl-create-circle-mode-title\", _circleModeContainer);\n    radiusTitle.innerHTML = \"Radius\";\n    _geofenceCreateRadiusInput = createElement(\"input\", \"geofence-ctrl-create-circle-mode-input\", _circleModeContainer);\n    _geofenceCreateRadiusInput.addEventListener(\"keydown\", debounce(geofenceControl.updateInputRadius, 200));\n  }\n  function createPolygonModeCreateContainer(container) {\n    _polygonModeContainer = createElement(\"div\", \"geofence-ctrl-create-polygon-mode-container\", container);\n    var moreInfoContainer = createElement(\"div\", \"geofence-ctrl-create-polygon-mode-info-container\", _polygonModeContainer);\n    var moreInfoIcon = createElement(\"div\", \"geofence-ctrl-create-polygon-mode-icon\", moreInfoContainer);\n    var letterI = createElement(\"div\", \"geofence-ctrl-create-polygon-mode-info-icon\", moreInfoIcon);\n    letterI.innerHTML = \"i\";\n    var moreInfo = createElement(\"div\", \"geofence-ctrl-create-polygon-mode-title\", moreInfoContainer);\n    moreInfo.innerHTML = \"How it works?\";\n    var resetButton = createElement(\"div\", \"geofence-ctrl-create-polygon-mode-reset-button geofence-ctrl-button\", _polygonModeContainer);\n    resetButton.innerHTML = \"Reset\";\n    resetButton.addEventListener(\"click\", function () {\n      geofenceControl.resetGeofence();\n    });\n    // Add popup onClick\n    var popup = createPolygonModeInfoPopup(moreInfoIcon);\n    moreInfoContainer.addEventListener(\"click\", function () {\n      popup.classList.toggle(\"show\");\n    });\n  }\n  function createPolygonModeInfoPopup(container) {\n    var popupContainer = createElement(\"div\", \"geofence-ctrl-create-polygon-mode-popup-container\", container);\n    var popup = createElement(\"div\", \"geofence-ctrl-create-polygon-mode-popup\", popupContainer);\n    createPopupStep(popup, \"Move dots to desired position\", createPopupStep1Icon());\n    createPopupStep(popup, \"Click on a border to create a dot\", createPopupStep2Icon());\n    createPopupStep(popup, \"Click into shape to move\", createPopupStep3Icon());\n    createPopupStep(popup, \"Press delete to remove a dot\", createPopupStep4Icon());\n    return popup;\n  }\n  function createPopupStep(container, text, image) {\n    var popupStep = createElement(\"div\", \"geofence-ctrl-create-polygon-mode-popup-step\", container);\n    var popupStepImage = createElement(\"div\", \"geofence-ctrl-create-polygon-mode-popup-step-image\", popupStep);\n    popupStepImage.appendChild(image);\n    var popupStepText = createElement(\"div\", \"geofence-ctrl-create-polygon-mode-popup-step-text\", popupStep);\n    popupStepText.innerHTML = text;\n  }\n  function removeGeofenceCreateContainer() {\n    removeElement(_createContainer);\n    _createContainer = undefined;\n    _circleModeContainer = undefined;\n    _polygonModeContainer = undefined;\n  }\n  /************************************************************\n   * Geofence List\n   *************************************************************/\n  function createGeofenceListContainer() {\n    var geofenceListContainer = createElement(\"div\", \"geofence-ctrl-list-container\", geofenceControlContainer);\n    createGeofenceListHeader(geofenceListContainer);\n    _geofenceList = createElement(\"div\", \"geofence-ctrl-list\", geofenceListContainer);\n    _geofenceList.addEventListener(\"scroll\", function () {\n      var _geofenceList2 = _geofenceList,\n        scrollHeight = _geofenceList2.scrollHeight,\n        scrollTop = _geofenceList2.scrollTop,\n        clientHeight = _geofenceList2.clientHeight;\n      if (scrollTop + clientHeight >= scrollHeight - 20) {\n        geofenceControl.loadMoreGeofences();\n      }\n    });\n  }\n  function createGeofenceListHeader(geofenceListContainer) {\n    var header = createElement(\"div\", \"geofence-ctrl-list-header\", geofenceListContainer);\n    _geofenceTitle = createElement(\"div\", \"geofence-ctrl-list-header-title\", header);\n    _geofenceTitle.innerHTML = \"Geofences (0)\";\n    _checkBoxAllAndCreateContainer = createElement(\"div\", \"geofence-ctrl-list-header-checkbox-create-container\", header);\n    createCheckboxAllContainer(_checkBoxAllAndCreateContainer);\n  }\n  function createCheckboxAllContainer(geofenceListContainer) {\n    _checkBoxAllContainer = createElement(\"div\", \"geofence-ctrl-list-checkbox-all-container\", geofenceListContainer);\n    _checkboxAll = createElement(\"input\", \"geofence-ctrl-list-checkbox-all\", _checkBoxAllContainer);\n    _checkboxAll.type = \"checkbox\";\n    _checkboxAll.addEventListener(\"click\", function () {\n      if (_checkboxAll.checked) {\n        geofenceControl.displayAllGeofences();\n        checkboxAllText.innerHTML = \"Deselect All\";\n      } else {\n        geofenceControl.hideAllGeofences();\n        checkboxAllText.innerHTML = \"Select All\";\n      }\n    });\n    var checkboxAllText = createElement(\"div\", \"geofence-ctrl-list-checkbox-all-title\", _checkBoxAllContainer);\n    checkboxAllText.innerHTML = \"Select all\";\n    _addGeofencebutton = createElement(\"div\", \"geofence-ctrl-list-header-add-button\", _checkBoxAllContainer);\n    _addGeofencebutton.innerHTML = \"+ Add\";\n    _addGeofencebutton.addEventListener(\"click\", function () {\n      createAddGeofenceContainer();\n    });\n  }\n  function renderListItem(geofence) {\n    var container = createElement(\"li\", \"geofence-ctrl-list-item-container\", _geofenceList);\n    container.id = \"list-item-\".concat(geofence.geofenceId);\n    var listItem = createElement(\"li\", \"geofence-ctrl-list-item\", container);\n    var leftContainer = createElement(\"div\", \"geofence-ctrl-list-item-left-container\", listItem);\n    var checkbox = createElement(\"input\", \"geofence-ctrl-list-item-checkbox\", leftContainer);\n    checkbox.id = \"list-item-checkbox-\".concat(geofence.geofenceId);\n    checkbox.type = \"checkbox\";\n    checkbox.addEventListener(\"click\", function () {\n      if (checkbox.checked) {\n        geofenceControl.displayGeofence(geofence.geofenceId);\n        geofenceControl.fitGeofence(geofence.geofenceId);\n      } else {\n        geofenceControl.hideGeofence(geofence.geofenceId);\n      }\n    });\n    var rightContainer = createElement(\"div\", \"geofence-ctrl-list-item-right-container\", listItem);\n    var geofenceTitleContainer = createElement(\"div\", \"geofence-ctrl-list-item-title-container\", rightContainer);\n    geofenceTitleContainer.addEventListener(\"mouseover\", function () {\n      geofenceControl.displayHighlightedGeofence(geofence.geofenceId);\n    });\n    geofenceTitleContainer.addEventListener(\"mouseout\", function () {\n      geofenceControl.hideHighlightedGeofence();\n    });\n    var geofenceTitle = createElement(\"div\", \"geofence-ctrl-list-item-title\", geofenceTitleContainer);\n    geofenceTitle.innerHTML = geofence.geofenceId;\n    var editButton = createElement(\"div\", \"geofence-ctrl-edit-button\", geofenceTitleContainer);\n    editButton.addEventListener(\"click\", function () {\n      geofenceControl.editGeofence(geofence.geofenceId);\n      createEditControls(listItem, rightContainer, leftContainer, geofence.geofenceId);\n      listItem.classList.remove(\"geofence-ctrl-list-item\");\n      listItem.classList.add(\"geofence-ctrl-list-selected-item\");\n    });\n    editButton.appendChild(createEditIcon());\n  }\n  function createEditControls(item, rightContainer, leftContainer, id) {\n    var _this = this;\n    var editContainer = createElement(\"div\", \"geofence-ctrl-list-item-controls\", rightContainer);\n    var deleteButton = renderDeleteButton(leftContainer, id);\n    var removeEditContainer = function removeEditContainer() {\n      item.classList.remove(\"geofence-ctrl-list-selected-item\");\n      item.classList.add(\"geofence-ctrl-list-item\");\n      removeElement(editContainer);\n      removeElement(deleteButton);\n    };\n    var cancelButton = createElement(\"div\", \"geofence-ctrl-cancel-button\", editContainer);\n    cancelButton.classList.add(\"geofence-ctrl-button\");\n    cancelButton.innerHTML = \"Cancel\";\n    cancelButton.addEventListener(\"click\", function () {\n      geofenceControl.setEditingModeEnabled(false);\n      removeEditContainer();\n    });\n    var saveGeofenceButton = createElement(\"div\", \"geofence-ctrl-save-button geofence-ctrl-button\", editContainer);\n    saveGeofenceButton.addEventListener(\"click\", function () {\n      return __awaiter(_this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return geofenceControl.saveGeofence();\n              case 2:\n                removeEditContainer();\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n    });\n    saveGeofenceButton.title = \"Save\";\n    saveGeofenceButton.innerHTML = \"Save\";\n  }\n  /************************************************************\n   * Add Geofence Controls\n   *************************************************************/\n  function removeAddGeofenceContainer() {\n    removeElement(_addGeofenceContainer);\n    clearAddGeofenceError();\n    showCheckboxAllContainer();\n  }\n  function clearAddGeofenceError() {\n    if (_errorDiv) {\n      removeElement(_errorDiv);\n      _errorDiv = undefined;\n    }\n  }\n  function createAddGeofenceContainer() {\n    hideCheckboxAllContainer();\n    _addGeofenceContainer = createElement(\"div\", \"geofence-ctrl-add-geofence-container\", _checkBoxAllAndCreateContainer);\n    var addGeofencePrompt = createElement(\"div\", \"geofence-ctrl-add-geofence\", _addGeofenceContainer);\n    var nameInput = createElement(\"input\", \"geofence-ctrl-add-geofence-input\", addGeofencePrompt);\n    nameInput.placeholder = \"Enter name\";\n    var buttonContainer = createElement(\"div\", \"geofence-ctrl-add-geofence-buttons\", addGeofencePrompt);\n    var cancelButton = createElement(\"div\", \"geofence-ctrl-add-geofence-cancel-button geofence-ctrl-button \", buttonContainer);\n    cancelButton.innerHTML = \"Cancel\";\n    cancelButton.addEventListener(\"click\", function () {\n      removeAddGeofenceContainer();\n      geofenceControl.setEditingModeEnabled(false);\n    });\n    var saveButton = createElement(\"div\", \"geofence-ctrl-button geofence-ctrl-save-button\", buttonContainer);\n    saveButton.innerHTML = \"Save\";\n    saveButton.addEventListener(\"click\", function () {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var output;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                clearAddGeofenceError();\n                _context2.next = 3;\n                return geofenceControl.createGeofence(escape(nameInput.value));\n              case 3:\n                output = _context2.sent;\n                if (output) removeAddGeofenceContainer();\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n    });\n    geofenceControl.addEditableGeofence();\n  }\n  function createAddGeofencePromptError(error) {\n    if (_errorDiv) {\n      return;\n    }\n    _errorDiv = createElement(\"div\", \"geofence-ctrl-add-geofence-error\", _addGeofenceContainer);\n    var errorIconContainer = createElement(\"div\", \"geofence-ctrl-add-geofence-error-icon\", _errorDiv);\n    errorIconContainer.appendChild(createErrorIcon());\n    var errorText = createElement(\"div\", \"geofence-ctrl-add-geofence-error-text\", _errorDiv);\n    errorText.innerHTML = error;\n  }\n  /************************************************************\n   * Delete Controls\n   *************************************************************/\n  function renderDeleteButton(container, id) {\n    var deleteButton = createElement(\"div\", \"geofence-ctrl-delete-button\", container);\n    deleteButton.classList.add(\"geofence-ctrl-button\");\n    deleteButton.addEventListener(\"click\", function () {\n      createConfirmDeleteContainer(id);\n    });\n    deleteButton.appendChild(createTrashIcon());\n    return deleteButton;\n  }\n  function createConfirmDeleteContainer(geofenceId) {\n    _deleteGeofenceContainer = createElement(\"div\", \"geofence-ctrl-delete-prompt-container\", geofenceControlContainer);\n    var deleteGeofencePrompt = createElement(\"div\", \"geofence-ctrl-delete-prompt\", _deleteGeofenceContainer);\n    var title = createElement(\"div\", \"geofence-ctrl-delete-geofence-title\", deleteGeofencePrompt);\n    title.innerHTML = \"Are you sure you want to delete <strong>\".concat(geofenceId, \"</strong>?\");\n    createDeleteButtonsContainer(deleteGeofencePrompt, geofenceId);\n  }\n  function createDeleteButtonsContainer(container, geofenceId) {\n    var deleteButtonsContainer = createElement(\"div\", \"geofence-ctrl-delete-geofence-buttons\", container);\n    var cancelButton = createElement(\"div\", \"geofence-ctrl-delete-geofence-cancel-button\", deleteButtonsContainer);\n    cancelButton.innerHTML = \"Cancel\";\n    cancelButton.addEventListener(\"click\", function () {\n      removeElement(_deleteGeofenceContainer);\n    });\n    var confirmDeleteButton = createElement(\"div\", \"geofence-ctrl-delete-geofence-confirm-button\", deleteButtonsContainer);\n    confirmDeleteButton.innerHTML = \"Delete\";\n    confirmDeleteButton.addEventListener(\"click\", function () {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var id;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return geofenceControl.deleteGeofence(geofenceId);\n              case 2:\n                id = _context3.sent;\n                if (id) {\n                  createDeleteResultContainer(true);\n                  removeElement(_deleteGeofenceContainer);\n                  geofenceControl.setEditingModeEnabled(false);\n                }\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n    });\n  }\n  function createDeleteResultContainer(success) {\n    _deletePopdownContainer = createElement(\"div\", \"geofence-ctrl-delete-popdown-container\", geofenceControlContainer);\n    var deletePopdown = createElement(\"div\", \"geofence-ctrl-delete-popdown\", _deletePopdownContainer);\n    var deletePopdownCloseButton = createElement(\"div\", \"geofence-ctrl-delete-popdown-close-button\", _deletePopdownContainer);\n    deletePopdownCloseButton.appendChild(createCloseIcon());\n    deletePopdownCloseButton.addEventListener(\"click\", function () {\n      removeElement(_deletePopdownContainer);\n    });\n    var deleteSuccessIcon = createElement(\"div\", \"geofence-ctrl-delete-popdown-icon\", deletePopdown);\n    deleteSuccessIcon.appendChild(createDeleteSuccessIcon());\n    var deletePopdownText = createElement(\"div\", \"geofence-ctrl-delete-popdown-text\", deletePopdown);\n    deletePopdownText.innerHTML = success ? \"Geofence was deleted successfully\" : \"Geofence failed to delete\";\n  }\n  /************************************************************\n   * Utility Methods\n   *************************************************************/\n  function updateCheckbox(geofenceId, checked) {\n    var checkbox = document.getElementById(\"list-item-checkbox-\".concat(geofenceId));\n    if (checkbox) checkbox.checked = checked;\n  }\n  function removeGeofenceListItem(geofenceId) {\n    var listItem = document.getElementById(\"list-item-\".concat(geofenceId));\n    removeElement(listItem);\n  }\n  function setGeofenceListEnabled(enabled) {\n    _checkboxAll.disabled = !enabled;\n    enabled ? _addGeofencebutton.classList.remove(\"geofence-ctrl-noHover\") : _addGeofencebutton.classList.add(\"geofence-ctrl-noHover\");\n    var inputs = document.getElementsByClassName(\"geofence-ctrl-list-item-checkbox\");\n    for (var i = 0; i < inputs.length; i++) {\n      inputs.item(i).disabled = !enabled;\n    }\n    var items = document.getElementsByClassName(\"geofence-ctrl-list-item-container\");\n    for (var _i = 0; _i < items.length; _i++) {\n      enabled ? items.item(_i).classList.remove(\"geofence-ctrl-noHover\") : items.item(_i).classList.add(\"geofence-ctrl-noHover\");\n    }\n  }\n  function getCheckboxAllValue() {\n    return _checkboxAll.checked;\n  }\n  function updateGeofenceCount(count) {\n    _geofenceTitle.innerHTML = \"Geofences (\".concat(count, \")\");\n  }\n  function updateGeofenceRadius(radius) {\n    if (_geofenceCreateRadiusInput) _geofenceCreateRadiusInput.value = \"\".concat(radius);\n  }\n  function hideCheckboxAllContainer() {\n    _checkBoxAllContainer.style.display = \"none\";\n  }\n  function showCheckboxAllContainer() {\n    _checkBoxAllContainer.style.display = \"flex\";\n  }\n  return {\n    registerControlPosition: registerControlPosition,\n    createElement: createElement,\n    removeElement: removeElement,\n    createGeofenceCreateContainer: createGeofenceCreateContainer,\n    createGeofenceListContainer: createGeofenceListContainer,\n    removeAddGeofenceContainer: removeAddGeofenceContainer,\n    createAddGeofencePromptError: createAddGeofencePromptError,\n    renderListItem: renderListItem,\n    updateCheckbox: updateCheckbox,\n    removeGeofenceListItem: removeGeofenceListItem,\n    setGeofenceListEnabled: setGeofenceListEnabled,\n    getCheckboxAllValue: getCheckboxAllValue,\n    removeGeofenceCreateContainer: removeGeofenceCreateContainer,\n    updateGeofenceCount: updateGeofenceCount,\n    updateGeofenceRadius: updateGeofenceRadius\n  };\n}","map":{"version":3,"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","debounce","createElement","removeElement","createErrorIcon","createEditIcon","createPopupStep1Icon","createPopupStep2Icon","createPopupStep3Icon","createPopupStep4Icon","createTrashIcon","createDeleteSuccessIcon","createCloseIcon","AmplifyGeofenceControlUI","geofenceControl","geofenceControlContainer","_addGeofenceContainer","_deleteGeofenceContainer","_addGeofencebutton","_checkboxAll","_geofenceList","_createContainer","_geofenceTitle","_checkBoxAllAndCreateContainer","_checkBoxAllContainer","_circleModeContainer","_polygonModeContainer","_deletePopdownContainer","_errorDiv","_geofenceCreateRadiusInput","registerControlPosition","map","positionName","_controlPositions","positionContainer","document","className","_controlContainer","appendChild","createGeofenceCreateContainer","isCircle","container","buttonContainer","circleModeButton","addEventListener","classList","add","polygonModeButton","remove","undefined","createCircleModeCreateContainer","changeMode","innerHTML","createPolygonModeCreateContainer","radiusTitle","updateInputRadius","moreInfoContainer","moreInfoIcon","letterI","moreInfo","resetButton","resetGeofence","popup","createPolygonModeInfoPopup","toggle","popupContainer","createPopupStep","text","image","popupStep","popupStepImage","popupStepText","removeGeofenceCreateContainer","createGeofenceListContainer","geofenceListContainer","createGeofenceListHeader","scrollHeight","scrollTop","clientHeight","loadMoreGeofences","header","createCheckboxAllContainer","type","checked","displayAllGeofences","checkboxAllText","hideAllGeofences","createAddGeofenceContainer","renderListItem","geofence","id","geofenceId","listItem","leftContainer","checkbox","displayGeofence","fitGeofence","hideGeofence","rightContainer","geofenceTitleContainer","displayHighlightedGeofence","hideHighlightedGeofence","geofenceTitle","editButton","editGeofence","createEditControls","item","editContainer","deleteButton","renderDeleteButton","removeEditContainer","cancelButton","setEditingModeEnabled","saveGeofenceButton","saveGeofence","title","removeAddGeofenceContainer","clearAddGeofenceError","showCheckboxAllContainer","hideCheckboxAllContainer","addGeofencePrompt","nameInput","placeholder","saveButton","createGeofence","escape","output","addEditableGeofence","createAddGeofencePromptError","error","errorIconContainer","errorText","createConfirmDeleteContainer","deleteGeofencePrompt","createDeleteButtonsContainer","deleteButtonsContainer","confirmDeleteButton","deleteGeofence","createDeleteResultContainer","success","deletePopdown","deletePopdownCloseButton","deleteSuccessIcon","deletePopdownText","updateCheckbox","getElementById","removeGeofenceListItem","setGeofenceListEnabled","enabled","disabled","inputs","getElementsByClassName","i","length","items","getCheckboxAllValue","updateGeofenceCount","count","updateGeofenceRadius","radius","style","display"],"sources":["/Users/carterbrewer/Downloads/trucker_app-main/node_modules/maplibre-gl-js-amplify/lib/esm/AmplifyGeofenceControl/ui.js"],"sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { debounce } from \"debounce\";\nimport { createElement, removeElement } from \"../utils\";\nimport { createErrorIcon } from \"./icons\";\nimport { createEditIcon, createPopupStep1Icon, createPopupStep2Icon, createPopupStep3Icon, createPopupStep4Icon, createTrashIcon, createDeleteSuccessIcon, createCloseIcon, } from \"./icons\";\nexport function AmplifyGeofenceControlUI(geofenceControl, geofenceControlContainer) {\n    let _addGeofenceContainer;\n    let _deleteGeofenceContainer;\n    let _addGeofencebutton;\n    let _checkboxAll;\n    let _geofenceList;\n    let _createContainer;\n    let _geofenceTitle;\n    let _checkBoxAllAndCreateContainer;\n    let _checkBoxAllContainer;\n    let _circleModeContainer;\n    let _polygonModeContainer;\n    let _deletePopdownContainer;\n    let _errorDiv;\n    let _geofenceCreateRadiusInput;\n    function registerControlPosition(map, positionName) {\n        if (map._controlPositions[positionName]) {\n            return;\n        }\n        const positionContainer = document.createElement(\"div\");\n        positionContainer.className = `maplibregl-ctrl-${positionName}`;\n        map._controlContainer.appendChild(positionContainer);\n        map._controlPositions[positionName] = positionContainer;\n    }\n    /************************************************************\n     * Create Geofence Controls\n     *************************************************************/\n    function createGeofenceCreateContainer(isCircle) {\n        const container = createElement(\"div\", \"geofence-ctrl-create-prompt-container\", geofenceControlContainer);\n        _createContainer = createElement(\"div\", \"geofence-ctrl-create-prompt\", container);\n        if (isCircle) {\n            /* Create buttons to switch between different modes */\n            const buttonContainer = createElement(\"div\", \"geofence-ctrl-create-prompt-buttons\", _createContainer);\n            const circleModeButton = createElement(\"div\", \"geofence-ctrl-create-prompt-button-circle geofence-ctrl-create-prompt-button\", buttonContainer);\n            circleModeButton.addEventListener(\"click\", () => {\n                // Change button selected style\n                circleModeButton.classList.add(\"geofence-ctrl-create-prompt-selected\");\n                polygonModeButton.classList.remove(\"geofence-ctrl-create-prompt-selected\");\n                // Switch info box mode\n                if (_polygonModeContainer) {\n                    removeElement(_polygonModeContainer);\n                    _polygonModeContainer = undefined;\n                }\n                if (!_circleModeContainer)\n                    createCircleModeCreateContainer(_createContainer);\n                geofenceControl.changeMode(\"draw_circle\");\n            });\n            circleModeButton.innerHTML = \"Circle\";\n            const polygonModeButton = createElement(\"div\", \"geofence-ctrl-create-prompt-button-polygon geofence-ctrl-create-prompt-button\", buttonContainer);\n            polygonModeButton.addEventListener(\"click\", () => {\n                geofenceControl.changeMode(\"draw_polygon\");\n                // Change button selected style\n                polygonModeButton.classList.add(\"geofence-ctrl-create-prompt-selected\");\n                circleModeButton.classList.remove(\"geofence-ctrl-create-prompt-selected\");\n                // Switch info box mode\n                if (_circleModeContainer) {\n                    removeElement(_circleModeContainer);\n                    _circleModeContainer = undefined;\n                }\n                if (!_polygonModeContainer)\n                    createPolygonModeCreateContainer(_createContainer);\n            });\n            polygonModeButton.innerHTML = \"Custom\";\n            circleModeButton.classList.add(\"geofence-ctrl-create-prompt-selected\");\n            createCircleModeCreateContainer(_createContainer);\n        }\n        else {\n            createPolygonModeCreateContainer(_createContainer);\n        }\n    }\n    function createCircleModeCreateContainer(container) {\n        _circleModeContainer = createElement(\"div\", \"geofence-ctrl-create-circle-mode-container\", container);\n        const radiusTitle = createElement(\"div\", \"geofence-ctrl-create-circle-mode-title\", _circleModeContainer);\n        radiusTitle.innerHTML = \"Radius\";\n        _geofenceCreateRadiusInput = createElement(\"input\", \"geofence-ctrl-create-circle-mode-input\", _circleModeContainer);\n        _geofenceCreateRadiusInput.addEventListener(\"keydown\", debounce(geofenceControl.updateInputRadius, 200));\n    }\n    function createPolygonModeCreateContainer(container) {\n        _polygonModeContainer = createElement(\"div\", \"geofence-ctrl-create-polygon-mode-container\", container);\n        const moreInfoContainer = createElement(\"div\", \"geofence-ctrl-create-polygon-mode-info-container\", _polygonModeContainer);\n        const moreInfoIcon = createElement(\"div\", \"geofence-ctrl-create-polygon-mode-icon\", moreInfoContainer);\n        const letterI = createElement(\"div\", \"geofence-ctrl-create-polygon-mode-info-icon\", moreInfoIcon);\n        letterI.innerHTML = \"i\";\n        const moreInfo = createElement(\"div\", \"geofence-ctrl-create-polygon-mode-title\", moreInfoContainer);\n        moreInfo.innerHTML = \"How it works?\";\n        const resetButton = createElement(\"div\", \"geofence-ctrl-create-polygon-mode-reset-button geofence-ctrl-button\", _polygonModeContainer);\n        resetButton.innerHTML = \"Reset\";\n        resetButton.addEventListener(\"click\", () => {\n            geofenceControl.resetGeofence();\n        });\n        // Add popup onClick\n        const popup = createPolygonModeInfoPopup(moreInfoIcon);\n        moreInfoContainer.addEventListener(\"click\", () => {\n            popup.classList.toggle(\"show\");\n        });\n    }\n    function createPolygonModeInfoPopup(container) {\n        const popupContainer = createElement(\"div\", \"geofence-ctrl-create-polygon-mode-popup-container\", container);\n        const popup = createElement(\"div\", \"geofence-ctrl-create-polygon-mode-popup\", popupContainer);\n        createPopupStep(popup, \"Move dots to desired position\", createPopupStep1Icon());\n        createPopupStep(popup, \"Click on a border to create a dot\", createPopupStep2Icon());\n        createPopupStep(popup, \"Click into shape to move\", createPopupStep3Icon());\n        createPopupStep(popup, \"Press delete to remove a dot\", createPopupStep4Icon());\n        return popup;\n    }\n    function createPopupStep(container, text, image) {\n        const popupStep = createElement(\"div\", \"geofence-ctrl-create-polygon-mode-popup-step\", container);\n        const popupStepImage = createElement(\"div\", \"geofence-ctrl-create-polygon-mode-popup-step-image\", popupStep);\n        popupStepImage.appendChild(image);\n        const popupStepText = createElement(\"div\", \"geofence-ctrl-create-polygon-mode-popup-step-text\", popupStep);\n        popupStepText.innerHTML = text;\n    }\n    function removeGeofenceCreateContainer() {\n        removeElement(_createContainer);\n        _createContainer = undefined;\n        _circleModeContainer = undefined;\n        _polygonModeContainer = undefined;\n    }\n    /************************************************************\n     * Geofence List\n     *************************************************************/\n    function createGeofenceListContainer() {\n        const geofenceListContainer = createElement(\"div\", \"geofence-ctrl-list-container\", geofenceControlContainer);\n        createGeofenceListHeader(geofenceListContainer);\n        _geofenceList = createElement(\"div\", \"geofence-ctrl-list\", geofenceListContainer);\n        _geofenceList.addEventListener(\"scroll\", () => {\n            const { scrollHeight, scrollTop, clientHeight } = _geofenceList;\n            if (scrollTop + clientHeight >= scrollHeight - 20) {\n                geofenceControl.loadMoreGeofences();\n            }\n        });\n    }\n    function createGeofenceListHeader(geofenceListContainer) {\n        const header = createElement(\"div\", \"geofence-ctrl-list-header\", geofenceListContainer);\n        _geofenceTitle = createElement(\"div\", \"geofence-ctrl-list-header-title\", header);\n        _geofenceTitle.innerHTML = \"Geofences (0)\";\n        _checkBoxAllAndCreateContainer = createElement(\"div\", \"geofence-ctrl-list-header-checkbox-create-container\", header);\n        createCheckboxAllContainer(_checkBoxAllAndCreateContainer);\n    }\n    function createCheckboxAllContainer(geofenceListContainer) {\n        _checkBoxAllContainer = createElement(\"div\", \"geofence-ctrl-list-checkbox-all-container\", geofenceListContainer);\n        _checkboxAll = createElement(\"input\", \"geofence-ctrl-list-checkbox-all\", _checkBoxAllContainer);\n        _checkboxAll.type = \"checkbox\";\n        _checkboxAll.addEventListener(\"click\", function () {\n            if (_checkboxAll.checked) {\n                geofenceControl.displayAllGeofences();\n                checkboxAllText.innerHTML = \"Deselect All\";\n            }\n            else {\n                geofenceControl.hideAllGeofences();\n                checkboxAllText.innerHTML = \"Select All\";\n            }\n        });\n        const checkboxAllText = createElement(\"div\", \"geofence-ctrl-list-checkbox-all-title\", _checkBoxAllContainer);\n        checkboxAllText.innerHTML = \"Select all\";\n        _addGeofencebutton = createElement(\"div\", \"geofence-ctrl-list-header-add-button\", _checkBoxAllContainer);\n        _addGeofencebutton.innerHTML = \"+ Add\";\n        _addGeofencebutton.addEventListener(\"click\", () => {\n            createAddGeofenceContainer();\n        });\n    }\n    function renderListItem(geofence) {\n        const container = createElement(\"li\", \"geofence-ctrl-list-item-container\", _geofenceList);\n        container.id = `list-item-${geofence.geofenceId}`;\n        const listItem = createElement(\"li\", \"geofence-ctrl-list-item\", container);\n        const leftContainer = createElement(\"div\", \"geofence-ctrl-list-item-left-container\", listItem);\n        const checkbox = createElement(\"input\", \"geofence-ctrl-list-item-checkbox\", leftContainer);\n        checkbox.id = `list-item-checkbox-${geofence.geofenceId}`;\n        checkbox.type = \"checkbox\";\n        checkbox.addEventListener(\"click\", function () {\n            if (checkbox.checked) {\n                geofenceControl.displayGeofence(geofence.geofenceId);\n                geofenceControl.fitGeofence(geofence.geofenceId);\n            }\n            else {\n                geofenceControl.hideGeofence(geofence.geofenceId);\n            }\n        });\n        const rightContainer = createElement(\"div\", \"geofence-ctrl-list-item-right-container\", listItem);\n        const geofenceTitleContainer = createElement(\"div\", \"geofence-ctrl-list-item-title-container\", rightContainer);\n        geofenceTitleContainer.addEventListener(\"mouseover\", function () {\n            geofenceControl.displayHighlightedGeofence(geofence.geofenceId);\n        });\n        geofenceTitleContainer.addEventListener(\"mouseout\", function () {\n            geofenceControl.hideHighlightedGeofence();\n        });\n        const geofenceTitle = createElement(\"div\", \"geofence-ctrl-list-item-title\", geofenceTitleContainer);\n        geofenceTitle.innerHTML = geofence.geofenceId;\n        const editButton = createElement(\"div\", \"geofence-ctrl-edit-button\", geofenceTitleContainer);\n        editButton.addEventListener(\"click\", function () {\n            geofenceControl.editGeofence(geofence.geofenceId);\n            createEditControls(listItem, rightContainer, leftContainer, geofence.geofenceId);\n            listItem.classList.remove(\"geofence-ctrl-list-item\");\n            listItem.classList.add(\"geofence-ctrl-list-selected-item\");\n        });\n        editButton.appendChild(createEditIcon());\n    }\n    function createEditControls(item, rightContainer, leftContainer, id) {\n        const editContainer = createElement(\"div\", \"geofence-ctrl-list-item-controls\", rightContainer);\n        const deleteButton = renderDeleteButton(leftContainer, id);\n        const removeEditContainer = () => {\n            item.classList.remove(\"geofence-ctrl-list-selected-item\");\n            item.classList.add(\"geofence-ctrl-list-item\");\n            removeElement(editContainer);\n            removeElement(deleteButton);\n        };\n        const cancelButton = createElement(\"div\", \"geofence-ctrl-cancel-button\", editContainer);\n        cancelButton.classList.add(\"geofence-ctrl-button\");\n        cancelButton.innerHTML = \"Cancel\";\n        cancelButton.addEventListener(\"click\", () => {\n            geofenceControl.setEditingModeEnabled(false);\n            removeEditContainer();\n        });\n        const saveGeofenceButton = createElement(\"div\", \"geofence-ctrl-save-button geofence-ctrl-button\", editContainer);\n        saveGeofenceButton.addEventListener(\"click\", () => __awaiter(this, void 0, void 0, function* () {\n            yield geofenceControl.saveGeofence();\n            removeEditContainer();\n        }));\n        saveGeofenceButton.title = \"Save\";\n        saveGeofenceButton.innerHTML = \"Save\";\n    }\n    /************************************************************\n     * Add Geofence Controls\n     *************************************************************/\n    function removeAddGeofenceContainer() {\n        removeElement(_addGeofenceContainer);\n        clearAddGeofenceError();\n        showCheckboxAllContainer();\n    }\n    function clearAddGeofenceError() {\n        if (_errorDiv) {\n            removeElement(_errorDiv);\n            _errorDiv = undefined;\n        }\n    }\n    function createAddGeofenceContainer() {\n        hideCheckboxAllContainer();\n        _addGeofenceContainer = createElement(\"div\", \"geofence-ctrl-add-geofence-container\", _checkBoxAllAndCreateContainer);\n        const addGeofencePrompt = createElement(\"div\", \"geofence-ctrl-add-geofence\", _addGeofenceContainer);\n        const nameInput = createElement(\"input\", \"geofence-ctrl-add-geofence-input\", addGeofencePrompt);\n        nameInput.placeholder = \"Enter name\";\n        const buttonContainer = createElement(\"div\", \"geofence-ctrl-add-geofence-buttons\", addGeofencePrompt);\n        const cancelButton = createElement(\"div\", \"geofence-ctrl-add-geofence-cancel-button geofence-ctrl-button \", buttonContainer);\n        cancelButton.innerHTML = \"Cancel\";\n        cancelButton.addEventListener(\"click\", () => {\n            removeAddGeofenceContainer();\n            geofenceControl.setEditingModeEnabled(false);\n        });\n        const saveButton = createElement(\"div\", \"geofence-ctrl-button geofence-ctrl-save-button\", buttonContainer);\n        saveButton.innerHTML = \"Save\";\n        saveButton.addEventListener(\"click\", function () {\n            return __awaiter(this, void 0, void 0, function* () {\n                clearAddGeofenceError();\n                const output = yield geofenceControl.createGeofence(escape(nameInput.value));\n                if (output)\n                    removeAddGeofenceContainer();\n            });\n        });\n        geofenceControl.addEditableGeofence();\n    }\n    function createAddGeofencePromptError(error) {\n        if (_errorDiv) {\n            return;\n        }\n        _errorDiv = createElement(\"div\", \"geofence-ctrl-add-geofence-error\", _addGeofenceContainer);\n        const errorIconContainer = createElement(\"div\", \"geofence-ctrl-add-geofence-error-icon\", _errorDiv);\n        errorIconContainer.appendChild(createErrorIcon());\n        const errorText = createElement(\"div\", \"geofence-ctrl-add-geofence-error-text\", _errorDiv);\n        errorText.innerHTML = error;\n    }\n    /************************************************************\n     * Delete Controls\n     *************************************************************/\n    function renderDeleteButton(container, id) {\n        const deleteButton = createElement(\"div\", \"geofence-ctrl-delete-button\", container);\n        deleteButton.classList.add(\"geofence-ctrl-button\");\n        deleteButton.addEventListener(\"click\", function () {\n            createConfirmDeleteContainer(id);\n        });\n        deleteButton.appendChild(createTrashIcon());\n        return deleteButton;\n    }\n    function createConfirmDeleteContainer(geofenceId) {\n        _deleteGeofenceContainer = createElement(\"div\", \"geofence-ctrl-delete-prompt-container\", geofenceControlContainer);\n        const deleteGeofencePrompt = createElement(\"div\", \"geofence-ctrl-delete-prompt\", _deleteGeofenceContainer);\n        const title = createElement(\"div\", \"geofence-ctrl-delete-geofence-title\", deleteGeofencePrompt);\n        title.innerHTML = `Are you sure you want to delete <strong>${geofenceId}</strong>?`;\n        createDeleteButtonsContainer(deleteGeofencePrompt, geofenceId);\n    }\n    function createDeleteButtonsContainer(container, geofenceId) {\n        const deleteButtonsContainer = createElement(\"div\", \"geofence-ctrl-delete-geofence-buttons\", container);\n        const cancelButton = createElement(\"div\", \"geofence-ctrl-delete-geofence-cancel-button\", deleteButtonsContainer);\n        cancelButton.innerHTML = \"Cancel\";\n        cancelButton.addEventListener(\"click\", () => {\n            removeElement(_deleteGeofenceContainer);\n        });\n        const confirmDeleteButton = createElement(\"div\", \"geofence-ctrl-delete-geofence-confirm-button\", deleteButtonsContainer);\n        confirmDeleteButton.innerHTML = \"Delete\";\n        confirmDeleteButton.addEventListener(\"click\", function () {\n            return __awaiter(this, void 0, void 0, function* () {\n                const id = yield geofenceControl.deleteGeofence(geofenceId);\n                if (id) {\n                    createDeleteResultContainer(true);\n                    removeElement(_deleteGeofenceContainer);\n                    geofenceControl.setEditingModeEnabled(false);\n                }\n            });\n        });\n    }\n    function createDeleteResultContainer(success) {\n        _deletePopdownContainer = createElement(\"div\", \"geofence-ctrl-delete-popdown-container\", geofenceControlContainer);\n        const deletePopdown = createElement(\"div\", \"geofence-ctrl-delete-popdown\", _deletePopdownContainer);\n        const deletePopdownCloseButton = createElement(\"div\", \"geofence-ctrl-delete-popdown-close-button\", _deletePopdownContainer);\n        deletePopdownCloseButton.appendChild(createCloseIcon());\n        deletePopdownCloseButton.addEventListener(\"click\", () => {\n            removeElement(_deletePopdownContainer);\n        });\n        const deleteSuccessIcon = createElement(\"div\", \"geofence-ctrl-delete-popdown-icon\", deletePopdown);\n        deleteSuccessIcon.appendChild(createDeleteSuccessIcon());\n        const deletePopdownText = createElement(\"div\", \"geofence-ctrl-delete-popdown-text\", deletePopdown);\n        deletePopdownText.innerHTML = success\n            ? \"Geofence was deleted successfully\"\n            : \"Geofence failed to delete\";\n    }\n    /************************************************************\n     * Utility Methods\n     *************************************************************/\n    function updateCheckbox(geofenceId, checked) {\n        const checkbox = document.getElementById(`list-item-checkbox-${geofenceId}`);\n        if (checkbox)\n            checkbox.checked = checked;\n    }\n    function removeGeofenceListItem(geofenceId) {\n        const listItem = document.getElementById(`list-item-${geofenceId}`);\n        removeElement(listItem);\n    }\n    function setGeofenceListEnabled(enabled) {\n        _checkboxAll.disabled = !enabled;\n        enabled\n            ? _addGeofencebutton.classList.remove(\"geofence-ctrl-noHover\")\n            : _addGeofencebutton.classList.add(\"geofence-ctrl-noHover\");\n        const inputs = document.getElementsByClassName(\"geofence-ctrl-list-item-checkbox\");\n        for (let i = 0; i < inputs.length; i++) {\n            inputs.item(i).disabled = !enabled;\n        }\n        const items = document.getElementsByClassName(\"geofence-ctrl-list-item-container\");\n        for (let i = 0; i < items.length; i++) {\n            enabled\n                ? items.item(i).classList.remove(\"geofence-ctrl-noHover\")\n                : items.item(i).classList.add(\"geofence-ctrl-noHover\");\n        }\n    }\n    function getCheckboxAllValue() {\n        return _checkboxAll.checked;\n    }\n    function updateGeofenceCount(count) {\n        _geofenceTitle.innerHTML = `Geofences (${count})`;\n    }\n    function updateGeofenceRadius(radius) {\n        if (_geofenceCreateRadiusInput)\n            _geofenceCreateRadiusInput.value = `${radius}`;\n    }\n    function hideCheckboxAllContainer() {\n        _checkBoxAllContainer.style.display = \"none\";\n    }\n    function showCheckboxAllContainer() {\n        _checkBoxAllContainer.style.display = \"flex\";\n    }\n    return {\n        registerControlPosition,\n        createElement,\n        removeElement,\n        createGeofenceCreateContainer,\n        createGeofenceListContainer,\n        removeAddGeofenceContainer,\n        createAddGeofencePromptError,\n        renderListItem,\n        updateCheckbox,\n        removeGeofenceListItem,\n        setGeofenceListEnabled,\n        getCheckboxAllValue,\n        removeGeofenceCreateContainer,\n        updateGeofenceCount,\n        updateGeofenceRadius,\n    };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}