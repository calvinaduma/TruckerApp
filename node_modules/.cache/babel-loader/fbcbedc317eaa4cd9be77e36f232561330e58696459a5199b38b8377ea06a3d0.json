{"ast":null,"code":"import { ConsoleLogger } from '@aws-amplify/core';\nimport { InAppMessageInteractionEvent, Notifications } from '@aws-amplify/notifications';\nimport isNil from 'lodash/isNil';\nimport RenderNothing from '../../../components/RenderNothing/RenderNothing.js';\nimport useInAppMessaging from '../useInAppMessaging/useInAppMessaging.js';\nimport { getContentProps, getPositionProp } from './utils.js';\nvar EMPTY_PROPS = Object.freeze({});\nvar logger = new ConsoleLogger('Notifications.InAppMessaging');\nvar InAppMessaging = Notifications.InAppMessaging;\n/**\n * Utility hook for parsing a message and retrieving its corresponding UI component and props\n *\n * @param {UseMessageParams} props - platform specific UI components, action handler, and styles\n * @returns {UseMessage} message UI component and props\n */\nfunction useMessage(_ref) {\n  var components = _ref.components,\n    onMessageAction = _ref.onMessageAction;\n  var _useInAppMessaging = useInAppMessaging(),\n    clearMessage = _useInAppMessaging.clearMessage,\n    message = _useInAppMessaging.message;\n  var BannerMessage = components.BannerMessage,\n    CarouselMessage = components.CarouselMessage,\n    FullScreenMessage = components.FullScreenMessage,\n    ModalMessage = components.ModalMessage;\n  if (isNil(message)) {\n    return {\n      Component: RenderNothing,\n      props: EMPTY_PROPS\n    };\n  }\n  var content = message.content,\n    layout = message.layout;\n  var onActionCallback = function onActionCallback() {\n    InAppMessaging.notifyMessageInteraction(message, InAppMessageInteractionEvent.MESSAGE_ACTION_TAKEN);\n    clearMessage();\n  };\n  var onClose = function onClose() {\n    InAppMessaging.notifyMessageInteraction(message, InAppMessageInteractionEvent.MESSAGE_DISMISSED);\n    clearMessage();\n  };\n  var onDisplay = function onDisplay() {\n    InAppMessaging.notifyMessageInteraction(message, InAppMessageInteractionEvent.MESSAGE_DISPLAYED);\n  };\n  switch (layout) {\n    case 'BOTTOM_BANNER':\n    case 'MIDDLE_BANNER':\n    case 'TOP_BANNER':\n      {\n        var props = Object.assign(Object.assign({}, getContentProps(content === null || content === void 0 ? void 0 : content[0], onMessageAction, onActionCallback)), {\n          layout: layout,\n          onClose: onClose,\n          onDisplay: onDisplay,\n          position: getPositionProp(layout)\n        });\n        return {\n          Component: BannerMessage,\n          props: props\n        };\n      }\n    case 'CAROUSEL':\n      {\n        var _props = {\n          data: content === null || content === void 0 ? void 0 : content.map(function (item) {\n            return getContentProps(item, onMessageAction, onActionCallback);\n          }),\n          layout: layout,\n          onClose: onClose,\n          onDisplay: onDisplay\n        };\n        return {\n          Component: CarouselMessage,\n          props: _props\n        };\n      }\n    case 'FULL_SCREEN':\n      {\n        var _props2 = Object.assign(Object.assign({}, getContentProps(content === null || content === void 0 ? void 0 : content[0], onMessageAction, onActionCallback)), {\n          layout: layout,\n          onClose: onClose,\n          onDisplay: onDisplay\n        });\n        return {\n          Component: FullScreenMessage,\n          props: _props2\n        };\n      }\n    case 'MODAL':\n      {\n        var _props3 = Object.assign(Object.assign({}, getContentProps(content === null || content === void 0 ? void 0 : content[0], onMessageAction, onActionCallback)), {\n          layout: layout,\n          onClose: onClose,\n          onDisplay: onDisplay\n        });\n        return {\n          Component: ModalMessage,\n          props: _props3\n        };\n      }\n    default:\n      {\n        logger.info(\"Received unknown InAppMessage layout: \".concat(layout));\n        return {\n          Component: RenderNothing,\n          props: EMPTY_PROPS\n        };\n      }\n  }\n}\nexport { EMPTY_PROPS, useMessage as default };","map":{"version":3,"names":["ConsoleLogger","InAppMessageInteractionEvent","Notifications","isNil","RenderNothing","useInAppMessaging","getContentProps","getPositionProp","EMPTY_PROPS","Object","freeze","logger","InAppMessaging","useMessage","components","onMessageAction","clearMessage","message","BannerMessage","CarouselMessage","FullScreenMessage","ModalMessage","Component","props","content","layout","onActionCallback","notifyMessageInteraction","MESSAGE_ACTION_TAKEN","onClose","MESSAGE_DISMISSED","onDisplay","MESSAGE_DISPLAYED","assign","position","data","map","item","info","default"],"sources":["/Users/carterbrewer/Downloads/trucker_app-main/node_modules/@aws-amplify/ui-react-core/dist/esm/InAppMessaging/hooks/useMessage/useMessage.js"],"sourcesContent":["import { ConsoleLogger } from '@aws-amplify/core';\nimport { InAppMessageInteractionEvent, Notifications } from '@aws-amplify/notifications';\nimport isNil from 'lodash/isNil';\nimport RenderNothing from '../../../components/RenderNothing/RenderNothing.js';\nimport useInAppMessaging from '../useInAppMessaging/useInAppMessaging.js';\nimport { getContentProps, getPositionProp } from './utils.js';\n\nconst EMPTY_PROPS = Object.freeze({});\nconst logger = new ConsoleLogger('Notifications.InAppMessaging');\nconst { InAppMessaging } = Notifications;\n/**\n * Utility hook for parsing a message and retrieving its corresponding UI component and props\n *\n * @param {UseMessageParams} props - platform specific UI components, action handler, and styles\n * @returns {UseMessage} message UI component and props\n */\nfunction useMessage({ components, onMessageAction, }) {\n    const { clearMessage, message } = useInAppMessaging();\n    const { BannerMessage, CarouselMessage, FullScreenMessage, ModalMessage } = components;\n    if (isNil(message)) {\n        return {\n            Component: RenderNothing,\n            props: EMPTY_PROPS,\n        };\n    }\n    const { content, layout } = message;\n    const onActionCallback = () => {\n        InAppMessaging.notifyMessageInteraction(message, InAppMessageInteractionEvent.MESSAGE_ACTION_TAKEN);\n        clearMessage();\n    };\n    const onClose = () => {\n        InAppMessaging.notifyMessageInteraction(message, InAppMessageInteractionEvent.MESSAGE_DISMISSED);\n        clearMessage();\n    };\n    const onDisplay = () => {\n        InAppMessaging.notifyMessageInteraction(message, InAppMessageInteractionEvent.MESSAGE_DISPLAYED);\n    };\n    switch (layout) {\n        case 'BOTTOM_BANNER':\n        case 'MIDDLE_BANNER':\n        case 'TOP_BANNER': {\n            const props = Object.assign(Object.assign({}, getContentProps(content === null || content === void 0 ? void 0 : content[0], onMessageAction, onActionCallback)), { layout,\n                onClose,\n                onDisplay, position: getPositionProp(layout) });\n            return { Component: BannerMessage, props };\n        }\n        case 'CAROUSEL': {\n            const props = {\n                data: content === null || content === void 0 ? void 0 : content.map((item) => getContentProps(item, onMessageAction, onActionCallback)),\n                layout,\n                onClose,\n                onDisplay,\n            };\n            return { Component: CarouselMessage, props };\n        }\n        case 'FULL_SCREEN': {\n            const props = Object.assign(Object.assign({}, getContentProps(content === null || content === void 0 ? void 0 : content[0], onMessageAction, onActionCallback)), { layout,\n                onClose,\n                onDisplay });\n            return { Component: FullScreenMessage, props };\n        }\n        case 'MODAL': {\n            const props = Object.assign(Object.assign({}, getContentProps(content === null || content === void 0 ? void 0 : content[0], onMessageAction, onActionCallback)), { layout,\n                onClose,\n                onDisplay });\n            return { Component: ModalMessage, props };\n        }\n        default: {\n            logger.info(`Received unknown InAppMessage layout: ${layout}`);\n            return {\n                Component: RenderNothing,\n                props: EMPTY_PROPS,\n            };\n        }\n    }\n}\n\nexport { EMPTY_PROPS, useMessage as default };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}