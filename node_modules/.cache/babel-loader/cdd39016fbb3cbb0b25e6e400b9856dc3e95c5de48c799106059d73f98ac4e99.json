{"ast":null,"code":"var MapboxDraw = require('@mapbox/mapbox-gl-draw');\nvar createSupplementaryPoints = require(\"../utils/create_supplementary_points\");\nvar moveFeatures = require(\"../utils/move_features\");\nvar Constants = require(\"../utils/constants\");\nvar createSupplementaryPointsForCircle = require('../utils/create_supplementary_points_circle');\nvar SimpleSelectModeOverride = MapboxDraw.modes.simple_select;\nSimpleSelectModeOverride.dragMove = function (state, e) {\n  // Dragging when drag move is enabled\n  state.dragMoving = true;\n  e.originalEvent.stopPropagation();\n  var delta = {\n    lng: e.lngLat.lng - state.dragMoveLocation.lng,\n    lat: e.lngLat.lat - state.dragMoveLocation.lat\n  };\n  moveFeatures(this.getSelected(), delta);\n  this.getSelected().filter(function (feature) {\n    return feature.properties.isCircle;\n  }).map(function (circle) {\n    return circle.properties.center;\n  }).forEach(function (center) {\n    center[0] += delta.lng;\n    center[1] += delta.lat;\n  });\n  state.dragMoveLocation = e.lngLat;\n};\nSimpleSelectModeOverride.toDisplayFeatures = function (state, geojson, display) {\n  geojson.properties.active = this.isSelected(geojson.properties.id) ? Constants.activeStates.ACTIVE : Constants.activeStates.INACTIVE;\n  display(geojson);\n  this.fireActionable();\n  if (geojson.properties.active !== Constants.activeStates.ACTIVE || geojson.geometry.type === Constants.geojsonTypes.POINT) return;\n  var supplementaryPoints = geojson.properties.user_isCircle ? createSupplementaryPointsForCircle(geojson) : createSupplementaryPoints(geojson);\n  supplementaryPoints.forEach(display);\n};\nmodule.exports = SimpleSelectModeOverride;","map":{"version":3,"names":["MapboxDraw","require","createSupplementaryPoints","moveFeatures","Constants","createSupplementaryPointsForCircle","SimpleSelectModeOverride","modes","simple_select","dragMove","state","e","dragMoving","originalEvent","stopPropagation","delta","lng","lngLat","dragMoveLocation","lat","getSelected","filter","feature","properties","isCircle","map","circle","center","forEach","toDisplayFeatures","geojson","display","active","isSelected","id","activeStates","ACTIVE","INACTIVE","fireActionable","geometry","type","geojsonTypes","POINT","supplementaryPoints","user_isCircle","module","exports"],"sources":["/Users/carterbrewer/Downloads/trucker_app-main/node_modules/maplibre-gl-draw-circle/lib/modes/SimpleSelectModeOverride.js"],"sourcesContent":["const MapboxDraw = require('@mapbox/mapbox-gl-draw');\nconst createSupplementaryPoints = require(\"../utils/create_supplementary_points\");\nconst moveFeatures = require(\"../utils/move_features\");\nconst Constants = require(\"../utils/constants\");\nconst createSupplementaryPointsForCircle = require('../utils/create_supplementary_points_circle');\n\n\nconst SimpleSelectModeOverride = MapboxDraw.modes.simple_select;\n\nSimpleSelectModeOverride.dragMove = function(state, e) {\n  // Dragging when drag move is enabled\n  state.dragMoving = true;\n  e.originalEvent.stopPropagation();\n\n  const delta = {\n    lng: e.lngLat.lng - state.dragMoveLocation.lng,\n    lat: e.lngLat.lat - state.dragMoveLocation.lat\n  };\n\n  moveFeatures(this.getSelected(), delta);\n\n  this.getSelected()\n    .filter(feature => feature.properties.isCircle)\n    .map(circle => circle.properties.center)\n    .forEach(center => {\n      center[0] += delta.lng;\n      center[1] += delta.lat;\n    });\n\n  state.dragMoveLocation = e.lngLat;\n};\n\nSimpleSelectModeOverride.toDisplayFeatures = function(state, geojson, display) {\n    geojson.properties.active = (this.isSelected(geojson.properties.id)) ?\n      Constants.activeStates.ACTIVE : Constants.activeStates.INACTIVE;\n    display(geojson);\n    this.fireActionable();\n    if (geojson.properties.active !== Constants.activeStates.ACTIVE ||\n      geojson.geometry.type === Constants.geojsonTypes.POINT) return;\n    const supplementaryPoints = geojson.properties.user_isCircle ?\n      createSupplementaryPointsForCircle(geojson) : createSupplementaryPoints(geojson);\n    supplementaryPoints.forEach(display);\n};\n  \nmodule.exports = SimpleSelectModeOverride;"],"mappings":"AAAA,IAAMA,UAAU,GAAGC,OAAO,CAAC,wBAAwB,CAAC;AACpD,IAAMC,yBAAyB,GAAGD,OAAO,CAAC,sCAAsC,CAAC;AACjF,IAAME,YAAY,GAAGF,OAAO,CAAC,wBAAwB,CAAC;AACtD,IAAMG,SAAS,GAAGH,OAAO,CAAC,oBAAoB,CAAC;AAC/C,IAAMI,kCAAkC,GAAGJ,OAAO,CAAC,6CAA6C,CAAC;AAGjG,IAAMK,wBAAwB,GAAGN,UAAU,CAACO,KAAK,CAACC,aAAa;AAE/DF,wBAAwB,CAACG,QAAQ,GAAG,UAASC,KAAK,EAAEC,CAAC,EAAE;EACrD;EACAD,KAAK,CAACE,UAAU,GAAG,IAAI;EACvBD,CAAC,CAACE,aAAa,CAACC,eAAe,EAAE;EAEjC,IAAMC,KAAK,GAAG;IACZC,GAAG,EAAEL,CAAC,CAACM,MAAM,CAACD,GAAG,GAAGN,KAAK,CAACQ,gBAAgB,CAACF,GAAG;IAC9CG,GAAG,EAAER,CAAC,CAACM,MAAM,CAACE,GAAG,GAAGT,KAAK,CAACQ,gBAAgB,CAACC;EAC7C,CAAC;EAEDhB,YAAY,CAAC,IAAI,CAACiB,WAAW,EAAE,EAAEL,KAAK,CAAC;EAEvC,IAAI,CAACK,WAAW,EAAE,CACfC,MAAM,CAAC,UAAAC,OAAO;IAAA,OAAIA,OAAO,CAACC,UAAU,CAACC,QAAQ;EAAA,EAAC,CAC9CC,GAAG,CAAC,UAAAC,MAAM;IAAA,OAAIA,MAAM,CAACH,UAAU,CAACI,MAAM;EAAA,EAAC,CACvCC,OAAO,CAAC,UAAAD,MAAM,EAAI;IACjBA,MAAM,CAAC,CAAC,CAAC,IAAIZ,KAAK,CAACC,GAAG;IACtBW,MAAM,CAAC,CAAC,CAAC,IAAIZ,KAAK,CAACI,GAAG;EACxB,CAAC,CAAC;EAEJT,KAAK,CAACQ,gBAAgB,GAAGP,CAAC,CAACM,MAAM;AACnC,CAAC;AAEDX,wBAAwB,CAACuB,iBAAiB,GAAG,UAASnB,KAAK,EAAEoB,OAAO,EAAEC,OAAO,EAAE;EAC3ED,OAAO,CAACP,UAAU,CAACS,MAAM,GAAI,IAAI,CAACC,UAAU,CAACH,OAAO,CAACP,UAAU,CAACW,EAAE,CAAC,GACjE9B,SAAS,CAAC+B,YAAY,CAACC,MAAM,GAAGhC,SAAS,CAAC+B,YAAY,CAACE,QAAQ;EACjEN,OAAO,CAACD,OAAO,CAAC;EAChB,IAAI,CAACQ,cAAc,EAAE;EACrB,IAAIR,OAAO,CAACP,UAAU,CAACS,MAAM,KAAK5B,SAAS,CAAC+B,YAAY,CAACC,MAAM,IAC7DN,OAAO,CAACS,QAAQ,CAACC,IAAI,KAAKpC,SAAS,CAACqC,YAAY,CAACC,KAAK,EAAE;EAC1D,IAAMC,mBAAmB,GAAGb,OAAO,CAACP,UAAU,CAACqB,aAAa,GAC1DvC,kCAAkC,CAACyB,OAAO,CAAC,GAAG5B,yBAAyB,CAAC4B,OAAO,CAAC;EAClFa,mBAAmB,CAACf,OAAO,CAACG,OAAO,CAAC;AACxC,CAAC;AAEDc,MAAM,CAACC,OAAO,GAAGxC,wBAAwB"},"metadata":{},"sourceType":"script","externalDependencies":[]}