{"ast":null,"code":"/**\n * Note: This file was copied from mapbox-gl-draw@1.1.1 because it is no longer accessible in later versions of mapbox-gl-draw which are required for security benefits.\n *\n * If this PR gets merged https://github.com/mapbox/mapbox-gl-draw/pull/1100 or mapbox-gl-draw is forked to maplibre-gl-draw we should investigate removing these files and getting the dependencies from mapbox-gl-draw\n */\n\nvar constrainFeatureMovement = require(\"./constrain_feature_movement\");\nvar Constants = require(\"./constants\");\nmodule.exports = function (features, delta) {\n  var constrainedDelta = constrainFeatureMovement(features.map(function (feature) {\n    return feature.toGeoJSON();\n  }), delta);\n  features.forEach(function (feature) {\n    var currentCoordinates = feature.getCoordinates();\n    var moveCoordinate = function moveCoordinate(coord) {\n      var point = {\n        lng: coord[0] + constrainedDelta.lng,\n        lat: coord[1] + constrainedDelta.lat\n      };\n      return [point.lng, point.lat];\n    };\n    var moveRing = function moveRing(ring) {\n      return ring.map(function (coord) {\n        return moveCoordinate(coord);\n      });\n    };\n    var moveMultiPolygon = function moveMultiPolygon(multi) {\n      return multi.map(function (ring) {\n        return moveRing(ring);\n      });\n    };\n    var nextCoordinates;\n    if (feature.type === Constants.geojsonTypes.POINT) {\n      nextCoordinates = moveCoordinate(currentCoordinates);\n    } else if (feature.type === Constants.geojsonTypes.LINE_STRING || feature.type === Constants.geojsonTypes.MULTI_POINT) {\n      nextCoordinates = currentCoordinates.map(moveCoordinate);\n    } else if (feature.type === Constants.geojsonTypes.POLYGON || feature.type === Constants.geojsonTypes.MULTI_LINE_STRING) {\n      nextCoordinates = currentCoordinates.map(moveRing);\n    } else if (feature.type === Constants.geojsonTypes.MULTI_POLYGON) {\n      nextCoordinates = currentCoordinates.map(moveMultiPolygon);\n    }\n    feature.incomingCoords(nextCoordinates);\n  });\n};","map":{"version":3,"names":["constrainFeatureMovement","require","Constants","module","exports","features","delta","constrainedDelta","map","feature","toGeoJSON","forEach","currentCoordinates","getCoordinates","moveCoordinate","coord","point","lng","lat","moveRing","ring","moveMultiPolygon","multi","nextCoordinates","type","geojsonTypes","POINT","LINE_STRING","MULTI_POINT","POLYGON","MULTI_LINE_STRING","MULTI_POLYGON","incomingCoords"],"sources":["/Users/carterbrewer/Downloads/trucker_app-main/node_modules/maplibre-gl-draw-circle/lib/utils/move_features.js"],"sourcesContent":["/**\n * Note: This file was copied from mapbox-gl-draw@1.1.1 because it is no longer accessible in later versions of mapbox-gl-draw which are required for security benefits.\n *\n * If this PR gets merged https://github.com/mapbox/mapbox-gl-draw/pull/1100 or mapbox-gl-draw is forked to maplibre-gl-draw we should investigate removing these files and getting the dependencies from mapbox-gl-draw\n */\n\nconst constrainFeatureMovement = require(\"./constrain_feature_movement\");\nconst Constants = require(\"./constants\");\n\nmodule.exports = function (features, delta) {\n  const constrainedDelta = constrainFeatureMovement(\n    features.map((feature) => feature.toGeoJSON()),\n    delta\n  );\n\n  features.forEach((feature) => {\n    const currentCoordinates = feature.getCoordinates();\n\n    const moveCoordinate = (coord) => {\n      const point = {\n        lng: coord[0] + constrainedDelta.lng,\n        lat: coord[1] + constrainedDelta.lat,\n      };\n      return [point.lng, point.lat];\n    };\n    const moveRing = (ring) => ring.map((coord) => moveCoordinate(coord));\n    const moveMultiPolygon = (multi) => multi.map((ring) => moveRing(ring));\n\n    let nextCoordinates;\n    if (feature.type === Constants.geojsonTypes.POINT) {\n      nextCoordinates = moveCoordinate(currentCoordinates);\n    } else if (feature.type === Constants.geojsonTypes.LINE_STRING || feature.type === Constants.geojsonTypes.MULTI_POINT) {\n      nextCoordinates = currentCoordinates.map(moveCoordinate);\n    } else if (feature.type === Constants.geojsonTypes.POLYGON || feature.type === Constants.geojsonTypes.MULTI_LINE_STRING) {\n      nextCoordinates = currentCoordinates.map(moveRing);\n    } else if (feature.type === Constants.geojsonTypes.MULTI_POLYGON) {\n      nextCoordinates = currentCoordinates.map(moveMultiPolygon);\n    }\n\n    feature.incomingCoords(nextCoordinates);\n  });\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA,IAAMA,wBAAwB,GAAGC,OAAO,CAAC,8BAA8B,CAAC;AACxE,IAAMC,SAAS,GAAGD,OAAO,CAAC,aAAa,CAAC;AAExCE,MAAM,CAACC,OAAO,GAAG,UAAUC,QAAQ,EAAEC,KAAK,EAAE;EAC1C,IAAMC,gBAAgB,GAAGP,wBAAwB,CAC/CK,QAAQ,CAACG,GAAG,CAAC,UAACC,OAAO;IAAA,OAAKA,OAAO,CAACC,SAAS,EAAE;EAAA,EAAC,EAC9CJ,KAAK,CACN;EAEDD,QAAQ,CAACM,OAAO,CAAC,UAACF,OAAO,EAAK;IAC5B,IAAMG,kBAAkB,GAAGH,OAAO,CAACI,cAAc,EAAE;IAEnD,IAAMC,cAAc,GAAG,SAAjBA,cAAc,CAAIC,KAAK,EAAK;MAChC,IAAMC,KAAK,GAAG;QACZC,GAAG,EAAEF,KAAK,CAAC,CAAC,CAAC,GAAGR,gBAAgB,CAACU,GAAG;QACpCC,GAAG,EAAEH,KAAK,CAAC,CAAC,CAAC,GAAGR,gBAAgB,CAACW;MACnC,CAAC;MACD,OAAO,CAACF,KAAK,CAACC,GAAG,EAAED,KAAK,CAACE,GAAG,CAAC;IAC/B,CAAC;IACD,IAAMC,QAAQ,GAAG,SAAXA,QAAQ,CAAIC,IAAI;MAAA,OAAKA,IAAI,CAACZ,GAAG,CAAC,UAACO,KAAK;QAAA,OAAKD,cAAc,CAACC,KAAK,CAAC;MAAA,EAAC;IAAA;IACrE,IAAMM,gBAAgB,GAAG,SAAnBA,gBAAgB,CAAIC,KAAK;MAAA,OAAKA,KAAK,CAACd,GAAG,CAAC,UAACY,IAAI;QAAA,OAAKD,QAAQ,CAACC,IAAI,CAAC;MAAA,EAAC;IAAA;IAEvE,IAAIG,eAAe;IACnB,IAAId,OAAO,CAACe,IAAI,KAAKtB,SAAS,CAACuB,YAAY,CAACC,KAAK,EAAE;MACjDH,eAAe,GAAGT,cAAc,CAACF,kBAAkB,CAAC;IACtD,CAAC,MAAM,IAAIH,OAAO,CAACe,IAAI,KAAKtB,SAAS,CAACuB,YAAY,CAACE,WAAW,IAAIlB,OAAO,CAACe,IAAI,KAAKtB,SAAS,CAACuB,YAAY,CAACG,WAAW,EAAE;MACrHL,eAAe,GAAGX,kBAAkB,CAACJ,GAAG,CAACM,cAAc,CAAC;IAC1D,CAAC,MAAM,IAAIL,OAAO,CAACe,IAAI,KAAKtB,SAAS,CAACuB,YAAY,CAACI,OAAO,IAAIpB,OAAO,CAACe,IAAI,KAAKtB,SAAS,CAACuB,YAAY,CAACK,iBAAiB,EAAE;MACvHP,eAAe,GAAGX,kBAAkB,CAACJ,GAAG,CAACW,QAAQ,CAAC;IACpD,CAAC,MAAM,IAAIV,OAAO,CAACe,IAAI,KAAKtB,SAAS,CAACuB,YAAY,CAACM,aAAa,EAAE;MAChER,eAAe,GAAGX,kBAAkB,CAACJ,GAAG,CAACa,gBAAgB,CAAC;IAC5D;IAEAZ,OAAO,CAACuB,cAAc,CAACT,eAAe,CAAC;EACzC,CAAC,CAAC;AACJ,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}