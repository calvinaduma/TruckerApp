{"ast":null,"code":"import { __assign, __spreadArray, __read, __values, __rest } from './_virtual/_tslib.js';\nimport { isFunction, mapValues, isArray, flatten, toArray, toStateValue, isString, getEventType, toSCXMLEvent, matchesState, path, evaluateGuard, mapContext, pathToStateValue, isBuiltInEvent, partition, updateHistoryValue, toStatePath, mapFilterValues, warn, toStatePaths, nestedPath, normalizeTarget, toGuard, toTransitionConfigArray, isMachine, createInvokeId } from './utils.js';\nimport { SpecialTargets } from './types.js';\nimport { State, stateValuesEqual } from './State.js';\nimport { raise as raise$1, send, start as start$1, stop as stop$1, invoke, update, nullEvent } from './actionTypes.js';\nimport { done, start, toActionObjects, raise, stop, resolveActions, doneInvoke, error, toActionObject, toActivityDefinition, after, send as send$1, cancel, initEvent } from './actions.js';\nimport { IS_PRODUCTION } from './environment.js';\nimport { STATE_DELIMITER } from './constants.js';\nimport { getAllStateNodes, getConfiguration, isInFinalState, getTagsFromConfiguration, has, getChildren, getValue, isLeafNode, getAllChildren } from './stateUtils.js';\nimport { createInvocableActor } from './Actor.js';\nimport { toInvokeDefinition } from './invokeUtils.js';\nvar NULL_EVENT = '';\nvar STATE_IDENTIFIER = '#';\nvar WILDCARD = '*';\nvar EMPTY_OBJECT = {};\nvar isStateId = function isStateId(str) {\n  return str[0] === STATE_IDENTIFIER;\n};\nvar createDefaultOptions = function createDefaultOptions() {\n  return {\n    actions: {},\n    guards: {},\n    services: {},\n    activities: {},\n    delays: {}\n  };\n};\nvar validateArrayifiedTransitions = function validateArrayifiedTransitions(stateNode, event, transitions) {\n  var hasNonLastUnguardedTarget = transitions.slice(0, -1).some(function (transition) {\n    return !('cond' in transition) && !('in' in transition) && (isString(transition.target) || isMachine(transition.target));\n  });\n  var eventText = event === NULL_EVENT ? 'the transient event' : \"event '\".concat(event, \"'\");\n  warn(!hasNonLastUnguardedTarget, \"One or more transitions for \".concat(eventText, \" on state '\").concat(stateNode.id, \"' are unreachable. \") + \"Make sure that the default transition is the last one defined.\");\n};\nvar StateNode = /*#__PURE__*/\n\n/** @class */\nfunction () {\n  function StateNode(\n  /**\r\n   * The raw config used to create the machine.\r\n   */\n  config, options,\n  /**\r\n   * The initial extended state\r\n   */\n  _context,\n  // TODO: this is unsafe, but we're removing it in v5 anyway\n  _stateInfo) {\n    if (_context === void 0) {\n      _context = 'context' in config ? config.context : undefined;\n    }\n    var _this = this;\n    var _a;\n    this.config = config;\n    this._context = _context;\n    /**\r\n     * The order this state node appears. Corresponds to the implicit SCXML document order.\r\n     */\n\n    this.order = -1;\n    this.__xstatenode = true;\n    this.__cache = {\n      events: undefined,\n      relativeValue: new Map(),\n      initialStateValue: undefined,\n      initialState: undefined,\n      on: undefined,\n      transitions: undefined,\n      candidates: {},\n      delayedTransitions: undefined\n    };\n    this.idMap = {};\n    this.tags = [];\n    this.options = Object.assign(createDefaultOptions(), options);\n    this.parent = _stateInfo === null || _stateInfo === void 0 ? void 0 : _stateInfo.parent;\n    this.key = this.config.key || (_stateInfo === null || _stateInfo === void 0 ? void 0 : _stateInfo.key) || this.config.id || '(machine)';\n    this.machine = this.parent ? this.parent.machine : this;\n    this.path = this.parent ? this.parent.path.concat(this.key) : [];\n    this.delimiter = this.config.delimiter || (this.parent ? this.parent.delimiter : STATE_DELIMITER);\n    this.id = this.config.id || __spreadArray([this.machine.key], __read(this.path), false).join(this.delimiter);\n    this.version = this.parent ? this.parent.version : this.config.version;\n    this.type = this.config.type || (this.config.parallel ? 'parallel' : this.config.states && Object.keys(this.config.states).length ? 'compound' : this.config.history ? 'history' : 'atomic');\n    this.schema = this.parent ? this.machine.schema : (_a = this.config.schema) !== null && _a !== void 0 ? _a : {};\n    this.description = this.config.description;\n    if (!IS_PRODUCTION) {\n      warn(!('parallel' in this.config), \"The \\\"parallel\\\" property is deprecated and will be removed in version 4.1. \".concat(this.config.parallel ? \"Replace with `type: 'parallel'`\" : \"Use `type: '\".concat(this.type, \"'`\"), \" in the config for state node '\").concat(this.id, \"' instead.\"));\n    }\n    this.initial = this.config.initial;\n    this.states = this.config.states ? mapValues(this.config.states, function (stateConfig, key) {\n      var _a;\n      var stateNode = new StateNode(stateConfig, {}, undefined, {\n        parent: _this,\n        key: key\n      });\n      Object.assign(_this.idMap, __assign((_a = {}, _a[stateNode.id] = stateNode, _a), stateNode.idMap));\n      return stateNode;\n    }) : EMPTY_OBJECT; // Document order\n\n    var order = 0;\n    function dfs(stateNode) {\n      var e_1, _a;\n      stateNode.order = order++;\n      try {\n        for (var _b = __values(getAllChildren(stateNode)), _c = _b.next(); !_c.done; _c = _b.next()) {\n          var child = _c.value;\n          dfs(child);\n        }\n      } catch (e_1_1) {\n        e_1 = {\n          error: e_1_1\n        };\n      } finally {\n        try {\n          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n    }\n    dfs(this); // History config\n\n    this.history = this.config.history === true ? 'shallow' : this.config.history || false;\n    this._transient = !!this.config.always || (!this.config.on ? false : Array.isArray(this.config.on) ? this.config.on.some(function (_a) {\n      var event = _a.event;\n      return event === NULL_EVENT;\n    }) : NULL_EVENT in this.config.on);\n    this.strict = !!this.config.strict; // TODO: deprecate (entry)\n\n    this.onEntry = toArray(this.config.entry || this.config.onEntry).map(function (action) {\n      return toActionObject(action);\n    }); // TODO: deprecate (exit)\n\n    this.onExit = toArray(this.config.exit || this.config.onExit).map(function (action) {\n      return toActionObject(action);\n    });\n    this.meta = this.config.meta;\n    this.doneData = this.type === 'final' ? this.config.data : undefined;\n    this.invoke = toArray(this.config.invoke).map(function (invokeConfig, i) {\n      var _a, _b;\n      if (isMachine(invokeConfig)) {\n        var invokeId = createInvokeId(_this.id, i);\n        _this.machine.options.services = __assign((_a = {}, _a[invokeId] = invokeConfig, _a), _this.machine.options.services);\n        return toInvokeDefinition({\n          src: invokeId,\n          id: invokeId\n        });\n      } else if (isString(invokeConfig.src)) {\n        var invokeId = invokeConfig.id || createInvokeId(_this.id, i);\n        return toInvokeDefinition(__assign(__assign({}, invokeConfig), {\n          id: invokeId,\n          src: invokeConfig.src\n        }));\n      } else if (isMachine(invokeConfig.src) || isFunction(invokeConfig.src)) {\n        var invokeId = invokeConfig.id || createInvokeId(_this.id, i);\n        _this.machine.options.services = __assign((_b = {}, _b[invokeId] = invokeConfig.src, _b), _this.machine.options.services);\n        return toInvokeDefinition(__assign(__assign({\n          id: invokeId\n        }, invokeConfig), {\n          src: invokeId\n        }));\n      } else {\n        var invokeSource = invokeConfig.src;\n        return toInvokeDefinition(__assign(__assign({\n          id: createInvokeId(_this.id, i)\n        }, invokeConfig), {\n          src: invokeSource\n        }));\n      }\n    });\n    this.activities = toArray(this.config.activities).concat(this.invoke).map(function (activity) {\n      return toActivityDefinition(activity);\n    });\n    this.transition = this.transition.bind(this);\n    this.tags = toArray(this.config.tags); // TODO: this is the real fix for initialization once\n    // state node getters are deprecated\n    // if (!this.parent) {\n    //   this._init();\n    // }\n  }\n\n  StateNode.prototype._init = function () {\n    if (this.__cache.transitions) {\n      return;\n    }\n    getAllStateNodes(this).forEach(function (stateNode) {\n      return stateNode.on;\n    });\n  };\n  /**\r\n   * Clones this state machine with custom options and context.\r\n   *\r\n   * @param options Options (actions, guards, activities, services) to recursively merge with the existing options.\r\n   * @param context Custom context (will override predefined context)\r\n   */\n\n  StateNode.prototype.withConfig = function (options, context) {\n    var _a = this.options,\n      actions = _a.actions,\n      activities = _a.activities,\n      guards = _a.guards,\n      services = _a.services,\n      delays = _a.delays;\n    return new StateNode(this.config, {\n      actions: __assign(__assign({}, actions), options.actions),\n      activities: __assign(__assign({}, activities), options.activities),\n      guards: __assign(__assign({}, guards), options.guards),\n      services: __assign(__assign({}, services), options.services),\n      delays: __assign(__assign({}, delays), options.delays)\n    }, context !== null && context !== void 0 ? context : this.context);\n  };\n  /**\r\n   * Clones this state machine with custom context.\r\n   *\r\n   * @param context Custom context (will override predefined context, not recursive)\r\n   */\n\n  StateNode.prototype.withContext = function (context) {\n    return new StateNode(this.config, this.options, context);\n  };\n  Object.defineProperty(StateNode.prototype, \"context\", {\n    get: function get() {\n      return isFunction(this._context) ? this._context() : this._context;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(StateNode.prototype, \"definition\", {\n    /**\r\n     * The well-structured state node definition.\r\n     */\n    get: function get() {\n      return {\n        id: this.id,\n        key: this.key,\n        version: this.version,\n        context: this.context,\n        type: this.type,\n        initial: this.initial,\n        history: this.history,\n        states: mapValues(this.states, function (state) {\n          return state.definition;\n        }),\n        on: this.on,\n        transitions: this.transitions,\n        entry: this.onEntry,\n        exit: this.onExit,\n        activities: this.activities || [],\n        meta: this.meta,\n        order: this.order || -1,\n        data: this.doneData,\n        invoke: this.invoke,\n        description: this.description,\n        tags: this.tags\n      };\n    },\n    enumerable: false,\n    configurable: true\n  });\n  StateNode.prototype.toJSON = function () {\n    return this.definition;\n  };\n  Object.defineProperty(StateNode.prototype, \"on\", {\n    /**\r\n     * The mapping of events to transitions.\r\n     */\n    get: function get() {\n      if (this.__cache.on) {\n        return this.__cache.on;\n      }\n      var transitions = this.transitions;\n      return this.__cache.on = transitions.reduce(function (map, transition) {\n        map[transition.eventType] = map[transition.eventType] || [];\n        map[transition.eventType].push(transition);\n        return map;\n      }, {});\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(StateNode.prototype, \"after\", {\n    get: function get() {\n      return this.__cache.delayedTransitions || (this.__cache.delayedTransitions = this.getDelayedTransitions(), this.__cache.delayedTransitions);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(StateNode.prototype, \"transitions\", {\n    /**\r\n     * All the transitions that can be taken from this state node.\r\n     */\n    get: function get() {\n      return this.__cache.transitions || (this.__cache.transitions = this.formatTransitions(), this.__cache.transitions);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  StateNode.prototype.getCandidates = function (eventName) {\n    if (this.__cache.candidates[eventName]) {\n      return this.__cache.candidates[eventName];\n    }\n    var transient = eventName === NULL_EVENT;\n    var candidates = this.transitions.filter(function (transition) {\n      var sameEventType = transition.eventType === eventName; // null events should only match against eventless transitions\n\n      return transient ? sameEventType : sameEventType || transition.eventType === WILDCARD;\n    });\n    this.__cache.candidates[eventName] = candidates;\n    return candidates;\n  };\n  /**\r\n   * All delayed transitions from the config.\r\n   */\n\n  StateNode.prototype.getDelayedTransitions = function () {\n    var _this = this;\n    var afterConfig = this.config.after;\n    if (!afterConfig) {\n      return [];\n    }\n    var mutateEntryExit = function mutateEntryExit(delay, i) {\n      var delayRef = isFunction(delay) ? \"\".concat(_this.id, \":delay[\").concat(i, \"]\") : delay;\n      var eventType = after(delayRef, _this.id);\n      _this.onEntry.push(send$1(eventType, {\n        delay: delay\n      }));\n      _this.onExit.push(cancel(eventType));\n      return eventType;\n    };\n    var delayedTransitions = isArray(afterConfig) ? afterConfig.map(function (transition, i) {\n      var eventType = mutateEntryExit(transition.delay, i);\n      return __assign(__assign({}, transition), {\n        event: eventType\n      });\n    }) : flatten(Object.keys(afterConfig).map(function (delay, i) {\n      var configTransition = afterConfig[delay];\n      var resolvedTransition = isString(configTransition) ? {\n        target: configTransition\n      } : configTransition;\n      var resolvedDelay = !isNaN(+delay) ? +delay : delay;\n      var eventType = mutateEntryExit(resolvedDelay, i);\n      return toArray(resolvedTransition).map(function (transition) {\n        return __assign(__assign({}, transition), {\n          event: eventType,\n          delay: resolvedDelay\n        });\n      });\n    }));\n    return delayedTransitions.map(function (delayedTransition) {\n      var delay = delayedTransition.delay;\n      return __assign(__assign({}, _this.formatTransition(delayedTransition)), {\n        delay: delay\n      });\n    });\n  };\n  /**\r\n   * Returns the state nodes represented by the current state value.\r\n   *\r\n   * @param state The state value or State instance\r\n   */\n\n  StateNode.prototype.getStateNodes = function (state) {\n    var _a;\n    var _this = this;\n    if (!state) {\n      return [];\n    }\n    var stateValue = state instanceof State ? state.value : toStateValue(state, this.delimiter);\n    if (isString(stateValue)) {\n      var initialStateValue = this.getStateNode(stateValue).initial;\n      return initialStateValue !== undefined ? this.getStateNodes((_a = {}, _a[stateValue] = initialStateValue, _a)) : [this, this.states[stateValue]];\n    }\n    var subStateKeys = Object.keys(stateValue);\n    var subStateNodes = [this];\n    subStateNodes.push.apply(subStateNodes, __spreadArray([], __read(flatten(subStateKeys.map(function (subStateKey) {\n      return _this.getStateNode(subStateKey).getStateNodes(stateValue[subStateKey]);\n    }))), false));\n    return subStateNodes;\n  };\n  /**\r\n   * Returns `true` if this state node explicitly handles the given event.\r\n   *\r\n   * @param event The event in question\r\n   */\n\n  StateNode.prototype.handles = function (event) {\n    var eventType = getEventType(event);\n    return this.events.includes(eventType);\n  };\n  /**\r\n   * Resolves the given `state` to a new `State` instance relative to this machine.\r\n   *\r\n   * This ensures that `.events` and `.nextEvents` represent the correct values.\r\n   *\r\n   * @param state The state to resolve\r\n   */\n\n  StateNode.prototype.resolveState = function (state) {\n    var stateFromConfig = state instanceof State ? state : State.create(state);\n    var configuration = Array.from(getConfiguration([], this.getStateNodes(stateFromConfig.value)));\n    return new State(__assign(__assign({}, stateFromConfig), {\n      value: this.resolve(stateFromConfig.value),\n      configuration: configuration,\n      done: isInFinalState(configuration, this),\n      tags: getTagsFromConfiguration(configuration),\n      machine: this.machine\n    }));\n  };\n  StateNode.prototype.transitionLeafNode = function (stateValue, state, _event) {\n    var stateNode = this.getStateNode(stateValue);\n    var next = stateNode.next(state, _event);\n    if (!next || !next.transitions.length) {\n      return this.next(state, _event);\n    }\n    return next;\n  };\n  StateNode.prototype.transitionCompoundNode = function (stateValue, state, _event) {\n    var subStateKeys = Object.keys(stateValue);\n    var stateNode = this.getStateNode(subStateKeys[0]);\n    var next = stateNode._transition(stateValue[subStateKeys[0]], state, _event);\n    if (!next || !next.transitions.length) {\n      return this.next(state, _event);\n    }\n    return next;\n  };\n  StateNode.prototype.transitionParallelNode = function (stateValue, state, _event) {\n    var e_2, _a;\n    var transitionMap = {};\n    try {\n      for (var _b = __values(Object.keys(stateValue)), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var subStateKey = _c.value;\n        var subStateValue = stateValue[subStateKey];\n        if (!subStateValue) {\n          continue;\n        }\n        var subStateNode = this.getStateNode(subStateKey);\n        var next = subStateNode._transition(subStateValue, state, _event);\n        if (next) {\n          transitionMap[subStateKey] = next;\n        }\n      }\n    } catch (e_2_1) {\n      e_2 = {\n        error: e_2_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_2) throw e_2.error;\n      }\n    }\n    var stateTransitions = Object.keys(transitionMap).map(function (key) {\n      return transitionMap[key];\n    });\n    var enabledTransitions = flatten(stateTransitions.map(function (st) {\n      return st.transitions;\n    }));\n    var willTransition = stateTransitions.some(function (st) {\n      return st.transitions.length > 0;\n    });\n    if (!willTransition) {\n      return this.next(state, _event);\n    }\n    var entryNodes = flatten(stateTransitions.map(function (t) {\n      return t.entrySet;\n    }));\n    var configuration = flatten(Object.keys(transitionMap).map(function (key) {\n      return transitionMap[key].configuration;\n    }));\n    return {\n      transitions: enabledTransitions,\n      entrySet: entryNodes,\n      exitSet: flatten(stateTransitions.map(function (t) {\n        return t.exitSet;\n      })),\n      configuration: configuration,\n      source: state,\n      actions: flatten(Object.keys(transitionMap).map(function (key) {\n        return transitionMap[key].actions;\n      }))\n    };\n  };\n  StateNode.prototype._transition = function (stateValue, state, _event) {\n    // leaf node\n    if (isString(stateValue)) {\n      return this.transitionLeafNode(stateValue, state, _event);\n    } // hierarchical node\n\n    if (Object.keys(stateValue).length === 1) {\n      return this.transitionCompoundNode(stateValue, state, _event);\n    } // orthogonal node\n\n    return this.transitionParallelNode(stateValue, state, _event);\n  };\n  StateNode.prototype.getTransitionData = function (state, event) {\n    return this._transition(state.value, state, toSCXMLEvent(event));\n  };\n  StateNode.prototype.next = function (state, _event) {\n    var e_3, _a;\n    var _this = this;\n    var eventName = _event.name;\n    var actions = [];\n    var nextStateNodes = [];\n    var selectedTransition;\n    try {\n      for (var _b = __values(this.getCandidates(eventName)), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var candidate = _c.value;\n        var cond = candidate.cond,\n          stateIn = candidate.in;\n        var resolvedContext = state.context;\n        var isInState = stateIn ? isString(stateIn) && isStateId(stateIn) ?\n        // Check if in state by ID\n        state.matches(toStateValue(this.getStateNodeById(stateIn).path, this.delimiter)) :\n        // Check if in state by relative grandparent\n        matchesState(toStateValue(stateIn, this.delimiter), path(this.path.slice(0, -2))(state.value)) : true;\n        var guardPassed = false;\n        try {\n          guardPassed = !cond || evaluateGuard(this.machine, cond, resolvedContext, _event, state);\n        } catch (err) {\n          throw new Error(\"Unable to evaluate guard '\".concat(cond.name || cond.type, \"' in transition for event '\").concat(eventName, \"' in state node '\").concat(this.id, \"':\\n\").concat(err.message));\n        }\n        if (guardPassed && isInState) {\n          if (candidate.target !== undefined) {\n            nextStateNodes = candidate.target;\n          }\n          actions.push.apply(actions, __spreadArray([], __read(candidate.actions), false));\n          selectedTransition = candidate;\n          break;\n        }\n      }\n    } catch (e_3_1) {\n      e_3 = {\n        error: e_3_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_3) throw e_3.error;\n      }\n    }\n    if (!selectedTransition) {\n      return undefined;\n    }\n    if (!nextStateNodes.length) {\n      return {\n        transitions: [selectedTransition],\n        entrySet: [],\n        exitSet: [],\n        configuration: state.value ? [this] : [],\n        source: state,\n        actions: actions\n      };\n    }\n    var allNextStateNodes = flatten(nextStateNodes.map(function (stateNode) {\n      return _this.getRelativeStateNodes(stateNode, state.historyValue);\n    }));\n    var isInternal = !!selectedTransition.internal;\n    var reentryNodes = [];\n    if (!isInternal) {\n      nextStateNodes.forEach(function (targetNode) {\n        reentryNodes.push.apply(reentryNodes, __spreadArray([], __read(_this.getExternalReentryNodes(targetNode)), false));\n      });\n    }\n    return {\n      transitions: [selectedTransition],\n      entrySet: reentryNodes,\n      exitSet: isInternal ? [] : [this],\n      configuration: allNextStateNodes,\n      source: state,\n      actions: actions\n    };\n  };\n  StateNode.prototype.getExternalReentryNodes = function (targetNode) {\n    var nodes = [];\n    var _a = __read(targetNode.order > this.order ? [targetNode, this] : [this, targetNode], 2),\n      marker = _a[0],\n      possibleAncestor = _a[1];\n    while (marker && marker !== possibleAncestor) {\n      nodes.push(marker);\n      marker = marker.parent;\n    }\n    if (marker !== possibleAncestor) {\n      // we never got to `possibleAncestor`, therefore the initial `marker` \"escapes\" it\n      // it's in a different part of the tree so no states will be reentered for such an external transition\n      return [];\n    }\n    nodes.push(possibleAncestor);\n    return nodes;\n  };\n  StateNode.prototype.getActions = function (resolvedConfig, isDone, transition, currentContext, _event, prevState, predictableExec) {\n    var e_4, _a, e_5, _b;\n    var _this = this;\n    var prevConfig = getConfiguration([], prevState ? this.getStateNodes(prevState.value) : [this]);\n    try {\n      for (var resolvedConfig_1 = __values(resolvedConfig), resolvedConfig_1_1 = resolvedConfig_1.next(); !resolvedConfig_1_1.done; resolvedConfig_1_1 = resolvedConfig_1.next()) {\n        var sn = resolvedConfig_1_1.value;\n        if (!has(prevConfig, sn) || has(transition.entrySet, sn.parent) && !has(transition.entrySet, sn)) {\n          transition.entrySet.push(sn);\n        }\n      }\n    } catch (e_4_1) {\n      e_4 = {\n        error: e_4_1\n      };\n    } finally {\n      try {\n        if (resolvedConfig_1_1 && !resolvedConfig_1_1.done && (_a = resolvedConfig_1.return)) _a.call(resolvedConfig_1);\n      } finally {\n        if (e_4) throw e_4.error;\n      }\n    }\n    try {\n      for (var prevConfig_1 = __values(prevConfig), prevConfig_1_1 = prevConfig_1.next(); !prevConfig_1_1.done; prevConfig_1_1 = prevConfig_1.next()) {\n        var sn = prevConfig_1_1.value;\n        if (!has(resolvedConfig, sn) || has(transition.exitSet, sn.parent)) {\n          transition.exitSet.push(sn);\n        }\n      }\n    } catch (e_5_1) {\n      e_5 = {\n        error: e_5_1\n      };\n    } finally {\n      try {\n        if (prevConfig_1_1 && !prevConfig_1_1.done && (_b = prevConfig_1.return)) _b.call(prevConfig_1);\n      } finally {\n        if (e_5) throw e_5.error;\n      }\n    }\n    var doneEvents = flatten(transition.entrySet.map(function (sn) {\n      var events = [];\n      if (sn.type !== 'final') {\n        return events;\n      }\n      var parent = sn.parent;\n      if (!parent.parent) {\n        return events;\n      }\n      events.push(done(sn.id, sn.doneData),\n      // TODO: deprecate - final states should not emit done events for their own state.\n      done(parent.id, sn.doneData ? mapContext(sn.doneData, currentContext, _event) : undefined));\n      var grandparent = parent.parent;\n      if (grandparent.type === 'parallel') {\n        if (getChildren(grandparent).every(function (parentNode) {\n          return isInFinalState(transition.configuration, parentNode);\n        })) {\n          events.push(done(grandparent.id));\n        }\n      }\n      return events;\n    }));\n    transition.exitSet.sort(function (a, b) {\n      return b.order - a.order;\n    });\n    transition.entrySet.sort(function (a, b) {\n      return a.order - b.order;\n    });\n    var entryStates = new Set(transition.entrySet);\n    var exitStates = new Set(transition.exitSet);\n    var entryActions = Array.from(entryStates).map(function (stateNode) {\n      var entryActions = stateNode.onEntry;\n      var invokeActions = stateNode.activities.map(function (activity) {\n        return start(activity);\n      });\n      return toActionObjects(predictableExec ? __spreadArray(__spreadArray([], __read(entryActions), false), __read(invokeActions), false) : __spreadArray(__spreadArray([], __read(invokeActions), false), __read(entryActions), false), _this.machine.options.actions);\n    }).concat([doneEvents.map(raise)]);\n    var exitActions = Array.from(exitStates).map(function (stateNode) {\n      return toActionObjects(__spreadArray(__spreadArray([], __read(stateNode.onExit), false), __read(stateNode.activities.map(function (activity) {\n        return stop(activity);\n      })), false), _this.machine.options.actions);\n    });\n    var actions = exitActions.concat([toActionObjects(transition.actions, this.machine.options.actions)]).concat(entryActions);\n    if (isDone) {\n      var stopActions = toActionObjects(flatten(__spreadArray([], __read(resolvedConfig), false).sort(function (a, b) {\n        return b.order - a.order;\n      }).map(function (stateNode) {\n        return stateNode.onExit;\n      })), this.machine.options.actions).filter(function (action) {\n        return action.type !== raise$1 && (action.type !== send || !!action.to && action.to !== SpecialTargets.Internal);\n      });\n      return actions.concat([stopActions]);\n    }\n    return actions;\n  };\n  /**\r\n   * Determines the next state given the current `state` and sent `event`.\r\n   *\r\n   * @param state The current State instance or state value\r\n   * @param event The event that was sent at the current state\r\n   * @param context The current context (extended state) of the current state\r\n   */\n\n  StateNode.prototype.transition = function (state, event, context, exec) {\n    if (state === void 0) {\n      state = this.initialState;\n    }\n    var _event = toSCXMLEvent(event);\n    var currentState;\n    if (state instanceof State) {\n      currentState = context === undefined ? state : this.resolveState(State.from(state, context));\n    } else {\n      var resolvedStateValue = isString(state) ? this.resolve(pathToStateValue(this.getResolvedPath(state))) : this.resolve(state);\n      var resolvedContext = context !== null && context !== void 0 ? context : this.machine.context;\n      currentState = this.resolveState(State.from(resolvedStateValue, resolvedContext));\n    }\n    if (!IS_PRODUCTION && _event.name === WILDCARD) {\n      throw new Error(\"An event cannot have the wildcard type ('\".concat(WILDCARD, \"')\"));\n    }\n    if (this.strict) {\n      if (!this.events.includes(_event.name) && !isBuiltInEvent(_event.name)) {\n        throw new Error(\"Machine '\".concat(this.id, \"' does not accept event '\").concat(_event.name, \"'\"));\n      }\n    }\n    var stateTransition = this._transition(currentState.value, currentState, _event) || {\n      transitions: [],\n      configuration: [],\n      entrySet: [],\n      exitSet: [],\n      source: currentState,\n      actions: []\n    };\n    var prevConfig = getConfiguration([], this.getStateNodes(currentState.value));\n    var resolvedConfig = stateTransition.configuration.length ? getConfiguration(prevConfig, stateTransition.configuration) : prevConfig;\n    stateTransition.configuration = __spreadArray([], __read(resolvedConfig), false);\n    return this.resolveTransition(stateTransition, currentState, currentState.context, exec, _event);\n  };\n  StateNode.prototype.resolveRaisedTransition = function (state, _event, originalEvent, predictableExec) {\n    var _a;\n    var currentActions = state.actions;\n    state = this.transition(state, _event, undefined, predictableExec); // Save original event to state\n    // TODO: this should be the raised event! Delete in V5 (breaking)\n\n    state._event = originalEvent;\n    state.event = originalEvent.data;\n    (_a = state.actions).unshift.apply(_a, __spreadArray([], __read(currentActions), false));\n    return state;\n  };\n  StateNode.prototype.resolveTransition = function (stateTransition, currentState, context, predictableExec, _event) {\n    var e_6, _a, e_7, _b;\n    var _this = this;\n    if (_event === void 0) {\n      _event = initEvent;\n    }\n    var configuration = stateTransition.configuration; // Transition will \"apply\" if:\n    // - this is the initial state (there is no current state)\n    // - OR there are transitions\n\n    var willTransition = !currentState || stateTransition.transitions.length > 0;\n    var resolvedConfiguration = willTransition ? stateTransition.configuration : currentState ? currentState.configuration : [];\n    var isDone = isInFinalState(resolvedConfiguration, this);\n    var resolvedStateValue = willTransition ? getValue(this.machine, configuration) : undefined;\n    var historyValue = currentState ? currentState.historyValue ? currentState.historyValue : stateTransition.source ? this.machine.historyValue(currentState.value) : undefined : undefined;\n    var actionBlocks = this.getActions(new Set(resolvedConfiguration), isDone, stateTransition, context, _event, currentState, predictableExec);\n    var activities = currentState ? __assign({}, currentState.activities) : {};\n    try {\n      for (var actionBlocks_1 = __values(actionBlocks), actionBlocks_1_1 = actionBlocks_1.next(); !actionBlocks_1_1.done; actionBlocks_1_1 = actionBlocks_1.next()) {\n        var block = actionBlocks_1_1.value;\n        try {\n          for (var block_1 = (e_7 = void 0, __values(block)), block_1_1 = block_1.next(); !block_1_1.done; block_1_1 = block_1.next()) {\n            var action = block_1_1.value;\n            if (action.type === start$1) {\n              activities[action.activity.id || action.activity.type] = action;\n            } else if (action.type === stop$1) {\n              activities[action.activity.id || action.activity.type] = false;\n            }\n          }\n        } catch (e_7_1) {\n          e_7 = {\n            error: e_7_1\n          };\n        } finally {\n          try {\n            if (block_1_1 && !block_1_1.done && (_b = block_1.return)) _b.call(block_1);\n          } finally {\n            if (e_7) throw e_7.error;\n          }\n        }\n      }\n    } catch (e_6_1) {\n      e_6 = {\n        error: e_6_1\n      };\n    } finally {\n      try {\n        if (actionBlocks_1_1 && !actionBlocks_1_1.done && (_a = actionBlocks_1.return)) _a.call(actionBlocks_1);\n      } finally {\n        if (e_6) throw e_6.error;\n      }\n    }\n    var _c = __read(resolveActions(this, currentState, context, _event, actionBlocks, predictableExec, this.machine.config.predictableActionArguments || this.machine.config.preserveActionOrder), 2),\n      resolvedActions = _c[0],\n      updatedContext = _c[1];\n    var _d = __read(partition(resolvedActions, function (action) {\n        return action.type === raise$1 || action.type === send && action.to === SpecialTargets.Internal;\n      }), 2),\n      raisedEvents = _d[0],\n      nonRaisedActions = _d[1];\n    var invokeActions = resolvedActions.filter(function (action) {\n      var _a;\n      return action.type === start$1 && ((_a = action.activity) === null || _a === void 0 ? void 0 : _a.type) === invoke;\n    });\n    var children = invokeActions.reduce(function (acc, action) {\n      acc[action.activity.id] = createInvocableActor(action.activity, _this.machine, updatedContext, _event);\n      return acc;\n    }, currentState ? __assign({}, currentState.children) : {});\n    var nextState = new State({\n      value: resolvedStateValue || currentState.value,\n      context: updatedContext,\n      _event: _event,\n      // Persist _sessionid between states\n      _sessionid: currentState ? currentState._sessionid : null,\n      historyValue: resolvedStateValue ? historyValue ? updateHistoryValue(historyValue, resolvedStateValue) : undefined : currentState ? currentState.historyValue : undefined,\n      history: !resolvedStateValue || stateTransition.source ? currentState : undefined,\n      actions: resolvedStateValue ? nonRaisedActions : [],\n      activities: resolvedStateValue ? activities : currentState ? currentState.activities : {},\n      events: [],\n      configuration: resolvedConfiguration,\n      transitions: stateTransition.transitions,\n      children: children,\n      done: isDone,\n      tags: getTagsFromConfiguration(resolvedConfiguration),\n      machine: this\n    });\n    var didUpdateContext = context !== updatedContext;\n    nextState.changed = _event.name === update || didUpdateContext; // Dispose of penultimate histories to prevent memory leaks\n\n    var history = nextState.history;\n    if (history) {\n      delete history.history;\n    } // There are transient transitions if the machine is not in a final state\n    // and if some of the state nodes have transient (\"always\") transitions.\n\n    var hasAlwaysTransitions = !isDone && (this._transient || configuration.some(function (stateNode) {\n      return stateNode._transient;\n    })); // If there are no enabled transitions, check if there are transient transitions.\n    // If there are transient transitions, continue checking for more transitions\n    // because an transient transition should be triggered even if there are no\n    // enabled transitions.\n    //\n    // If we're already working on an transient transition then stop to prevent an infinite loop.\n    //\n    // Otherwise, if there are no enabled nor transient transitions, we are done.\n\n    if (!willTransition && (!hasAlwaysTransitions || _event.name === NULL_EVENT)) {\n      return nextState;\n    }\n    var maybeNextState = nextState;\n    if (!isDone) {\n      if (hasAlwaysTransitions) {\n        maybeNextState = this.resolveRaisedTransition(maybeNextState, {\n          type: nullEvent\n        }, _event, predictableExec);\n      }\n      while (raisedEvents.length) {\n        var raisedEvent = raisedEvents.shift();\n        maybeNextState = this.resolveRaisedTransition(maybeNextState, raisedEvent._event, _event, predictableExec);\n      }\n    } // Detect if state changed\n\n    var changed = maybeNextState.changed || (history ? !!maybeNextState.actions.length || didUpdateContext || typeof history.value !== typeof maybeNextState.value || !stateValuesEqual(maybeNextState.value, history.value) : undefined);\n    maybeNextState.changed = changed; // Preserve original history after raised events\n\n    maybeNextState.history = history;\n    return maybeNextState;\n  };\n  /**\r\n   * Returns the child state node from its relative `stateKey`, or throws.\r\n   */\n\n  StateNode.prototype.getStateNode = function (stateKey) {\n    if (isStateId(stateKey)) {\n      return this.machine.getStateNodeById(stateKey);\n    }\n    if (!this.states) {\n      throw new Error(\"Unable to retrieve child state '\".concat(stateKey, \"' from '\").concat(this.id, \"'; no child states exist.\"));\n    }\n    var result = this.states[stateKey];\n    if (!result) {\n      throw new Error(\"Child state '\".concat(stateKey, \"' does not exist on '\").concat(this.id, \"'\"));\n    }\n    return result;\n  };\n  /**\r\n   * Returns the state node with the given `stateId`, or throws.\r\n   *\r\n   * @param stateId The state ID. The prefix \"#\" is removed.\r\n   */\n\n  StateNode.prototype.getStateNodeById = function (stateId) {\n    var resolvedStateId = isStateId(stateId) ? stateId.slice(STATE_IDENTIFIER.length) : stateId;\n    if (resolvedStateId === this.id) {\n      return this;\n    }\n    var stateNode = this.machine.idMap[resolvedStateId];\n    if (!stateNode) {\n      throw new Error(\"Child state node '#\".concat(resolvedStateId, \"' does not exist on machine '\").concat(this.id, \"'\"));\n    }\n    return stateNode;\n  };\n  /**\r\n   * Returns the relative state node from the given `statePath`, or throws.\r\n   *\r\n   * @param statePath The string or string array relative path to the state node.\r\n   */\n\n  StateNode.prototype.getStateNodeByPath = function (statePath) {\n    if (typeof statePath === 'string' && isStateId(statePath)) {\n      try {\n        return this.getStateNodeById(statePath.slice(1));\n      } catch (e) {// try individual paths\n        // throw e;\n      }\n    }\n    var arrayStatePath = toStatePath(statePath, this.delimiter).slice();\n    var currentStateNode = this;\n    while (arrayStatePath.length) {\n      var key = arrayStatePath.shift();\n      if (!key.length) {\n        break;\n      }\n      currentStateNode = currentStateNode.getStateNode(key);\n    }\n    return currentStateNode;\n  };\n  /**\r\n   * Resolves a partial state value with its full representation in this machine.\r\n   *\r\n   * @param stateValue The partial state value to resolve.\r\n   */\n\n  StateNode.prototype.resolve = function (stateValue) {\n    var _a;\n    var _this = this;\n    if (!stateValue) {\n      return this.initialStateValue || EMPTY_OBJECT; // TODO: type-specific properties\n    }\n\n    switch (this.type) {\n      case 'parallel':\n        return mapValues(this.initialStateValue, function (subStateValue, subStateKey) {\n          return subStateValue ? _this.getStateNode(subStateKey).resolve(stateValue[subStateKey] || subStateValue) : EMPTY_OBJECT;\n        });\n      case 'compound':\n        if (isString(stateValue)) {\n          var subStateNode = this.getStateNode(stateValue);\n          if (subStateNode.type === 'parallel' || subStateNode.type === 'compound') {\n            return _a = {}, _a[stateValue] = subStateNode.initialStateValue, _a;\n          }\n          return stateValue;\n        }\n        if (!Object.keys(stateValue).length) {\n          return this.initialStateValue || {};\n        }\n        return mapValues(stateValue, function (subStateValue, subStateKey) {\n          return subStateValue ? _this.getStateNode(subStateKey).resolve(subStateValue) : EMPTY_OBJECT;\n        });\n      default:\n        return stateValue || EMPTY_OBJECT;\n    }\n  };\n  StateNode.prototype.getResolvedPath = function (stateIdentifier) {\n    if (isStateId(stateIdentifier)) {\n      var stateNode = this.machine.idMap[stateIdentifier.slice(STATE_IDENTIFIER.length)];\n      if (!stateNode) {\n        throw new Error(\"Unable to find state node '\".concat(stateIdentifier, \"'\"));\n      }\n      return stateNode.path;\n    }\n    return toStatePath(stateIdentifier, this.delimiter);\n  };\n  Object.defineProperty(StateNode.prototype, \"initialStateValue\", {\n    get: function get() {\n      var _a;\n      if (this.__cache.initialStateValue) {\n        return this.__cache.initialStateValue;\n      }\n      var initialStateValue;\n      if (this.type === 'parallel') {\n        initialStateValue = mapFilterValues(this.states, function (state) {\n          return state.initialStateValue || EMPTY_OBJECT;\n        }, function (stateNode) {\n          return !(stateNode.type === 'history');\n        });\n      } else if (this.initial !== undefined) {\n        if (!this.states[this.initial]) {\n          throw new Error(\"Initial state '\".concat(this.initial, \"' not found on '\").concat(this.key, \"'\"));\n        }\n        initialStateValue = isLeafNode(this.states[this.initial]) ? this.initial : (_a = {}, _a[this.initial] = this.states[this.initial].initialStateValue, _a);\n      } else {\n        // The finite state value of a machine without child states is just an empty object\n        initialStateValue = {};\n      }\n      this.__cache.initialStateValue = initialStateValue;\n      return this.__cache.initialStateValue;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  StateNode.prototype.getInitialState = function (stateValue, context) {\n    this._init(); // TODO: this should be in the constructor (see note in constructor)\n\n    var configuration = this.getStateNodes(stateValue);\n    return this.resolveTransition({\n      configuration: configuration,\n      entrySet: configuration,\n      exitSet: [],\n      transitions: [],\n      source: undefined,\n      actions: []\n    }, undefined, context !== null && context !== void 0 ? context : this.machine.context, undefined);\n  };\n  Object.defineProperty(StateNode.prototype, \"initialState\", {\n    /**\r\n     * The initial State instance, which includes all actions to be executed from\r\n     * entering the initial state.\r\n     */\n    get: function get() {\n      var initialStateValue = this.initialStateValue;\n      if (!initialStateValue) {\n        throw new Error(\"Cannot retrieve initial state from simple state '\".concat(this.id, \"'.\"));\n      }\n      return this.getInitialState(initialStateValue);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(StateNode.prototype, \"target\", {\n    /**\r\n     * The target state value of the history state node, if it exists. This represents the\r\n     * default state value to transition to if no history value exists yet.\r\n     */\n    get: function get() {\n      var target;\n      if (this.type === 'history') {\n        var historyConfig = this.config;\n        if (isString(historyConfig.target)) {\n          target = isStateId(historyConfig.target) ? pathToStateValue(this.machine.getStateNodeById(historyConfig.target).path.slice(this.path.length - 1)) : historyConfig.target;\n        } else {\n          target = historyConfig.target;\n        }\n      }\n      return target;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   * Returns the leaf nodes from a state path relative to this state node.\r\n   *\r\n   * @param relativeStateId The relative state path to retrieve the state nodes\r\n   * @param history The previous state to retrieve history\r\n   * @param resolve Whether state nodes should resolve to initial child state nodes\r\n   */\n\n  StateNode.prototype.getRelativeStateNodes = function (relativeStateId, historyValue, resolve) {\n    if (resolve === void 0) {\n      resolve = true;\n    }\n    return resolve ? relativeStateId.type === 'history' ? relativeStateId.resolveHistory(historyValue) : relativeStateId.initialStateNodes : [relativeStateId];\n  };\n  Object.defineProperty(StateNode.prototype, \"initialStateNodes\", {\n    get: function get() {\n      var _this = this;\n      if (isLeafNode(this)) {\n        return [this];\n      } // Case when state node is compound but no initial state is defined\n\n      if (this.type === 'compound' && !this.initial) {\n        if (!IS_PRODUCTION) {\n          warn(false, \"Compound state node '\".concat(this.id, \"' has no initial state.\"));\n        }\n        return [this];\n      }\n      var initialStateNodePaths = toStatePaths(this.initialStateValue);\n      return flatten(initialStateNodePaths.map(function (initialPath) {\n        return _this.getFromRelativePath(initialPath);\n      }));\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   * Retrieves state nodes from a relative path to this state node.\r\n   *\r\n   * @param relativePath The relative path from this state node\r\n   * @param historyValue\r\n   */\n\n  StateNode.prototype.getFromRelativePath = function (relativePath) {\n    if (!relativePath.length) {\n      return [this];\n    }\n    var _a = __read(relativePath),\n      stateKey = _a[0],\n      childStatePath = _a.slice(1);\n    if (!this.states) {\n      throw new Error(\"Cannot retrieve subPath '\".concat(stateKey, \"' from node with no states\"));\n    }\n    var childStateNode = this.getStateNode(stateKey);\n    if (childStateNode.type === 'history') {\n      return childStateNode.resolveHistory();\n    }\n    if (!this.states[stateKey]) {\n      throw new Error(\"Child state '\".concat(stateKey, \"' does not exist on '\").concat(this.id, \"'\"));\n    }\n    return this.states[stateKey].getFromRelativePath(childStatePath);\n  };\n  StateNode.prototype.historyValue = function (relativeStateValue) {\n    if (!Object.keys(this.states).length) {\n      return undefined;\n    }\n    return {\n      current: relativeStateValue || this.initialStateValue,\n      states: mapFilterValues(this.states, function (stateNode, key) {\n        if (!relativeStateValue) {\n          return stateNode.historyValue();\n        }\n        var subStateValue = isString(relativeStateValue) ? undefined : relativeStateValue[key];\n        return stateNode.historyValue(subStateValue || stateNode.initialStateValue);\n      }, function (stateNode) {\n        return !stateNode.history;\n      })\n    };\n  };\n  /**\r\n   * Resolves to the historical value(s) of the parent state node,\r\n   * represented by state nodes.\r\n   *\r\n   * @param historyValue\r\n   */\n\n  StateNode.prototype.resolveHistory = function (historyValue) {\n    var _this = this;\n    if (this.type !== 'history') {\n      return [this];\n    }\n    var parent = this.parent;\n    if (!historyValue) {\n      var historyTarget = this.target;\n      return historyTarget ? flatten(toStatePaths(historyTarget).map(function (relativeChildPath) {\n        return parent.getFromRelativePath(relativeChildPath);\n      })) : parent.initialStateNodes;\n    }\n    var subHistoryValue = nestedPath(parent.path, 'states')(historyValue).current;\n    if (isString(subHistoryValue)) {\n      return [parent.getStateNode(subHistoryValue)];\n    }\n    return flatten(toStatePaths(subHistoryValue).map(function (subStatePath) {\n      return _this.history === 'deep' ? parent.getFromRelativePath(subStatePath) : [parent.states[subStatePath[0]]];\n    }));\n  };\n  Object.defineProperty(StateNode.prototype, \"stateIds\", {\n    /**\r\n     * All the state node IDs of this state node and its descendant state nodes.\r\n     */\n    get: function get() {\n      var _this = this;\n      var childStateIds = flatten(Object.keys(this.states).map(function (stateKey) {\n        return _this.states[stateKey].stateIds;\n      }));\n      return [this.id].concat(childStateIds);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(StateNode.prototype, \"events\", {\n    /**\r\n     * All the event types accepted by this state node and its descendants.\r\n     */\n    get: function get() {\n      var e_8, _a, e_9, _b;\n      if (this.__cache.events) {\n        return this.__cache.events;\n      }\n      var states = this.states;\n      var events = new Set(this.ownEvents);\n      if (states) {\n        try {\n          for (var _c = __values(Object.keys(states)), _d = _c.next(); !_d.done; _d = _c.next()) {\n            var stateId = _d.value;\n            var state = states[stateId];\n            if (state.states) {\n              try {\n                for (var _e = (e_9 = void 0, __values(state.events)), _f = _e.next(); !_f.done; _f = _e.next()) {\n                  var event_1 = _f.value;\n                  events.add(\"\".concat(event_1));\n                }\n              } catch (e_9_1) {\n                e_9 = {\n                  error: e_9_1\n                };\n              } finally {\n                try {\n                  if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n                } finally {\n                  if (e_9) throw e_9.error;\n                }\n              }\n            }\n          }\n        } catch (e_8_1) {\n          e_8 = {\n            error: e_8_1\n          };\n        } finally {\n          try {\n            if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n          } finally {\n            if (e_8) throw e_8.error;\n          }\n        }\n      }\n      return this.__cache.events = Array.from(events);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(StateNode.prototype, \"ownEvents\", {\n    /**\r\n     * All the events that have transitions directly from this state node.\r\n     *\r\n     * Excludes any inert events.\r\n     */\n    get: function get() {\n      var events = new Set(this.transitions.filter(function (transition) {\n        return !(!transition.target && !transition.actions.length && transition.internal);\n      }).map(function (transition) {\n        return transition.eventType;\n      }));\n      return Array.from(events);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  StateNode.prototype.resolveTarget = function (_target) {\n    var _this = this;\n    if (_target === undefined) {\n      // an undefined target signals that the state node should not transition from that state when receiving that event\n      return undefined;\n    }\n    return _target.map(function (target) {\n      if (!isString(target)) {\n        return target;\n      }\n      var isInternalTarget = target[0] === _this.delimiter; // If internal target is defined on machine,\n      // do not include machine key on target\n\n      if (isInternalTarget && !_this.parent) {\n        return _this.getStateNodeByPath(target.slice(1));\n      }\n      var resolvedTarget = isInternalTarget ? _this.key + target : target;\n      if (_this.parent) {\n        try {\n          var targetStateNode = _this.parent.getStateNodeByPath(resolvedTarget);\n          return targetStateNode;\n        } catch (err) {\n          throw new Error(\"Invalid transition definition for state node '\".concat(_this.id, \"':\\n\").concat(err.message));\n        }\n      } else {\n        return _this.getStateNodeByPath(resolvedTarget);\n      }\n    });\n  };\n  StateNode.prototype.formatTransition = function (transitionConfig) {\n    var _this = this;\n    var normalizedTarget = normalizeTarget(transitionConfig.target);\n    var internal = 'internal' in transitionConfig ? transitionConfig.internal : normalizedTarget ? normalizedTarget.some(function (_target) {\n      return isString(_target) && _target[0] === _this.delimiter;\n    }) : true;\n    var guards = this.machine.options.guards;\n    var target = this.resolveTarget(normalizedTarget);\n    var transition = __assign(__assign({}, transitionConfig), {\n      actions: toActionObjects(toArray(transitionConfig.actions)),\n      cond: toGuard(transitionConfig.cond, guards),\n      target: target,\n      source: this,\n      internal: internal,\n      eventType: transitionConfig.event,\n      toJSON: function toJSON() {\n        return __assign(__assign({}, transition), {\n          target: transition.target ? transition.target.map(function (t) {\n            return \"#\".concat(t.id);\n          }) : undefined,\n          source: \"#\".concat(_this.id)\n        });\n      }\n    });\n    return transition;\n  };\n  StateNode.prototype.formatTransitions = function () {\n    var e_10, _a;\n    var _this = this;\n    var onConfig;\n    if (!this.config.on) {\n      onConfig = [];\n    } else if (Array.isArray(this.config.on)) {\n      onConfig = this.config.on;\n    } else {\n      var _b = this.config.on,\n        _c = WILDCARD,\n        _d = _b[_c],\n        wildcardConfigs = _d === void 0 ? [] : _d,\n        strictTransitionConfigs_1 = __rest(_b, [typeof _c === \"symbol\" ? _c : _c + \"\"]);\n      onConfig = flatten(Object.keys(strictTransitionConfigs_1).map(function (key) {\n        if (!IS_PRODUCTION && key === NULL_EVENT) {\n          warn(false, \"Empty string transition configs (e.g., `{ on: { '': ... }}`) for transient transitions are deprecated. Specify the transition in the `{ always: ... }` property instead. \" + \"Please check the `on` configuration for \\\"#\".concat(_this.id, \"\\\".\"));\n        }\n        var transitionConfigArray = toTransitionConfigArray(key, strictTransitionConfigs_1[key]);\n        if (!IS_PRODUCTION) {\n          validateArrayifiedTransitions(_this, key, transitionConfigArray);\n        }\n        return transitionConfigArray;\n      }).concat(toTransitionConfigArray(WILDCARD, wildcardConfigs)));\n    }\n    var eventlessConfig = this.config.always ? toTransitionConfigArray('', this.config.always) : [];\n    var doneConfig = this.config.onDone ? toTransitionConfigArray(String(done(this.id)), this.config.onDone) : [];\n    if (!IS_PRODUCTION) {\n      warn(!(this.config.onDone && !this.parent), \"Root nodes cannot have an \\\".onDone\\\" transition. Please check the config of \\\"\".concat(this.id, \"\\\".\"));\n    }\n    var invokeConfig = flatten(this.invoke.map(function (invokeDef) {\n      var settleTransitions = [];\n      if (invokeDef.onDone) {\n        settleTransitions.push.apply(settleTransitions, __spreadArray([], __read(toTransitionConfigArray(String(doneInvoke(invokeDef.id)), invokeDef.onDone)), false));\n      }\n      if (invokeDef.onError) {\n        settleTransitions.push.apply(settleTransitions, __spreadArray([], __read(toTransitionConfigArray(String(error(invokeDef.id)), invokeDef.onError)), false));\n      }\n      return settleTransitions;\n    }));\n    var delayedTransitions = this.after;\n    var formattedTransitions = flatten(__spreadArray(__spreadArray(__spreadArray(__spreadArray([], __read(doneConfig), false), __read(invokeConfig), false), __read(onConfig), false), __read(eventlessConfig), false).map(function (transitionConfig) {\n      return toArray(transitionConfig).map(function (transition) {\n        return _this.formatTransition(transition);\n      });\n    }));\n    try {\n      for (var delayedTransitions_1 = __values(delayedTransitions), delayedTransitions_1_1 = delayedTransitions_1.next(); !delayedTransitions_1_1.done; delayedTransitions_1_1 = delayedTransitions_1.next()) {\n        var delayedTransition = delayedTransitions_1_1.value;\n        formattedTransitions.push(delayedTransition);\n      }\n    } catch (e_10_1) {\n      e_10 = {\n        error: e_10_1\n      };\n    } finally {\n      try {\n        if (delayedTransitions_1_1 && !delayedTransitions_1_1.done && (_a = delayedTransitions_1.return)) _a.call(delayedTransitions_1);\n      } finally {\n        if (e_10) throw e_10.error;\n      }\n    }\n    return formattedTransitions;\n  };\n  return StateNode;\n}();\nexport { StateNode };","map":{"version":3,"names":["__assign","__spreadArray","__read","__values","__rest","isFunction","mapValues","isArray","flatten","toArray","toStateValue","isString","getEventType","toSCXMLEvent","matchesState","path","evaluateGuard","mapContext","pathToStateValue","isBuiltInEvent","partition","updateHistoryValue","toStatePath","mapFilterValues","warn","toStatePaths","nestedPath","normalizeTarget","toGuard","toTransitionConfigArray","isMachine","createInvokeId","SpecialTargets","State","stateValuesEqual","raise","raise$1","send","start","start$1","stop","stop$1","invoke","update","nullEvent","done","toActionObjects","resolveActions","doneInvoke","error","toActionObject","toActivityDefinition","after","send$1","cancel","initEvent","IS_PRODUCTION","STATE_DELIMITER","getAllStateNodes","getConfiguration","isInFinalState","getTagsFromConfiguration","has","getChildren","getValue","isLeafNode","getAllChildren","createInvocableActor","toInvokeDefinition","NULL_EVENT","STATE_IDENTIFIER","WILDCARD","EMPTY_OBJECT","isStateId","str","createDefaultOptions","actions","guards","services","activities","delays","validateArrayifiedTransitions","stateNode","event","transitions","hasNonLastUnguardedTarget","slice","some","transition","target","eventText","concat","id","StateNode","config","options","_context","_stateInfo","context","undefined","_this","_a","order","__xstatenode","__cache","events","relativeValue","Map","initialStateValue","initialState","on","candidates","delayedTransitions","idMap","tags","Object","assign","parent","key","machine","delimiter","join","version","type","parallel","states","keys","length","history","schema","description","initial","stateConfig","dfs","e_1","_b","_c","next","child","value","e_1_1","return","call","_transient","always","Array","strict","onEntry","entry","map","action","onExit","exit","meta","doneData","data","invokeConfig","i","invokeId","src","invokeSource","activity","bind","prototype","_init","forEach","withConfig","withContext","defineProperty","get","enumerable","configurable","state","definition","toJSON","reduce","eventType","push","getDelayedTransitions","formatTransitions","getCandidates","eventName","transient","filter","sameEventType","afterConfig","mutateEntryExit","delay","delayRef","configTransition","resolvedTransition","resolvedDelay","isNaN","delayedTransition","formatTransition","getStateNodes","stateValue","getStateNode","subStateKeys","subStateNodes","apply","subStateKey","handles","includes","resolveState","stateFromConfig","create","configuration","from","resolve","transitionLeafNode","_event","transitionCompoundNode","_transition","transitionParallelNode","e_2","transitionMap","subStateValue","subStateNode","e_2_1","stateTransitions","enabledTransitions","st","willTransition","entryNodes","t","entrySet","exitSet","source","getTransitionData","e_3","name","nextStateNodes","selectedTransition","candidate","cond","stateIn","in","resolvedContext","isInState","matches","getStateNodeById","guardPassed","err","Error","message","e_3_1","allNextStateNodes","getRelativeStateNodes","historyValue","isInternal","internal","reentryNodes","targetNode","getExternalReentryNodes","nodes","marker","possibleAncestor","getActions","resolvedConfig","isDone","currentContext","prevState","predictableExec","e_4","e_5","prevConfig","resolvedConfig_1","resolvedConfig_1_1","sn","e_4_1","prevConfig_1","prevConfig_1_1","e_5_1","doneEvents","grandparent","every","parentNode","sort","a","b","entryStates","Set","exitStates","entryActions","invokeActions","exitActions","stopActions","to","Internal","exec","currentState","resolvedStateValue","getResolvedPath","stateTransition","resolveTransition","resolveRaisedTransition","originalEvent","currentActions","unshift","e_6","e_7","resolvedConfiguration","actionBlocks","actionBlocks_1","actionBlocks_1_1","block","block_1","block_1_1","e_7_1","e_6_1","predictableActionArguments","preserveActionOrder","resolvedActions","updatedContext","_d","raisedEvents","nonRaisedActions","children","acc","nextState","_sessionid","didUpdateContext","changed","hasAlwaysTransitions","maybeNextState","raisedEvent","shift","stateKey","result","stateId","resolvedStateId","getStateNodeByPath","statePath","e","arrayStatePath","currentStateNode","stateIdentifier","getInitialState","historyConfig","relativeStateId","resolveHistory","initialStateNodes","initialStateNodePaths","initialPath","getFromRelativePath","relativePath","childStatePath","childStateNode","relativeStateValue","current","historyTarget","relativeChildPath","subHistoryValue","subStatePath","childStateIds","stateIds","e_8","e_9","ownEvents","_e","_f","event_1","add","e_9_1","e_8_1","resolveTarget","_target","isInternalTarget","resolvedTarget","targetStateNode","transitionConfig","normalizedTarget","e_10","onConfig","wildcardConfigs","strictTransitionConfigs_1","transitionConfigArray","eventlessConfig","doneConfig","onDone","String","invokeDef","settleTransitions","onError","formattedTransitions","delayedTransitions_1","delayedTransitions_1_1","e_10_1"],"sources":["/Users/carterbrewer/Downloads/trucker_app-main/node_modules/xstate/es/StateNode.js"],"sourcesContent":["import { __assign, __spreadArray, __read, __values, __rest } from './_virtual/_tslib.js';\nimport { isFunction, mapValues, isArray, flatten, toArray, toStateValue, isString, getEventType, toSCXMLEvent, matchesState, path, evaluateGuard, mapContext, pathToStateValue, isBuiltInEvent, partition, updateHistoryValue, toStatePath, mapFilterValues, warn, toStatePaths, nestedPath, normalizeTarget, toGuard, toTransitionConfigArray, isMachine, createInvokeId } from './utils.js';\nimport { SpecialTargets } from './types.js';\nimport { State, stateValuesEqual } from './State.js';\nimport { raise as raise$1, send, start as start$1, stop as stop$1, invoke, update, nullEvent } from './actionTypes.js';\nimport { done, start, toActionObjects, raise, stop, resolveActions, doneInvoke, error, toActionObject, toActivityDefinition, after, send as send$1, cancel, initEvent } from './actions.js';\nimport { IS_PRODUCTION } from './environment.js';\nimport { STATE_DELIMITER } from './constants.js';\nimport { getAllStateNodes, getConfiguration, isInFinalState, getTagsFromConfiguration, has, getChildren, getValue, isLeafNode, getAllChildren } from './stateUtils.js';\nimport { createInvocableActor } from './Actor.js';\nimport { toInvokeDefinition } from './invokeUtils.js';\n\nvar NULL_EVENT = '';\nvar STATE_IDENTIFIER = '#';\nvar WILDCARD = '*';\nvar EMPTY_OBJECT = {};\n\nvar isStateId = function (str) {\n  return str[0] === STATE_IDENTIFIER;\n};\n\nvar createDefaultOptions = function () {\n  return {\n    actions: {},\n    guards: {},\n    services: {},\n    activities: {},\n    delays: {}\n  };\n};\n\nvar validateArrayifiedTransitions = function (stateNode, event, transitions) {\n  var hasNonLastUnguardedTarget = transitions.slice(0, -1).some(function (transition) {\n    return !('cond' in transition) && !('in' in transition) && (isString(transition.target) || isMachine(transition.target));\n  });\n  var eventText = event === NULL_EVENT ? 'the transient event' : \"event '\".concat(event, \"'\");\n  warn(!hasNonLastUnguardedTarget, \"One or more transitions for \".concat(eventText, \" on state '\").concat(stateNode.id, \"' are unreachable. \") + \"Make sure that the default transition is the last one defined.\");\n};\n\nvar StateNode =\n/*#__PURE__*/\n\n/** @class */\nfunction () {\n  function StateNode(\n  /**\r\n   * The raw config used to create the machine.\r\n   */\n  config, options,\n  /**\r\n   * The initial extended state\r\n   */\n  _context, // TODO: this is unsafe, but we're removing it in v5 anyway\n  _stateInfo) {\n    if (_context === void 0) {\n      _context = 'context' in config ? config.context : undefined;\n    }\n\n    var _this = this;\n\n    var _a;\n\n    this.config = config;\n    this._context = _context;\n    /**\r\n     * The order this state node appears. Corresponds to the implicit SCXML document order.\r\n     */\n\n    this.order = -1;\n    this.__xstatenode = true;\n    this.__cache = {\n      events: undefined,\n      relativeValue: new Map(),\n      initialStateValue: undefined,\n      initialState: undefined,\n      on: undefined,\n      transitions: undefined,\n      candidates: {},\n      delayedTransitions: undefined\n    };\n    this.idMap = {};\n    this.tags = [];\n    this.options = Object.assign(createDefaultOptions(), options);\n    this.parent = _stateInfo === null || _stateInfo === void 0 ? void 0 : _stateInfo.parent;\n    this.key = this.config.key || (_stateInfo === null || _stateInfo === void 0 ? void 0 : _stateInfo.key) || this.config.id || '(machine)';\n    this.machine = this.parent ? this.parent.machine : this;\n    this.path = this.parent ? this.parent.path.concat(this.key) : [];\n    this.delimiter = this.config.delimiter || (this.parent ? this.parent.delimiter : STATE_DELIMITER);\n    this.id = this.config.id || __spreadArray([this.machine.key], __read(this.path), false).join(this.delimiter);\n    this.version = this.parent ? this.parent.version : this.config.version;\n    this.type = this.config.type || (this.config.parallel ? 'parallel' : this.config.states && Object.keys(this.config.states).length ? 'compound' : this.config.history ? 'history' : 'atomic');\n    this.schema = this.parent ? this.machine.schema : (_a = this.config.schema) !== null && _a !== void 0 ? _a : {};\n    this.description = this.config.description;\n\n    if (!IS_PRODUCTION) {\n      warn(!('parallel' in this.config), \"The \\\"parallel\\\" property is deprecated and will be removed in version 4.1. \".concat(this.config.parallel ? \"Replace with `type: 'parallel'`\" : \"Use `type: '\".concat(this.type, \"'`\"), \" in the config for state node '\").concat(this.id, \"' instead.\"));\n    }\n\n    this.initial = this.config.initial;\n    this.states = this.config.states ? mapValues(this.config.states, function (stateConfig, key) {\n      var _a;\n\n      var stateNode = new StateNode(stateConfig, {}, undefined, {\n        parent: _this,\n        key: key\n      });\n      Object.assign(_this.idMap, __assign((_a = {}, _a[stateNode.id] = stateNode, _a), stateNode.idMap));\n      return stateNode;\n    }) : EMPTY_OBJECT; // Document order\n\n    var order = 0;\n\n    function dfs(stateNode) {\n      var e_1, _a;\n\n      stateNode.order = order++;\n\n      try {\n        for (var _b = __values(getAllChildren(stateNode)), _c = _b.next(); !_c.done; _c = _b.next()) {\n          var child = _c.value;\n          dfs(child);\n        }\n      } catch (e_1_1) {\n        e_1 = {\n          error: e_1_1\n        };\n      } finally {\n        try {\n          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n    }\n\n    dfs(this); // History config\n\n    this.history = this.config.history === true ? 'shallow' : this.config.history || false;\n    this._transient = !!this.config.always || (!this.config.on ? false : Array.isArray(this.config.on) ? this.config.on.some(function (_a) {\n      var event = _a.event;\n      return event === NULL_EVENT;\n    }) : NULL_EVENT in this.config.on);\n    this.strict = !!this.config.strict; // TODO: deprecate (entry)\n\n    this.onEntry = toArray(this.config.entry || this.config.onEntry).map(function (action) {\n      return toActionObject(action);\n    }); // TODO: deprecate (exit)\n\n    this.onExit = toArray(this.config.exit || this.config.onExit).map(function (action) {\n      return toActionObject(action);\n    });\n    this.meta = this.config.meta;\n    this.doneData = this.type === 'final' ? this.config.data : undefined;\n    this.invoke = toArray(this.config.invoke).map(function (invokeConfig, i) {\n      var _a, _b;\n\n      if (isMachine(invokeConfig)) {\n        var invokeId = createInvokeId(_this.id, i);\n        _this.machine.options.services = __assign((_a = {}, _a[invokeId] = invokeConfig, _a), _this.machine.options.services);\n        return toInvokeDefinition({\n          src: invokeId,\n          id: invokeId\n        });\n      } else if (isString(invokeConfig.src)) {\n        var invokeId = invokeConfig.id || createInvokeId(_this.id, i);\n        return toInvokeDefinition(__assign(__assign({}, invokeConfig), {\n          id: invokeId,\n          src: invokeConfig.src\n        }));\n      } else if (isMachine(invokeConfig.src) || isFunction(invokeConfig.src)) {\n        var invokeId = invokeConfig.id || createInvokeId(_this.id, i);\n        _this.machine.options.services = __assign((_b = {}, _b[invokeId] = invokeConfig.src, _b), _this.machine.options.services);\n        return toInvokeDefinition(__assign(__assign({\n          id: invokeId\n        }, invokeConfig), {\n          src: invokeId\n        }));\n      } else {\n        var invokeSource = invokeConfig.src;\n        return toInvokeDefinition(__assign(__assign({\n          id: createInvokeId(_this.id, i)\n        }, invokeConfig), {\n          src: invokeSource\n        }));\n      }\n    });\n    this.activities = toArray(this.config.activities).concat(this.invoke).map(function (activity) {\n      return toActivityDefinition(activity);\n    });\n    this.transition = this.transition.bind(this);\n    this.tags = toArray(this.config.tags); // TODO: this is the real fix for initialization once\n    // state node getters are deprecated\n    // if (!this.parent) {\n    //   this._init();\n    // }\n  }\n\n  StateNode.prototype._init = function () {\n    if (this.__cache.transitions) {\n      return;\n    }\n\n    getAllStateNodes(this).forEach(function (stateNode) {\n      return stateNode.on;\n    });\n  };\n  /**\r\n   * Clones this state machine with custom options and context.\r\n   *\r\n   * @param options Options (actions, guards, activities, services) to recursively merge with the existing options.\r\n   * @param context Custom context (will override predefined context)\r\n   */\n\n\n  StateNode.prototype.withConfig = function (options, context) {\n    var _a = this.options,\n        actions = _a.actions,\n        activities = _a.activities,\n        guards = _a.guards,\n        services = _a.services,\n        delays = _a.delays;\n    return new StateNode(this.config, {\n      actions: __assign(__assign({}, actions), options.actions),\n      activities: __assign(__assign({}, activities), options.activities),\n      guards: __assign(__assign({}, guards), options.guards),\n      services: __assign(__assign({}, services), options.services),\n      delays: __assign(__assign({}, delays), options.delays)\n    }, context !== null && context !== void 0 ? context : this.context);\n  };\n  /**\r\n   * Clones this state machine with custom context.\r\n   *\r\n   * @param context Custom context (will override predefined context, not recursive)\r\n   */\n\n\n  StateNode.prototype.withContext = function (context) {\n    return new StateNode(this.config, this.options, context);\n  };\n\n  Object.defineProperty(StateNode.prototype, \"context\", {\n    get: function () {\n      return isFunction(this._context) ? this._context() : this._context;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(StateNode.prototype, \"definition\", {\n    /**\r\n     * The well-structured state node definition.\r\n     */\n    get: function () {\n      return {\n        id: this.id,\n        key: this.key,\n        version: this.version,\n        context: this.context,\n        type: this.type,\n        initial: this.initial,\n        history: this.history,\n        states: mapValues(this.states, function (state) {\n          return state.definition;\n        }),\n        on: this.on,\n        transitions: this.transitions,\n        entry: this.onEntry,\n        exit: this.onExit,\n        activities: this.activities || [],\n        meta: this.meta,\n        order: this.order || -1,\n        data: this.doneData,\n        invoke: this.invoke,\n        description: this.description,\n        tags: this.tags\n      };\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  StateNode.prototype.toJSON = function () {\n    return this.definition;\n  };\n\n  Object.defineProperty(StateNode.prototype, \"on\", {\n    /**\r\n     * The mapping of events to transitions.\r\n     */\n    get: function () {\n      if (this.__cache.on) {\n        return this.__cache.on;\n      }\n\n      var transitions = this.transitions;\n      return this.__cache.on = transitions.reduce(function (map, transition) {\n        map[transition.eventType] = map[transition.eventType] || [];\n        map[transition.eventType].push(transition);\n        return map;\n      }, {});\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(StateNode.prototype, \"after\", {\n    get: function () {\n      return this.__cache.delayedTransitions || (this.__cache.delayedTransitions = this.getDelayedTransitions(), this.__cache.delayedTransitions);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(StateNode.prototype, \"transitions\", {\n    /**\r\n     * All the transitions that can be taken from this state node.\r\n     */\n    get: function () {\n      return this.__cache.transitions || (this.__cache.transitions = this.formatTransitions(), this.__cache.transitions);\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  StateNode.prototype.getCandidates = function (eventName) {\n    if (this.__cache.candidates[eventName]) {\n      return this.__cache.candidates[eventName];\n    }\n\n    var transient = eventName === NULL_EVENT;\n    var candidates = this.transitions.filter(function (transition) {\n      var sameEventType = transition.eventType === eventName; // null events should only match against eventless transitions\n\n      return transient ? sameEventType : sameEventType || transition.eventType === WILDCARD;\n    });\n    this.__cache.candidates[eventName] = candidates;\n    return candidates;\n  };\n  /**\r\n   * All delayed transitions from the config.\r\n   */\n\n\n  StateNode.prototype.getDelayedTransitions = function () {\n    var _this = this;\n\n    var afterConfig = this.config.after;\n\n    if (!afterConfig) {\n      return [];\n    }\n\n    var mutateEntryExit = function (delay, i) {\n      var delayRef = isFunction(delay) ? \"\".concat(_this.id, \":delay[\").concat(i, \"]\") : delay;\n      var eventType = after(delayRef, _this.id);\n\n      _this.onEntry.push(send$1(eventType, {\n        delay: delay\n      }));\n\n      _this.onExit.push(cancel(eventType));\n\n      return eventType;\n    };\n\n    var delayedTransitions = isArray(afterConfig) ? afterConfig.map(function (transition, i) {\n      var eventType = mutateEntryExit(transition.delay, i);\n      return __assign(__assign({}, transition), {\n        event: eventType\n      });\n    }) : flatten(Object.keys(afterConfig).map(function (delay, i) {\n      var configTransition = afterConfig[delay];\n      var resolvedTransition = isString(configTransition) ? {\n        target: configTransition\n      } : configTransition;\n      var resolvedDelay = !isNaN(+delay) ? +delay : delay;\n      var eventType = mutateEntryExit(resolvedDelay, i);\n      return toArray(resolvedTransition).map(function (transition) {\n        return __assign(__assign({}, transition), {\n          event: eventType,\n          delay: resolvedDelay\n        });\n      });\n    }));\n    return delayedTransitions.map(function (delayedTransition) {\n      var delay = delayedTransition.delay;\n      return __assign(__assign({}, _this.formatTransition(delayedTransition)), {\n        delay: delay\n      });\n    });\n  };\n  /**\r\n   * Returns the state nodes represented by the current state value.\r\n   *\r\n   * @param state The state value or State instance\r\n   */\n\n\n  StateNode.prototype.getStateNodes = function (state) {\n    var _a;\n\n    var _this = this;\n\n    if (!state) {\n      return [];\n    }\n\n    var stateValue = state instanceof State ? state.value : toStateValue(state, this.delimiter);\n\n    if (isString(stateValue)) {\n      var initialStateValue = this.getStateNode(stateValue).initial;\n      return initialStateValue !== undefined ? this.getStateNodes((_a = {}, _a[stateValue] = initialStateValue, _a)) : [this, this.states[stateValue]];\n    }\n\n    var subStateKeys = Object.keys(stateValue);\n    var subStateNodes = [this];\n    subStateNodes.push.apply(subStateNodes, __spreadArray([], __read(flatten(subStateKeys.map(function (subStateKey) {\n      return _this.getStateNode(subStateKey).getStateNodes(stateValue[subStateKey]);\n    }))), false));\n    return subStateNodes;\n  };\n  /**\r\n   * Returns `true` if this state node explicitly handles the given event.\r\n   *\r\n   * @param event The event in question\r\n   */\n\n\n  StateNode.prototype.handles = function (event) {\n    var eventType = getEventType(event);\n    return this.events.includes(eventType);\n  };\n  /**\r\n   * Resolves the given `state` to a new `State` instance relative to this machine.\r\n   *\r\n   * This ensures that `.events` and `.nextEvents` represent the correct values.\r\n   *\r\n   * @param state The state to resolve\r\n   */\n\n\n  StateNode.prototype.resolveState = function (state) {\n    var stateFromConfig = state instanceof State ? state : State.create(state);\n    var configuration = Array.from(getConfiguration([], this.getStateNodes(stateFromConfig.value)));\n    return new State(__assign(__assign({}, stateFromConfig), {\n      value: this.resolve(stateFromConfig.value),\n      configuration: configuration,\n      done: isInFinalState(configuration, this),\n      tags: getTagsFromConfiguration(configuration),\n      machine: this.machine\n    }));\n  };\n\n  StateNode.prototype.transitionLeafNode = function (stateValue, state, _event) {\n    var stateNode = this.getStateNode(stateValue);\n    var next = stateNode.next(state, _event);\n\n    if (!next || !next.transitions.length) {\n      return this.next(state, _event);\n    }\n\n    return next;\n  };\n\n  StateNode.prototype.transitionCompoundNode = function (stateValue, state, _event) {\n    var subStateKeys = Object.keys(stateValue);\n    var stateNode = this.getStateNode(subStateKeys[0]);\n\n    var next = stateNode._transition(stateValue[subStateKeys[0]], state, _event);\n\n    if (!next || !next.transitions.length) {\n      return this.next(state, _event);\n    }\n\n    return next;\n  };\n\n  StateNode.prototype.transitionParallelNode = function (stateValue, state, _event) {\n    var e_2, _a;\n\n    var transitionMap = {};\n\n    try {\n      for (var _b = __values(Object.keys(stateValue)), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var subStateKey = _c.value;\n        var subStateValue = stateValue[subStateKey];\n\n        if (!subStateValue) {\n          continue;\n        }\n\n        var subStateNode = this.getStateNode(subStateKey);\n\n        var next = subStateNode._transition(subStateValue, state, _event);\n\n        if (next) {\n          transitionMap[subStateKey] = next;\n        }\n      }\n    } catch (e_2_1) {\n      e_2 = {\n        error: e_2_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_2) throw e_2.error;\n      }\n    }\n\n    var stateTransitions = Object.keys(transitionMap).map(function (key) {\n      return transitionMap[key];\n    });\n    var enabledTransitions = flatten(stateTransitions.map(function (st) {\n      return st.transitions;\n    }));\n    var willTransition = stateTransitions.some(function (st) {\n      return st.transitions.length > 0;\n    });\n\n    if (!willTransition) {\n      return this.next(state, _event);\n    }\n\n    var entryNodes = flatten(stateTransitions.map(function (t) {\n      return t.entrySet;\n    }));\n    var configuration = flatten(Object.keys(transitionMap).map(function (key) {\n      return transitionMap[key].configuration;\n    }));\n    return {\n      transitions: enabledTransitions,\n      entrySet: entryNodes,\n      exitSet: flatten(stateTransitions.map(function (t) {\n        return t.exitSet;\n      })),\n      configuration: configuration,\n      source: state,\n      actions: flatten(Object.keys(transitionMap).map(function (key) {\n        return transitionMap[key].actions;\n      }))\n    };\n  };\n\n  StateNode.prototype._transition = function (stateValue, state, _event) {\n    // leaf node\n    if (isString(stateValue)) {\n      return this.transitionLeafNode(stateValue, state, _event);\n    } // hierarchical node\n\n\n    if (Object.keys(stateValue).length === 1) {\n      return this.transitionCompoundNode(stateValue, state, _event);\n    } // orthogonal node\n\n\n    return this.transitionParallelNode(stateValue, state, _event);\n  };\n\n  StateNode.prototype.getTransitionData = function (state, event) {\n    return this._transition(state.value, state, toSCXMLEvent(event));\n  };\n\n  StateNode.prototype.next = function (state, _event) {\n    var e_3, _a;\n\n    var _this = this;\n\n    var eventName = _event.name;\n    var actions = [];\n    var nextStateNodes = [];\n    var selectedTransition;\n\n    try {\n      for (var _b = __values(this.getCandidates(eventName)), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var candidate = _c.value;\n        var cond = candidate.cond,\n            stateIn = candidate.in;\n        var resolvedContext = state.context;\n        var isInState = stateIn ? isString(stateIn) && isStateId(stateIn) ? // Check if in state by ID\n        state.matches(toStateValue(this.getStateNodeById(stateIn).path, this.delimiter)) : // Check if in state by relative grandparent\n        matchesState(toStateValue(stateIn, this.delimiter), path(this.path.slice(0, -2))(state.value)) : true;\n        var guardPassed = false;\n\n        try {\n          guardPassed = !cond || evaluateGuard(this.machine, cond, resolvedContext, _event, state);\n        } catch (err) {\n          throw new Error(\"Unable to evaluate guard '\".concat(cond.name || cond.type, \"' in transition for event '\").concat(eventName, \"' in state node '\").concat(this.id, \"':\\n\").concat(err.message));\n        }\n\n        if (guardPassed && isInState) {\n          if (candidate.target !== undefined) {\n            nextStateNodes = candidate.target;\n          }\n\n          actions.push.apply(actions, __spreadArray([], __read(candidate.actions), false));\n          selectedTransition = candidate;\n          break;\n        }\n      }\n    } catch (e_3_1) {\n      e_3 = {\n        error: e_3_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_3) throw e_3.error;\n      }\n    }\n\n    if (!selectedTransition) {\n      return undefined;\n    }\n\n    if (!nextStateNodes.length) {\n      return {\n        transitions: [selectedTransition],\n        entrySet: [],\n        exitSet: [],\n        configuration: state.value ? [this] : [],\n        source: state,\n        actions: actions\n      };\n    }\n\n    var allNextStateNodes = flatten(nextStateNodes.map(function (stateNode) {\n      return _this.getRelativeStateNodes(stateNode, state.historyValue);\n    }));\n    var isInternal = !!selectedTransition.internal;\n    var reentryNodes = [];\n\n    if (!isInternal) {\n      nextStateNodes.forEach(function (targetNode) {\n        reentryNodes.push.apply(reentryNodes, __spreadArray([], __read(_this.getExternalReentryNodes(targetNode)), false));\n      });\n    }\n\n    return {\n      transitions: [selectedTransition],\n      entrySet: reentryNodes,\n      exitSet: isInternal ? [] : [this],\n      configuration: allNextStateNodes,\n      source: state,\n      actions: actions\n    };\n  };\n\n  StateNode.prototype.getExternalReentryNodes = function (targetNode) {\n    var nodes = [];\n\n    var _a = __read(targetNode.order > this.order ? [targetNode, this] : [this, targetNode], 2),\n        marker = _a[0],\n        possibleAncestor = _a[1];\n\n    while (marker && marker !== possibleAncestor) {\n      nodes.push(marker);\n      marker = marker.parent;\n    }\n\n    if (marker !== possibleAncestor) {\n      // we never got to `possibleAncestor`, therefore the initial `marker` \"escapes\" it\n      // it's in a different part of the tree so no states will be reentered for such an external transition\n      return [];\n    }\n\n    nodes.push(possibleAncestor);\n    return nodes;\n  };\n\n  StateNode.prototype.getActions = function (resolvedConfig, isDone, transition, currentContext, _event, prevState, predictableExec) {\n    var e_4, _a, e_5, _b;\n\n    var _this = this;\n\n    var prevConfig = getConfiguration([], prevState ? this.getStateNodes(prevState.value) : [this]);\n\n    try {\n      for (var resolvedConfig_1 = __values(resolvedConfig), resolvedConfig_1_1 = resolvedConfig_1.next(); !resolvedConfig_1_1.done; resolvedConfig_1_1 = resolvedConfig_1.next()) {\n        var sn = resolvedConfig_1_1.value;\n\n        if (!has(prevConfig, sn) || has(transition.entrySet, sn.parent) && !has(transition.entrySet, sn)) {\n          transition.entrySet.push(sn);\n        }\n      }\n    } catch (e_4_1) {\n      e_4 = {\n        error: e_4_1\n      };\n    } finally {\n      try {\n        if (resolvedConfig_1_1 && !resolvedConfig_1_1.done && (_a = resolvedConfig_1.return)) _a.call(resolvedConfig_1);\n      } finally {\n        if (e_4) throw e_4.error;\n      }\n    }\n\n    try {\n      for (var prevConfig_1 = __values(prevConfig), prevConfig_1_1 = prevConfig_1.next(); !prevConfig_1_1.done; prevConfig_1_1 = prevConfig_1.next()) {\n        var sn = prevConfig_1_1.value;\n\n        if (!has(resolvedConfig, sn) || has(transition.exitSet, sn.parent)) {\n          transition.exitSet.push(sn);\n        }\n      }\n    } catch (e_5_1) {\n      e_5 = {\n        error: e_5_1\n      };\n    } finally {\n      try {\n        if (prevConfig_1_1 && !prevConfig_1_1.done && (_b = prevConfig_1.return)) _b.call(prevConfig_1);\n      } finally {\n        if (e_5) throw e_5.error;\n      }\n    }\n\n    var doneEvents = flatten(transition.entrySet.map(function (sn) {\n      var events = [];\n\n      if (sn.type !== 'final') {\n        return events;\n      }\n\n      var parent = sn.parent;\n\n      if (!parent.parent) {\n        return events;\n      }\n\n      events.push(done(sn.id, sn.doneData), // TODO: deprecate - final states should not emit done events for their own state.\n      done(parent.id, sn.doneData ? mapContext(sn.doneData, currentContext, _event) : undefined));\n      var grandparent = parent.parent;\n\n      if (grandparent.type === 'parallel') {\n        if (getChildren(grandparent).every(function (parentNode) {\n          return isInFinalState(transition.configuration, parentNode);\n        })) {\n          events.push(done(grandparent.id));\n        }\n      }\n\n      return events;\n    }));\n    transition.exitSet.sort(function (a, b) {\n      return b.order - a.order;\n    });\n    transition.entrySet.sort(function (a, b) {\n      return a.order - b.order;\n    });\n    var entryStates = new Set(transition.entrySet);\n    var exitStates = new Set(transition.exitSet);\n    var entryActions = Array.from(entryStates).map(function (stateNode) {\n      var entryActions = stateNode.onEntry;\n      var invokeActions = stateNode.activities.map(function (activity) {\n        return start(activity);\n      });\n      return toActionObjects(predictableExec ? __spreadArray(__spreadArray([], __read(entryActions), false), __read(invokeActions), false) : __spreadArray(__spreadArray([], __read(invokeActions), false), __read(entryActions), false), _this.machine.options.actions);\n    }).concat([doneEvents.map(raise)]);\n    var exitActions = Array.from(exitStates).map(function (stateNode) {\n      return toActionObjects(__spreadArray(__spreadArray([], __read(stateNode.onExit), false), __read(stateNode.activities.map(function (activity) {\n        return stop(activity);\n      })), false), _this.machine.options.actions);\n    });\n    var actions = exitActions.concat([toActionObjects(transition.actions, this.machine.options.actions)]).concat(entryActions);\n\n    if (isDone) {\n      var stopActions = toActionObjects(flatten(__spreadArray([], __read(resolvedConfig), false).sort(function (a, b) {\n        return b.order - a.order;\n      }).map(function (stateNode) {\n        return stateNode.onExit;\n      })), this.machine.options.actions).filter(function (action) {\n        return action.type !== raise$1 && (action.type !== send || !!action.to && action.to !== SpecialTargets.Internal);\n      });\n      return actions.concat([stopActions]);\n    }\n\n    return actions;\n  };\n  /**\r\n   * Determines the next state given the current `state` and sent `event`.\r\n   *\r\n   * @param state The current State instance or state value\r\n   * @param event The event that was sent at the current state\r\n   * @param context The current context (extended state) of the current state\r\n   */\n\n\n  StateNode.prototype.transition = function (state, event, context, exec) {\n    if (state === void 0) {\n      state = this.initialState;\n    }\n\n    var _event = toSCXMLEvent(event);\n\n    var currentState;\n\n    if (state instanceof State) {\n      currentState = context === undefined ? state : this.resolveState(State.from(state, context));\n    } else {\n      var resolvedStateValue = isString(state) ? this.resolve(pathToStateValue(this.getResolvedPath(state))) : this.resolve(state);\n      var resolvedContext = context !== null && context !== void 0 ? context : this.machine.context;\n      currentState = this.resolveState(State.from(resolvedStateValue, resolvedContext));\n    }\n\n    if (!IS_PRODUCTION && _event.name === WILDCARD) {\n      throw new Error(\"An event cannot have the wildcard type ('\".concat(WILDCARD, \"')\"));\n    }\n\n    if (this.strict) {\n      if (!this.events.includes(_event.name) && !isBuiltInEvent(_event.name)) {\n        throw new Error(\"Machine '\".concat(this.id, \"' does not accept event '\").concat(_event.name, \"'\"));\n      }\n    }\n\n    var stateTransition = this._transition(currentState.value, currentState, _event) || {\n      transitions: [],\n      configuration: [],\n      entrySet: [],\n      exitSet: [],\n      source: currentState,\n      actions: []\n    };\n    var prevConfig = getConfiguration([], this.getStateNodes(currentState.value));\n    var resolvedConfig = stateTransition.configuration.length ? getConfiguration(prevConfig, stateTransition.configuration) : prevConfig;\n    stateTransition.configuration = __spreadArray([], __read(resolvedConfig), false);\n    return this.resolveTransition(stateTransition, currentState, currentState.context, exec, _event);\n  };\n\n  StateNode.prototype.resolveRaisedTransition = function (state, _event, originalEvent, predictableExec) {\n    var _a;\n\n    var currentActions = state.actions;\n    state = this.transition(state, _event, undefined, predictableExec); // Save original event to state\n    // TODO: this should be the raised event! Delete in V5 (breaking)\n\n    state._event = originalEvent;\n    state.event = originalEvent.data;\n\n    (_a = state.actions).unshift.apply(_a, __spreadArray([], __read(currentActions), false));\n\n    return state;\n  };\n\n  StateNode.prototype.resolveTransition = function (stateTransition, currentState, context, predictableExec, _event) {\n    var e_6, _a, e_7, _b;\n\n    var _this = this;\n\n    if (_event === void 0) {\n      _event = initEvent;\n    }\n\n    var configuration = stateTransition.configuration; // Transition will \"apply\" if:\n    // - this is the initial state (there is no current state)\n    // - OR there are transitions\n\n    var willTransition = !currentState || stateTransition.transitions.length > 0;\n    var resolvedConfiguration = willTransition ? stateTransition.configuration : currentState ? currentState.configuration : [];\n    var isDone = isInFinalState(resolvedConfiguration, this);\n    var resolvedStateValue = willTransition ? getValue(this.machine, configuration) : undefined;\n    var historyValue = currentState ? currentState.historyValue ? currentState.historyValue : stateTransition.source ? this.machine.historyValue(currentState.value) : undefined : undefined;\n    var actionBlocks = this.getActions(new Set(resolvedConfiguration), isDone, stateTransition, context, _event, currentState, predictableExec);\n    var activities = currentState ? __assign({}, currentState.activities) : {};\n\n    try {\n      for (var actionBlocks_1 = __values(actionBlocks), actionBlocks_1_1 = actionBlocks_1.next(); !actionBlocks_1_1.done; actionBlocks_1_1 = actionBlocks_1.next()) {\n        var block = actionBlocks_1_1.value;\n\n        try {\n          for (var block_1 = (e_7 = void 0, __values(block)), block_1_1 = block_1.next(); !block_1_1.done; block_1_1 = block_1.next()) {\n            var action = block_1_1.value;\n\n            if (action.type === start$1) {\n              activities[action.activity.id || action.activity.type] = action;\n            } else if (action.type === stop$1) {\n              activities[action.activity.id || action.activity.type] = false;\n            }\n          }\n        } catch (e_7_1) {\n          e_7 = {\n            error: e_7_1\n          };\n        } finally {\n          try {\n            if (block_1_1 && !block_1_1.done && (_b = block_1.return)) _b.call(block_1);\n          } finally {\n            if (e_7) throw e_7.error;\n          }\n        }\n      }\n    } catch (e_6_1) {\n      e_6 = {\n        error: e_6_1\n      };\n    } finally {\n      try {\n        if (actionBlocks_1_1 && !actionBlocks_1_1.done && (_a = actionBlocks_1.return)) _a.call(actionBlocks_1);\n      } finally {\n        if (e_6) throw e_6.error;\n      }\n    }\n\n    var _c = __read(resolveActions(this, currentState, context, _event, actionBlocks, predictableExec, this.machine.config.predictableActionArguments || this.machine.config.preserveActionOrder), 2),\n        resolvedActions = _c[0],\n        updatedContext = _c[1];\n\n    var _d = __read(partition(resolvedActions, function (action) {\n      return action.type === raise$1 || action.type === send && action.to === SpecialTargets.Internal;\n    }), 2),\n        raisedEvents = _d[0],\n        nonRaisedActions = _d[1];\n\n    var invokeActions = resolvedActions.filter(function (action) {\n      var _a;\n\n      return action.type === start$1 && ((_a = action.activity) === null || _a === void 0 ? void 0 : _a.type) === invoke;\n    });\n    var children = invokeActions.reduce(function (acc, action) {\n      acc[action.activity.id] = createInvocableActor(action.activity, _this.machine, updatedContext, _event);\n      return acc;\n    }, currentState ? __assign({}, currentState.children) : {});\n    var nextState = new State({\n      value: resolvedStateValue || currentState.value,\n      context: updatedContext,\n      _event: _event,\n      // Persist _sessionid between states\n      _sessionid: currentState ? currentState._sessionid : null,\n      historyValue: resolvedStateValue ? historyValue ? updateHistoryValue(historyValue, resolvedStateValue) : undefined : currentState ? currentState.historyValue : undefined,\n      history: !resolvedStateValue || stateTransition.source ? currentState : undefined,\n      actions: resolvedStateValue ? nonRaisedActions : [],\n      activities: resolvedStateValue ? activities : currentState ? currentState.activities : {},\n      events: [],\n      configuration: resolvedConfiguration,\n      transitions: stateTransition.transitions,\n      children: children,\n      done: isDone,\n      tags: getTagsFromConfiguration(resolvedConfiguration),\n      machine: this\n    });\n    var didUpdateContext = context !== updatedContext;\n    nextState.changed = _event.name === update || didUpdateContext; // Dispose of penultimate histories to prevent memory leaks\n\n    var history = nextState.history;\n\n    if (history) {\n      delete history.history;\n    } // There are transient transitions if the machine is not in a final state\n    // and if some of the state nodes have transient (\"always\") transitions.\n\n\n    var hasAlwaysTransitions = !isDone && (this._transient || configuration.some(function (stateNode) {\n      return stateNode._transient;\n    })); // If there are no enabled transitions, check if there are transient transitions.\n    // If there are transient transitions, continue checking for more transitions\n    // because an transient transition should be triggered even if there are no\n    // enabled transitions.\n    //\n    // If we're already working on an transient transition then stop to prevent an infinite loop.\n    //\n    // Otherwise, if there are no enabled nor transient transitions, we are done.\n\n    if (!willTransition && (!hasAlwaysTransitions || _event.name === NULL_EVENT)) {\n      return nextState;\n    }\n\n    var maybeNextState = nextState;\n\n    if (!isDone) {\n      if (hasAlwaysTransitions) {\n        maybeNextState = this.resolveRaisedTransition(maybeNextState, {\n          type: nullEvent\n        }, _event, predictableExec);\n      }\n\n      while (raisedEvents.length) {\n        var raisedEvent = raisedEvents.shift();\n        maybeNextState = this.resolveRaisedTransition(maybeNextState, raisedEvent._event, _event, predictableExec);\n      }\n    } // Detect if state changed\n\n\n    var changed = maybeNextState.changed || (history ? !!maybeNextState.actions.length || didUpdateContext || typeof history.value !== typeof maybeNextState.value || !stateValuesEqual(maybeNextState.value, history.value) : undefined);\n    maybeNextState.changed = changed; // Preserve original history after raised events\n\n    maybeNextState.history = history;\n    return maybeNextState;\n  };\n  /**\r\n   * Returns the child state node from its relative `stateKey`, or throws.\r\n   */\n\n\n  StateNode.prototype.getStateNode = function (stateKey) {\n    if (isStateId(stateKey)) {\n      return this.machine.getStateNodeById(stateKey);\n    }\n\n    if (!this.states) {\n      throw new Error(\"Unable to retrieve child state '\".concat(stateKey, \"' from '\").concat(this.id, \"'; no child states exist.\"));\n    }\n\n    var result = this.states[stateKey];\n\n    if (!result) {\n      throw new Error(\"Child state '\".concat(stateKey, \"' does not exist on '\").concat(this.id, \"'\"));\n    }\n\n    return result;\n  };\n  /**\r\n   * Returns the state node with the given `stateId`, or throws.\r\n   *\r\n   * @param stateId The state ID. The prefix \"#\" is removed.\r\n   */\n\n\n  StateNode.prototype.getStateNodeById = function (stateId) {\n    var resolvedStateId = isStateId(stateId) ? stateId.slice(STATE_IDENTIFIER.length) : stateId;\n\n    if (resolvedStateId === this.id) {\n      return this;\n    }\n\n    var stateNode = this.machine.idMap[resolvedStateId];\n\n    if (!stateNode) {\n      throw new Error(\"Child state node '#\".concat(resolvedStateId, \"' does not exist on machine '\").concat(this.id, \"'\"));\n    }\n\n    return stateNode;\n  };\n  /**\r\n   * Returns the relative state node from the given `statePath`, or throws.\r\n   *\r\n   * @param statePath The string or string array relative path to the state node.\r\n   */\n\n\n  StateNode.prototype.getStateNodeByPath = function (statePath) {\n    if (typeof statePath === 'string' && isStateId(statePath)) {\n      try {\n        return this.getStateNodeById(statePath.slice(1));\n      } catch (e) {// try individual paths\n        // throw e;\n      }\n    }\n\n    var arrayStatePath = toStatePath(statePath, this.delimiter).slice();\n    var currentStateNode = this;\n\n    while (arrayStatePath.length) {\n      var key = arrayStatePath.shift();\n\n      if (!key.length) {\n        break;\n      }\n\n      currentStateNode = currentStateNode.getStateNode(key);\n    }\n\n    return currentStateNode;\n  };\n  /**\r\n   * Resolves a partial state value with its full representation in this machine.\r\n   *\r\n   * @param stateValue The partial state value to resolve.\r\n   */\n\n\n  StateNode.prototype.resolve = function (stateValue) {\n    var _a;\n\n    var _this = this;\n\n    if (!stateValue) {\n      return this.initialStateValue || EMPTY_OBJECT; // TODO: type-specific properties\n    }\n\n    switch (this.type) {\n      case 'parallel':\n        return mapValues(this.initialStateValue, function (subStateValue, subStateKey) {\n          return subStateValue ? _this.getStateNode(subStateKey).resolve(stateValue[subStateKey] || subStateValue) : EMPTY_OBJECT;\n        });\n\n      case 'compound':\n        if (isString(stateValue)) {\n          var subStateNode = this.getStateNode(stateValue);\n\n          if (subStateNode.type === 'parallel' || subStateNode.type === 'compound') {\n            return _a = {}, _a[stateValue] = subStateNode.initialStateValue, _a;\n          }\n\n          return stateValue;\n        }\n\n        if (!Object.keys(stateValue).length) {\n          return this.initialStateValue || {};\n        }\n\n        return mapValues(stateValue, function (subStateValue, subStateKey) {\n          return subStateValue ? _this.getStateNode(subStateKey).resolve(subStateValue) : EMPTY_OBJECT;\n        });\n\n      default:\n        return stateValue || EMPTY_OBJECT;\n    }\n  };\n\n  StateNode.prototype.getResolvedPath = function (stateIdentifier) {\n    if (isStateId(stateIdentifier)) {\n      var stateNode = this.machine.idMap[stateIdentifier.slice(STATE_IDENTIFIER.length)];\n\n      if (!stateNode) {\n        throw new Error(\"Unable to find state node '\".concat(stateIdentifier, \"'\"));\n      }\n\n      return stateNode.path;\n    }\n\n    return toStatePath(stateIdentifier, this.delimiter);\n  };\n\n  Object.defineProperty(StateNode.prototype, \"initialStateValue\", {\n    get: function () {\n      var _a;\n\n      if (this.__cache.initialStateValue) {\n        return this.__cache.initialStateValue;\n      }\n\n      var initialStateValue;\n\n      if (this.type === 'parallel') {\n        initialStateValue = mapFilterValues(this.states, function (state) {\n          return state.initialStateValue || EMPTY_OBJECT;\n        }, function (stateNode) {\n          return !(stateNode.type === 'history');\n        });\n      } else if (this.initial !== undefined) {\n        if (!this.states[this.initial]) {\n          throw new Error(\"Initial state '\".concat(this.initial, \"' not found on '\").concat(this.key, \"'\"));\n        }\n\n        initialStateValue = isLeafNode(this.states[this.initial]) ? this.initial : (_a = {}, _a[this.initial] = this.states[this.initial].initialStateValue, _a);\n      } else {\n        // The finite state value of a machine without child states is just an empty object\n        initialStateValue = {};\n      }\n\n      this.__cache.initialStateValue = initialStateValue;\n      return this.__cache.initialStateValue;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  StateNode.prototype.getInitialState = function (stateValue, context) {\n    this._init(); // TODO: this should be in the constructor (see note in constructor)\n\n\n    var configuration = this.getStateNodes(stateValue);\n    return this.resolveTransition({\n      configuration: configuration,\n      entrySet: configuration,\n      exitSet: [],\n      transitions: [],\n      source: undefined,\n      actions: []\n    }, undefined, context !== null && context !== void 0 ? context : this.machine.context, undefined);\n  };\n\n  Object.defineProperty(StateNode.prototype, \"initialState\", {\n    /**\r\n     * The initial State instance, which includes all actions to be executed from\r\n     * entering the initial state.\r\n     */\n    get: function () {\n      var initialStateValue = this.initialStateValue;\n\n      if (!initialStateValue) {\n        throw new Error(\"Cannot retrieve initial state from simple state '\".concat(this.id, \"'.\"));\n      }\n\n      return this.getInitialState(initialStateValue);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(StateNode.prototype, \"target\", {\n    /**\r\n     * The target state value of the history state node, if it exists. This represents the\r\n     * default state value to transition to if no history value exists yet.\r\n     */\n    get: function () {\n      var target;\n\n      if (this.type === 'history') {\n        var historyConfig = this.config;\n\n        if (isString(historyConfig.target)) {\n          target = isStateId(historyConfig.target) ? pathToStateValue(this.machine.getStateNodeById(historyConfig.target).path.slice(this.path.length - 1)) : historyConfig.target;\n        } else {\n          target = historyConfig.target;\n        }\n      }\n\n      return target;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   * Returns the leaf nodes from a state path relative to this state node.\r\n   *\r\n   * @param relativeStateId The relative state path to retrieve the state nodes\r\n   * @param history The previous state to retrieve history\r\n   * @param resolve Whether state nodes should resolve to initial child state nodes\r\n   */\n\n  StateNode.prototype.getRelativeStateNodes = function (relativeStateId, historyValue, resolve) {\n    if (resolve === void 0) {\n      resolve = true;\n    }\n\n    return resolve ? relativeStateId.type === 'history' ? relativeStateId.resolveHistory(historyValue) : relativeStateId.initialStateNodes : [relativeStateId];\n  };\n\n  Object.defineProperty(StateNode.prototype, \"initialStateNodes\", {\n    get: function () {\n      var _this = this;\n\n      if (isLeafNode(this)) {\n        return [this];\n      } // Case when state node is compound but no initial state is defined\n\n\n      if (this.type === 'compound' && !this.initial) {\n        if (!IS_PRODUCTION) {\n          warn(false, \"Compound state node '\".concat(this.id, \"' has no initial state.\"));\n        }\n\n        return [this];\n      }\n\n      var initialStateNodePaths = toStatePaths(this.initialStateValue);\n      return flatten(initialStateNodePaths.map(function (initialPath) {\n        return _this.getFromRelativePath(initialPath);\n      }));\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   * Retrieves state nodes from a relative path to this state node.\r\n   *\r\n   * @param relativePath The relative path from this state node\r\n   * @param historyValue\r\n   */\n\n  StateNode.prototype.getFromRelativePath = function (relativePath) {\n    if (!relativePath.length) {\n      return [this];\n    }\n\n    var _a = __read(relativePath),\n        stateKey = _a[0],\n        childStatePath = _a.slice(1);\n\n    if (!this.states) {\n      throw new Error(\"Cannot retrieve subPath '\".concat(stateKey, \"' from node with no states\"));\n    }\n\n    var childStateNode = this.getStateNode(stateKey);\n\n    if (childStateNode.type === 'history') {\n      return childStateNode.resolveHistory();\n    }\n\n    if (!this.states[stateKey]) {\n      throw new Error(\"Child state '\".concat(stateKey, \"' does not exist on '\").concat(this.id, \"'\"));\n    }\n\n    return this.states[stateKey].getFromRelativePath(childStatePath);\n  };\n\n  StateNode.prototype.historyValue = function (relativeStateValue) {\n    if (!Object.keys(this.states).length) {\n      return undefined;\n    }\n\n    return {\n      current: relativeStateValue || this.initialStateValue,\n      states: mapFilterValues(this.states, function (stateNode, key) {\n        if (!relativeStateValue) {\n          return stateNode.historyValue();\n        }\n\n        var subStateValue = isString(relativeStateValue) ? undefined : relativeStateValue[key];\n        return stateNode.historyValue(subStateValue || stateNode.initialStateValue);\n      }, function (stateNode) {\n        return !stateNode.history;\n      })\n    };\n  };\n  /**\r\n   * Resolves to the historical value(s) of the parent state node,\r\n   * represented by state nodes.\r\n   *\r\n   * @param historyValue\r\n   */\n\n\n  StateNode.prototype.resolveHistory = function (historyValue) {\n    var _this = this;\n\n    if (this.type !== 'history') {\n      return [this];\n    }\n\n    var parent = this.parent;\n\n    if (!historyValue) {\n      var historyTarget = this.target;\n      return historyTarget ? flatten(toStatePaths(historyTarget).map(function (relativeChildPath) {\n        return parent.getFromRelativePath(relativeChildPath);\n      })) : parent.initialStateNodes;\n    }\n\n    var subHistoryValue = nestedPath(parent.path, 'states')(historyValue).current;\n\n    if (isString(subHistoryValue)) {\n      return [parent.getStateNode(subHistoryValue)];\n    }\n\n    return flatten(toStatePaths(subHistoryValue).map(function (subStatePath) {\n      return _this.history === 'deep' ? parent.getFromRelativePath(subStatePath) : [parent.states[subStatePath[0]]];\n    }));\n  };\n\n  Object.defineProperty(StateNode.prototype, \"stateIds\", {\n    /**\r\n     * All the state node IDs of this state node and its descendant state nodes.\r\n     */\n    get: function () {\n      var _this = this;\n\n      var childStateIds = flatten(Object.keys(this.states).map(function (stateKey) {\n        return _this.states[stateKey].stateIds;\n      }));\n      return [this.id].concat(childStateIds);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(StateNode.prototype, \"events\", {\n    /**\r\n     * All the event types accepted by this state node and its descendants.\r\n     */\n    get: function () {\n      var e_8, _a, e_9, _b;\n\n      if (this.__cache.events) {\n        return this.__cache.events;\n      }\n\n      var states = this.states;\n      var events = new Set(this.ownEvents);\n\n      if (states) {\n        try {\n          for (var _c = __values(Object.keys(states)), _d = _c.next(); !_d.done; _d = _c.next()) {\n            var stateId = _d.value;\n            var state = states[stateId];\n\n            if (state.states) {\n              try {\n                for (var _e = (e_9 = void 0, __values(state.events)), _f = _e.next(); !_f.done; _f = _e.next()) {\n                  var event_1 = _f.value;\n                  events.add(\"\".concat(event_1));\n                }\n              } catch (e_9_1) {\n                e_9 = {\n                  error: e_9_1\n                };\n              } finally {\n                try {\n                  if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n                } finally {\n                  if (e_9) throw e_9.error;\n                }\n              }\n            }\n          }\n        } catch (e_8_1) {\n          e_8 = {\n            error: e_8_1\n          };\n        } finally {\n          try {\n            if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n          } finally {\n            if (e_8) throw e_8.error;\n          }\n        }\n      }\n\n      return this.__cache.events = Array.from(events);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(StateNode.prototype, \"ownEvents\", {\n    /**\r\n     * All the events that have transitions directly from this state node.\r\n     *\r\n     * Excludes any inert events.\r\n     */\n    get: function () {\n      var events = new Set(this.transitions.filter(function (transition) {\n        return !(!transition.target && !transition.actions.length && transition.internal);\n      }).map(function (transition) {\n        return transition.eventType;\n      }));\n      return Array.from(events);\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  StateNode.prototype.resolveTarget = function (_target) {\n    var _this = this;\n\n    if (_target === undefined) {\n      // an undefined target signals that the state node should not transition from that state when receiving that event\n      return undefined;\n    }\n\n    return _target.map(function (target) {\n      if (!isString(target)) {\n        return target;\n      }\n\n      var isInternalTarget = target[0] === _this.delimiter; // If internal target is defined on machine,\n      // do not include machine key on target\n\n      if (isInternalTarget && !_this.parent) {\n        return _this.getStateNodeByPath(target.slice(1));\n      }\n\n      var resolvedTarget = isInternalTarget ? _this.key + target : target;\n\n      if (_this.parent) {\n        try {\n          var targetStateNode = _this.parent.getStateNodeByPath(resolvedTarget);\n\n          return targetStateNode;\n        } catch (err) {\n          throw new Error(\"Invalid transition definition for state node '\".concat(_this.id, \"':\\n\").concat(err.message));\n        }\n      } else {\n        return _this.getStateNodeByPath(resolvedTarget);\n      }\n    });\n  };\n\n  StateNode.prototype.formatTransition = function (transitionConfig) {\n    var _this = this;\n\n    var normalizedTarget = normalizeTarget(transitionConfig.target);\n    var internal = 'internal' in transitionConfig ? transitionConfig.internal : normalizedTarget ? normalizedTarget.some(function (_target) {\n      return isString(_target) && _target[0] === _this.delimiter;\n    }) : true;\n    var guards = this.machine.options.guards;\n    var target = this.resolveTarget(normalizedTarget);\n\n    var transition = __assign(__assign({}, transitionConfig), {\n      actions: toActionObjects(toArray(transitionConfig.actions)),\n      cond: toGuard(transitionConfig.cond, guards),\n      target: target,\n      source: this,\n      internal: internal,\n      eventType: transitionConfig.event,\n      toJSON: function () {\n        return __assign(__assign({}, transition), {\n          target: transition.target ? transition.target.map(function (t) {\n            return \"#\".concat(t.id);\n          }) : undefined,\n          source: \"#\".concat(_this.id)\n        });\n      }\n    });\n\n    return transition;\n  };\n\n  StateNode.prototype.formatTransitions = function () {\n    var e_10, _a;\n\n    var _this = this;\n\n    var onConfig;\n\n    if (!this.config.on) {\n      onConfig = [];\n    } else if (Array.isArray(this.config.on)) {\n      onConfig = this.config.on;\n    } else {\n      var _b = this.config.on,\n          _c = WILDCARD,\n          _d = _b[_c],\n          wildcardConfigs = _d === void 0 ? [] : _d,\n          strictTransitionConfigs_1 = __rest(_b, [typeof _c === \"symbol\" ? _c : _c + \"\"]);\n\n      onConfig = flatten(Object.keys(strictTransitionConfigs_1).map(function (key) {\n        if (!IS_PRODUCTION && key === NULL_EVENT) {\n          warn(false, \"Empty string transition configs (e.g., `{ on: { '': ... }}`) for transient transitions are deprecated. Specify the transition in the `{ always: ... }` property instead. \" + \"Please check the `on` configuration for \\\"#\".concat(_this.id, \"\\\".\"));\n        }\n\n        var transitionConfigArray = toTransitionConfigArray(key, strictTransitionConfigs_1[key]);\n\n        if (!IS_PRODUCTION) {\n          validateArrayifiedTransitions(_this, key, transitionConfigArray);\n        }\n\n        return transitionConfigArray;\n      }).concat(toTransitionConfigArray(WILDCARD, wildcardConfigs)));\n    }\n\n    var eventlessConfig = this.config.always ? toTransitionConfigArray('', this.config.always) : [];\n    var doneConfig = this.config.onDone ? toTransitionConfigArray(String(done(this.id)), this.config.onDone) : [];\n\n    if (!IS_PRODUCTION) {\n      warn(!(this.config.onDone && !this.parent), \"Root nodes cannot have an \\\".onDone\\\" transition. Please check the config of \\\"\".concat(this.id, \"\\\".\"));\n    }\n\n    var invokeConfig = flatten(this.invoke.map(function (invokeDef) {\n      var settleTransitions = [];\n\n      if (invokeDef.onDone) {\n        settleTransitions.push.apply(settleTransitions, __spreadArray([], __read(toTransitionConfigArray(String(doneInvoke(invokeDef.id)), invokeDef.onDone)), false));\n      }\n\n      if (invokeDef.onError) {\n        settleTransitions.push.apply(settleTransitions, __spreadArray([], __read(toTransitionConfigArray(String(error(invokeDef.id)), invokeDef.onError)), false));\n      }\n\n      return settleTransitions;\n    }));\n    var delayedTransitions = this.after;\n    var formattedTransitions = flatten(__spreadArray(__spreadArray(__spreadArray(__spreadArray([], __read(doneConfig), false), __read(invokeConfig), false), __read(onConfig), false), __read(eventlessConfig), false).map(function (transitionConfig) {\n      return toArray(transitionConfig).map(function (transition) {\n        return _this.formatTransition(transition);\n      });\n    }));\n\n    try {\n      for (var delayedTransitions_1 = __values(delayedTransitions), delayedTransitions_1_1 = delayedTransitions_1.next(); !delayedTransitions_1_1.done; delayedTransitions_1_1 = delayedTransitions_1.next()) {\n        var delayedTransition = delayedTransitions_1_1.value;\n        formattedTransitions.push(delayedTransition);\n      }\n    } catch (e_10_1) {\n      e_10 = {\n        error: e_10_1\n      };\n    } finally {\n      try {\n        if (delayedTransitions_1_1 && !delayedTransitions_1_1.done && (_a = delayedTransitions_1.return)) _a.call(delayedTransitions_1);\n      } finally {\n        if (e_10) throw e_10.error;\n      }\n    }\n\n    return formattedTransitions;\n  };\n\n  return StateNode;\n}();\n\nexport { StateNode };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}