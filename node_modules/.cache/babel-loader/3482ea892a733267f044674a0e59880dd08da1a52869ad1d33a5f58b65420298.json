{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport { Popup } from 'maplibre-gl';\nimport { ACTIVE_MARKER_COLOR, COLOR_WHITE, MARKER_COLOR } from \"./constants\";\nimport { createMarker } from \"./createMarker\";\nimport { getPopupRenderFunction } from \"./popupRender\";\nimport { isCoordinates } from \"./utils\";\nvar HIDE_TIP = \"amplify-tip\";\nexport function drawUnclusteredLayer(sourceName, map, _a) {\n  var _a$showMarkerPopup = _a.showMarkerPopup,\n    showMarkerPopup = _a$showMarkerPopup === void 0 ? false : _a$showMarkerPopup,\n    options = __rest(_a, [\"showMarkerPopup\"]);\n  var unclusteredLayerId = \"\".concat(sourceName, \"-layer-unclustered-point\");\n  var selectedId = null;\n  function deselectPoint() {\n    if (selectedId !== null) {\n      map.setLayoutProperty(unclusteredLayerId, \"icon-image\", \"inactive-marker\");\n      selectedId = null;\n    }\n  }\n  var popupRender = options.popupRender ? options.popupRender : getPopupRenderFunction(unclusteredLayerId, options);\n  addUnclusteredMarkerImages(map, options);\n  var defaultUnclusteredPoint = {\n    id: unclusteredLayerId,\n    type: \"symbol\",\n    source: sourceName,\n    filter: [\"!\", [\"has\", \"point_count\"]],\n    layout: {\n      \"icon-image\": \"inactive-marker\"\n    }\n  };\n  map.addLayer(Object.assign({}, defaultUnclusteredPoint));\n  /*\n   * Add css to header to hide default popup tip\n   */\n  if (showMarkerPopup) {\n    var element = document.getElementById(HIDE_TIP);\n    if (!element) {\n      var style = document.createElement(\"style\");\n      style.setAttribute(\"id\", HIDE_TIP);\n      document.head.append(style);\n      style.textContent = \".mapboxgl-popup-tip { display: none; }\";\n    }\n  }\n  map.on(\"click\", function () {\n    deselectPoint();\n  });\n  /*\n   * Set active state on markers when clicked\n   */\n  map.on(\"click\", unclusteredLayerId, function (e) {\n    if (typeof options.onClick === \"function\") options.onClick(e);\n    selectedId = e.features[0].id;\n    map.setLayoutProperty(unclusteredLayerId, \"icon-image\", [\"match\", [\"id\"], selectedId, \"active-marker\", \"inactive-marker\" // default\n    ]);\n    // If popup option is set show a popup on click\n    if (showMarkerPopup) {\n      var selectedFeature = e.features[0];\n      var coordinates = selectedFeature.geometry.coordinates;\n      if (isCoordinates(coordinates)) {\n        var popup = new Popup().setLngLat(coordinates).setHTML(popupRender(selectedFeature)).setOffset(15).addTo(map);\n        popup.on(\"close\", function () {\n          if (selectedId === selectedFeature.id) deselectPoint();\n        });\n      }\n    }\n  });\n  /*\n   * Set cursor style to pointer when mousing over point layer\n   */\n  map.on(\"mouseover\", unclusteredLayerId, function () {\n    map.getCanvas().style.cursor = \"pointer\";\n  });\n  /*\n   * Reset cursor style when the point layer\n   */\n  map.on(\"mouseleave\", unclusteredLayerId, function () {\n    map.getCanvas().style.cursor = \"\";\n  });\n  return {\n    unclusteredLayerId: unclusteredLayerId\n  };\n}\n/*\n * Adds marker images to the maplibre canvas to be used for rendering unclustered points\n */\nfunction addUnclusteredMarkerImages(map, _ref) {\n  var _ref$selectedColor = _ref.selectedColor,\n    selectedColor = _ref$selectedColor === void 0 ? ACTIVE_MARKER_COLOR : _ref$selectedColor,\n    _ref$selectedBorderCo = _ref.selectedBorderColor,\n    selectedBorderColor = _ref$selectedBorderCo === void 0 ? COLOR_WHITE : _ref$selectedBorderCo,\n    _ref$selectedBorderWi = _ref.selectedBorderWidth,\n    selectedBorderWidth = _ref$selectedBorderWi === void 0 ? 4 : _ref$selectedBorderWi,\n    _ref$defaultBorderCol = _ref.defaultBorderColor,\n    defaultBorderColor = _ref$defaultBorderCol === void 0 ? COLOR_WHITE : _ref$defaultBorderCol,\n    _ref$defaultBorderWid = _ref.defaultBorderWidth,\n    defaultBorderWidth = _ref$defaultBorderWid === void 0 ? 4 : _ref$defaultBorderWid,\n    _ref$defaultColor = _ref.defaultColor,\n    fillColor = _ref$defaultColor === void 0 ? MARKER_COLOR : _ref$defaultColor,\n    markerImageElement = _ref.markerImageElement,\n    activeMarkerImageElement = _ref.activeMarkerImageElement;\n  var inactiveMarker = markerImageElement || createMarker({\n    fillColor: fillColor,\n    strokeColor: defaultBorderColor,\n    lineWidth: defaultBorderWidth\n  });\n  var activeMarker = activeMarkerImageElement || markerImageElement || createMarker({\n    fillColor: selectedColor,\n    strokeColor: selectedBorderColor,\n    lineWidth: selectedBorderWidth\n  });\n  map.addImage(\"inactive-marker\", inactiveMarker, {\n    pixelRatio: 2\n  });\n  map.addImage(\"active-marker\", activeMarker, {\n    pixelRatio: 2\n  });\n}","map":{"version":3,"names":["__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","Popup","ACTIVE_MARKER_COLOR","COLOR_WHITE","MARKER_COLOR","createMarker","getPopupRenderFunction","isCoordinates","HIDE_TIP","drawUnclusteredLayer","sourceName","map","_a","showMarkerPopup","options","unclusteredLayerId","selectedId","deselectPoint","setLayoutProperty","popupRender","addUnclusteredMarkerImages","defaultUnclusteredPoint","id","type","source","filter","layout","addLayer","assign","element","document","getElementById","style","createElement","setAttribute","head","append","textContent","on","onClick","features","selectedFeature","coordinates","geometry","popup","setLngLat","setHTML","setOffset","addTo","getCanvas","cursor","selectedColor","selectedBorderColor","selectedBorderWidth","defaultBorderColor","defaultBorderWidth","defaultColor","fillColor","markerImageElement","activeMarkerImageElement","inactiveMarker","strokeColor","lineWidth","activeMarker","addImage","pixelRatio"],"sources":["/Users/carterbrewer/Downloads/trucker_app-main/node_modules/maplibre-gl-js-amplify/lib/esm/drawUnclusteredLayer.js"],"sourcesContent":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { Popup } from 'maplibre-gl';\nimport { ACTIVE_MARKER_COLOR, COLOR_WHITE, MARKER_COLOR } from \"./constants\";\nimport { createMarker } from \"./createMarker\";\nimport { getPopupRenderFunction } from \"./popupRender\";\nimport { isCoordinates } from \"./utils\";\nconst HIDE_TIP = \"amplify-tip\";\nexport function drawUnclusteredLayer(sourceName, map, _a) {\n    var { showMarkerPopup = false } = _a, options = __rest(_a, [\"showMarkerPopup\"]);\n    const unclusteredLayerId = `${sourceName}-layer-unclustered-point`;\n    let selectedId = null;\n    function deselectPoint() {\n        if (selectedId !== null) {\n            map.setLayoutProperty(unclusteredLayerId, \"icon-image\", \"inactive-marker\");\n            selectedId = null;\n        }\n    }\n    const popupRender = options.popupRender\n        ? options.popupRender\n        : getPopupRenderFunction(unclusteredLayerId, options);\n    addUnclusteredMarkerImages(map, options);\n    const defaultUnclusteredPoint = {\n        id: unclusteredLayerId,\n        type: \"symbol\",\n        source: sourceName,\n        filter: [\"!\", [\"has\", \"point_count\"]],\n        layout: {\n            \"icon-image\": \"inactive-marker\",\n        },\n    };\n    map.addLayer(Object.assign({}, defaultUnclusteredPoint));\n    /*\n     * Add css to header to hide default popup tip\n     */\n    if (showMarkerPopup) {\n        const element = document.getElementById(HIDE_TIP);\n        if (!element) {\n            const style = document.createElement(\"style\");\n            style.setAttribute(\"id\", HIDE_TIP);\n            document.head.append(style);\n            style.textContent = \".mapboxgl-popup-tip { display: none; }\";\n        }\n    }\n    map.on(\"click\", function () {\n        deselectPoint();\n    });\n    /*\n     * Set active state on markers when clicked\n     */\n    map.on(\"click\", unclusteredLayerId, function (e) {\n        if (typeof options.onClick === \"function\")\n            options.onClick(e);\n        selectedId = e.features[0].id;\n        map.setLayoutProperty(unclusteredLayerId, \"icon-image\", [\n            \"match\",\n            [\"id\"],\n            selectedId,\n            \"active-marker\",\n            \"inactive-marker\", // default\n        ]);\n        // If popup option is set show a popup on click\n        if (showMarkerPopup) {\n            const selectedFeature = e.features[0];\n            const coordinates = selectedFeature.geometry.coordinates;\n            if (isCoordinates(coordinates)) {\n                const popup = new Popup()\n                    .setLngLat(coordinates)\n                    .setHTML(popupRender(selectedFeature))\n                    .setOffset(15)\n                    .addTo(map);\n                popup.on(\"close\", function () {\n                    if (selectedId === selectedFeature.id)\n                        deselectPoint();\n                });\n            }\n        }\n    });\n    /*\n     * Set cursor style to pointer when mousing over point layer\n     */\n    map.on(\"mouseover\", unclusteredLayerId, function () {\n        map.getCanvas().style.cursor = \"pointer\";\n    });\n    /*\n     * Reset cursor style when the point layer\n     */\n    map.on(\"mouseleave\", unclusteredLayerId, () => {\n        map.getCanvas().style.cursor = \"\";\n    });\n    return { unclusteredLayerId };\n}\n/*\n * Adds marker images to the maplibre canvas to be used for rendering unclustered points\n */\nfunction addUnclusteredMarkerImages(map, { selectedColor = ACTIVE_MARKER_COLOR, selectedBorderColor = COLOR_WHITE, selectedBorderWidth = 4, defaultBorderColor = COLOR_WHITE, defaultBorderWidth = 4, defaultColor: fillColor = MARKER_COLOR, markerImageElement, activeMarkerImageElement, }) {\n    const inactiveMarker = markerImageElement ||\n        createMarker({\n            fillColor: fillColor,\n            strokeColor: defaultBorderColor,\n            lineWidth: defaultBorderWidth,\n        });\n    const activeMarker = activeMarkerImageElement ||\n        markerImageElement ||\n        createMarker({\n            fillColor: selectedColor,\n            strokeColor: selectedBorderColor,\n            lineWidth: selectedBorderWidth,\n        });\n    map.addImage(\"inactive-marker\", inactiveMarker, { pixelRatio: 2 });\n    map.addImage(\"active-marker\", activeMarker, { pixelRatio: 2 });\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}