{"ast":null,"code":"import _defineProperty from \"/Users/carterbrewer/Downloads/trucker_app-main/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _toConsumableArray from \"/Users/carterbrewer/Downloads/trucker_app-main/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport { __rest } from '../../../node_modules/tslib/tslib.es6.js';\nimport RenderNothing from '../../../components/RenderNothing/RenderNothing.js';\nimport { isComponentRouteKey } from '../utils.js';\nimport { MACHINE_PROP_KEYS, EVENT_HANDLER_KEY_MAP } from './constants.js';\n\n// only select `route` from machine context\nvar routeSelector = function routeSelector(_ref) {\n  var route = _ref.route;\n  return [route];\n};\nvar createSelector = function createSelector(selectorKeys) {\n  return function (context) {\n    var dependencies = selectorKeys.map(function (key) {\n      return context[key];\n    });\n    // route should always be part of deps, so hook knows when route changes.\n    return [].concat(_toConsumableArray(dependencies), [context.route]);\n  };\n};\nvar getRouteMachineSelector = function getRouteMachineSelector(route) {\n  return isComponentRouteKey(route) ? createSelector(MACHINE_PROP_KEYS[route]) : routeSelector;\n};\nvar isFormEventHandlerKey = function isFormEventHandlerKey(key) {\n  return ['updateBlur', 'updateForm', 'submitForm'].includes(key);\n};\nvar convertEventHandlerKey = function convertEventHandlerKey(key) {\n  return EVENT_HANDLER_KEY_MAP[key];\n};\nvar getConvertedMachineProps = function getConvertedMachineProps(route, context) {\n  return MACHINE_PROP_KEYS[route].reduce(function (acc, key) {\n    return Object.assign(Object.assign({}, acc), _defineProperty({}, isFormEventHandlerKey(key) ? convertEventHandlerKey(key) : key, context[key]));\n  }, {});\n};\nfunction resolveConfirmResetPasswordRoute(Component, props) {\n  return {\n    Component: Component,\n    props: Object.assign(Object.assign({}, Component), getConvertedMachineProps('confirmResetPassword', props))\n  };\n}\nfunction resolveConfirmSignInRoute(Component, props) {\n  var _a = getConvertedMachineProps('confirmSignIn', props),\n    user = _a.user,\n    machineProps = __rest(_a, [\"user\"]);\n  // prior to the `confirmSignIn` route, `user.username` is populated\n  var challengeName = user.challengeName;\n  return {\n    Component: Component,\n    props: Object.assign(Object.assign(Object.assign({}, Component), machineProps), {\n      challengeName: challengeName\n    })\n  };\n}\nfunction resolveConfirmSignUpRoute(Component, props) {\n  return {\n    Component: Component,\n    props: Object.assign(Object.assign({}, Component), getConvertedMachineProps('confirmSignUp', props))\n  };\n}\nfunction resolveConfirmVerifyUserRoute(Component, props) {\n  return {\n    Component: Component,\n    props: Object.assign(Object.assign({}, Component), getConvertedMachineProps('confirmVerifyUser', props))\n  };\n}\nfunction resolveForceNewPasswordRoute(Component, props) {\n  return {\n    Component: Component,\n    props: Object.assign(Object.assign({}, Component), getConvertedMachineProps('forceNewPassword', props))\n  };\n}\nfunction resolveResetPasswordRoute(Component, props) {\n  return {\n    Component: Component,\n    props: Object.assign(Object.assign({}, Component), getConvertedMachineProps('resetPassword', props))\n  };\n}\nfunction resolveSetupTOTPRoute(Component, _a) {\n  var getTotpSecretCode = _a.getTotpSecretCode,\n    props = __rest(_a, [\"getTotpSecretCode\"]);\n  return {\n    Component: Component,\n    props: Object.assign(Object.assign(Object.assign({}, Component), getConvertedMachineProps('setupTOTP', props)), {\n      getTotpSecretCode: getTotpSecretCode\n    })\n  };\n}\nfunction resolveSignInRoute(Component, props) {\n  // default `hideSignUp` to false\n  var hideSignUp = false;\n  return {\n    Component: Component,\n    props: Object.assign(Object.assign(Object.assign({}, Component), getConvertedMachineProps('signIn', props)), {\n      hideSignUp: hideSignUp\n    })\n  };\n}\nfunction resolveSignUpRoute(Component, props) {\n  return {\n    Component: Component,\n    props: Object.assign(Object.assign({}, Component), getConvertedMachineProps('signUp', props))\n  };\n}\nfunction resolveVerifyUserRoute(Component, props) {\n  return {\n    Component: Component,\n    props: Object.assign(Object.assign({}, Component), getConvertedMachineProps('verifyUser', props))\n  };\n}\nfunction resolveDefault() {\n  return {\n    Component: RenderNothing,\n    props: {}\n  };\n}\nexport { getRouteMachineSelector, resolveConfirmResetPasswordRoute, resolveConfirmSignInRoute, resolveConfirmSignUpRoute, resolveConfirmVerifyUserRoute, resolveDefault, resolveForceNewPasswordRoute, resolveResetPasswordRoute, resolveSetupTOTPRoute, resolveSignInRoute, resolveSignUpRoute, resolveVerifyUserRoute, routeSelector };","map":{"version":3,"names":["__rest","RenderNothing","isComponentRouteKey","MACHINE_PROP_KEYS","EVENT_HANDLER_KEY_MAP","routeSelector","route","createSelector","selectorKeys","context","dependencies","map","key","getRouteMachineSelector","isFormEventHandlerKey","includes","convertEventHandlerKey","getConvertedMachineProps","reduce","acc","Object","assign","resolveConfirmResetPasswordRoute","Component","props","resolveConfirmSignInRoute","_a","user","machineProps","challengeName","resolveConfirmSignUpRoute","resolveConfirmVerifyUserRoute","resolveForceNewPasswordRoute","resolveResetPasswordRoute","resolveSetupTOTPRoute","getTotpSecretCode","resolveSignInRoute","hideSignUp","resolveSignUpRoute","resolveVerifyUserRoute","resolveDefault"],"sources":["/Users/carterbrewer/Downloads/trucker_app-main/node_modules/@aws-amplify/ui-react-core/dist/esm/Authenticator/hooks/useAuthenticatorRoute/utils.js"],"sourcesContent":["import { __rest } from '../../../node_modules/tslib/tslib.es6.js';\nimport RenderNothing from '../../../components/RenderNothing/RenderNothing.js';\nimport { isComponentRouteKey } from '../utils.js';\nimport { MACHINE_PROP_KEYS, EVENT_HANDLER_KEY_MAP } from './constants.js';\n\n// only select `route` from machine context\nconst routeSelector = ({ route }) => [route];\nconst createSelector = (selectorKeys) => (context) => {\n    const dependencies = selectorKeys.map((key) => context[key]);\n    // route should always be part of deps, so hook knows when route changes.\n    return [...dependencies, context.route];\n};\nconst getRouteMachineSelector = (route) => isComponentRouteKey(route)\n    ? createSelector(MACHINE_PROP_KEYS[route])\n    : routeSelector;\nconst isFormEventHandlerKey = (key) => ['updateBlur', 'updateForm', 'submitForm'].includes(key);\nconst convertEventHandlerKey = (key) => EVENT_HANDLER_KEY_MAP[key];\nconst getConvertedMachineProps = (route, context) => MACHINE_PROP_KEYS[route].reduce((acc, key) => (Object.assign(Object.assign({}, acc), { [isFormEventHandlerKey(key) ? convertEventHandlerKey(key) : key]: context[key] })), {});\nfunction resolveConfirmResetPasswordRoute(Component, props) {\n    return {\n        Component,\n        props: Object.assign(Object.assign({}, Component), getConvertedMachineProps('confirmResetPassword', props)),\n    };\n}\nfunction resolveConfirmSignInRoute(Component, props) {\n    const _a = getConvertedMachineProps('confirmSignIn', props), { user } = _a, machineProps = __rest(_a, [\"user\"]);\n    // prior to the `confirmSignIn` route, `user.username` is populated\n    const challengeName = user.challengeName;\n    return { Component, props: Object.assign(Object.assign(Object.assign({}, Component), machineProps), { challengeName }) };\n}\nfunction resolveConfirmSignUpRoute(Component, props) {\n    return {\n        Component,\n        props: Object.assign(Object.assign({}, Component), getConvertedMachineProps('confirmSignUp', props)),\n    };\n}\nfunction resolveConfirmVerifyUserRoute(Component, props) {\n    return {\n        Component,\n        props: Object.assign(Object.assign({}, Component), getConvertedMachineProps('confirmVerifyUser', props)),\n    };\n}\nfunction resolveForceNewPasswordRoute(Component, props) {\n    return {\n        Component,\n        props: Object.assign(Object.assign({}, Component), getConvertedMachineProps('forceNewPassword', props)),\n    };\n}\nfunction resolveResetPasswordRoute(Component, props) {\n    return {\n        Component,\n        props: Object.assign(Object.assign({}, Component), getConvertedMachineProps('resetPassword', props)),\n    };\n}\nfunction resolveSetupTOTPRoute(Component, _a) {\n    var { getTotpSecretCode } = _a, props = __rest(_a, [\"getTotpSecretCode\"]);\n    return {\n        Component,\n        props: Object.assign(Object.assign(Object.assign({}, Component), getConvertedMachineProps('setupTOTP', props)), { getTotpSecretCode }),\n    };\n}\nfunction resolveSignInRoute(Component, props) {\n    // default `hideSignUp` to false\n    const hideSignUp = false;\n    return {\n        Component,\n        props: Object.assign(Object.assign(Object.assign({}, Component), getConvertedMachineProps('signIn', props)), { hideSignUp }),\n    };\n}\nfunction resolveSignUpRoute(Component, props) {\n    return {\n        Component,\n        props: Object.assign(Object.assign({}, Component), getConvertedMachineProps('signUp', props)),\n    };\n}\nfunction resolveVerifyUserRoute(Component, props) {\n    return {\n        Component,\n        props: Object.assign(Object.assign({}, Component), getConvertedMachineProps('verifyUser', props)),\n    };\n}\nfunction resolveDefault() {\n    return {\n        Component: RenderNothing,\n        props: {},\n    };\n}\n\nexport { getRouteMachineSelector, resolveConfirmResetPasswordRoute, resolveConfirmSignInRoute, resolveConfirmSignUpRoute, resolveConfirmVerifyUserRoute, resolveDefault, resolveForceNewPasswordRoute, resolveResetPasswordRoute, resolveSetupTOTPRoute, resolveSignInRoute, resolveSignUpRoute, resolveVerifyUserRoute, routeSelector };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}